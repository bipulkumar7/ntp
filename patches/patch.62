
Received: from louie.udel.edu by huey.udel.edu id ab01328; 23 May 94 14:36 EDT
Received: from faui45.informatik.uni-erlangen.de by louie.udel.edu id aa11538;
          23 May 94 14:34 EDT
Received: from faui43.informatik.uni-erlangen.de by uni-erlangen.de with SMTP;
	id AA11014 (5.65c-6/7.3v-FAU); Mon, 23 May 1994 20:34:08 +0200
Received: by immd4.informatik.uni-erlangen.de;
	id AA22337 (5.65c-6/7.3m-FAU); Mon, 23 May 1994 20:34:05 +0200
From: Frank Kardel <Frank.Kardel@informatik.uni-erlangen.de>
Message-Id: <199405231834.AA22337@faui43.informatik.uni-erlangen.de>
Subject: 3.3w patches
To: mills@udel.edu
Date: Mon, 23 May 94 20:34:03 DST
X-Mailer: ELM [version 2.3 PL11]

Hi, Dave,

last last patch i send you didn't quit make it into the distribution.
So I went thorugh the stuff again. Patches include:
	- fixes for parse
	- fixes for printf fmt/arg on Suns

cvs rdiff: Diffing clockstuff
cvs rdiff: Diffing compilers
cvs rdiff: Diffing conf
cvs rdiff: Diffing doc
cvs rdiff: Diffing gadget
cvs rdiff: Diffing gizmo
cvs rdiff: Diffing gizmo/include
cvs rdiff: Diffing hints
cvs rdiff: Diffing history
cvs rdiff: Diffing include
diff -c include/parse.h:1.1.1.10 include/parse.h:3.19
*** include/parse.h:1.1.1.10	Mon May 23 18:32:58 1994
--- include/parse.h	Mon May 23 18:32:59 1994
***************
*** 1,7 ****
  /*
!  * /src/NTP/REPOSITORY/v3/include/parse.h,v 3.18 1994/05/12 12:40:34 kardel Exp
   *
!  * parse.h,v 3.18 1994/05/12 12:40:34 kardel Exp
   *
   * Copyright (c) 1989,1990,1991,1992,1993,1994
   * Frank Kardel Friedrich-Alexander Universitaet Erlangen-Nuernberg
--- 1,7 ----
  /*
!  * /src/NTP/REPOSITORY/v3/include/parse.h,v 3.19 1994/05/15 11:30:33 kardel Exp
   *
!  * parse.h,v 3.19 1994/05/15 11:30:33 kardel Exp
   *
   * Copyright (c) 1989,1990,1991,1992,1993,1994
   * Frank Kardel Friedrich-Alexander Universitaet Erlangen-Nuernberg
***************
*** 15,21 ****
  #ifndef __PARSE_H__
  #define __PARSE_H__
  #if	!(defined(lint) || defined(__GNUC__))
!   static char parsehrcsid[]="parse.h,v 3.18 1994/05/12 12:40:34 kardel Exp";
  #endif
  
  #include "ntp_types.h"
--- 15,21 ----
  #ifndef __PARSE_H__
  #define __PARSE_H__
  #if	!(defined(lint) || defined(__GNUC__))
!   static char parsehrcsid[]="parse.h,v 3.19 1994/05/15 11:30:33 kardel Exp";
  #endif
  
  #include "ntp_types.h"
***************
*** 155,160 ****
--- 155,161 ----
  #define   PARSE_STAT_FILTER 0x01	/* filter incoming data */
  #define   PARSE_STAT_AVG	  0x02	/* 1:median average / 0: median point */
  #define PARSE_LEAP_DELETE   0x04	/* delete leap */
+ #define PARSE_STATISTICS    0x08	/* enable statistics */
  #define PARSE_FIXED_FMT     0x10  /* fixed format */
  #define PARSE_PPSCLOCK      0x20  /* try to get PPS time stamp via ppsclock ioctl */
  
***************
*** 391,397 ****
  /*
   * History:
   *
!  * parse.h,v
   * Revision 3.18  1994/05/12  12:40:34  kardel
   * shut up gcc about broken Sun/BSD code
   *
--- 392,401 ----
  /*
   * History:
   *
!  * parse.h,v
!  * Revision 3.19  1994/05/15  11:30:33  kardel
!  * documented flag4 as statistics enable flag
!  *
   * Revision 3.18  1994/05/12  12:40:34  kardel
   * shut up gcc about broken Sun/BSD code
   *
diff -c lib/numtoa.c:1.1.1.9 lib/numtoa.c:3.5
*** lib/numtoa.c:1.1.1.9	Mon May 23 18:33:36 1994
--- lib/numtoa.c	Mon May 23 18:33:36 1994
***************
*** 9,22 ****
  
  char *
  numtoa(num)
! 	U_LONG num;
  {
! 	register U_LONG netnum;
  	register char *buf;
  
! 	netnum = ntohl(num);
  	LIB_GETBUF(buf);
! 	(void) sprintf(buf, "%d.%d.%d.%d", (netnum >> 24) & 0xff,
  	    (netnum >> 16) & 0xff, (netnum >> 8) & 0xff, netnum & 0xff);
  	return buf;
  }
--- 9,22 ----
  
  char *
  numtoa(num)
! 	U_LONG num;
  {
! 	register u_long netnum;
  	register char *buf;
  
! 	netnum = (u_long)ntohl(num);
  	LIB_GETBUF(buf);
! 	(void) sprintf(buf, "%lu.%lu.%lu.%lu", (netnum >> 24) & 0xff,
  	    (netnum >> 16) & 0xff, (netnum >> 8) & 0xff, netnum & 0xff);
  	return buf;
  }
diff -c ntpdate/ntpdate.h:1.1.1.8 ntpdate/ntpdate.h:3.6
*** ntpdate/ntpdate.h:1.1.1.8	Mon May 23 18:34:04 1994
--- ntpdate/ntpdate.h	Mon May 23 18:34:05 1994
***************
*** 87,89 ****
--- 87,92 ----
   */
  #define	DEFTIMEOUT	5		/* 5 timer increments */
  #define	DEFSAMPLES	4		/* get 4 samples per server */
+ #ifndef DEFPRECISION
+ #define	DEFPRECISION	(-5)		/* the precision we claim */
+ #endif
cvs rdiff: Diffing ntpq
cvs rdiff: Diffing parse
diff -c parse/parse.c:1.1.1.11 parse/parse.c:3.25
*** parse/parse.c:1.1.1.11	Mon May 23 18:34:17 1994
--- parse/parse.c	Mon May 23 18:34:17 1994
***************
*** 1,8 ****
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS))
  /*
!  * /src/NTP/REPOSITORY/v3/parse/parse.c,v 3.23 1994/03/25 13:09:02 kardel Exp
   *  
!  * parse.c,v 3.23 1994/03/25 13:09:02 kardel Exp
   *
   * Parser module for reference clock
   *
--- 1,8 ----
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS))
  /*
!  * /src/NTP/REPOSITORY/v3/parse/parse.c,v 3.25 1994/05/12 12:49:12 kardel Exp
   *  
!  * parse.c,v 3.25 1994/05/12 12:49:12 kardel Exp
   *
   * Parser module for reference clock
   *
***************
*** 476,482 ****
  
  #ifdef DEBUG
    if ((updated & CVT_MASK) != CVT_NONE)
!     parseprintf(DD_PARSE, ("parse_ioread: time sample accumulated (status=0x%x)\n", updated));
  #endif
  
    parseio->parse_dtime.parse_status = updated;
--- 476,484 ----
  
  #ifdef DEBUG
    if ((updated & CVT_MASK) != CVT_NONE)
!     {
!       parseprintf(DD_PARSE, ("parse_ioread: time sample accumulated (status=0x%x)\n", updated));
!     }
  #endif
  
    parseio->parse_dtime.parse_status = updated;
***************
*** 823,829 ****
      }
    
    parseprintf(DD_PARSE,("parse: updatetimeinfo: T=%x+%d usec, useccoff=%d, usecerror=%d, usecdisp=%d\n",
! 		      t, usec, usecoff, parseio->parse_dtime.parse_usecerror, parseio->parse_dtime.parse_usecdisp));
    
  
  #ifdef PARSEKERNEL
--- 825,832 ----
      }
    
    parseprintf(DD_PARSE,("parse: updatetimeinfo: T=%x+%d usec, useccoff=%d, usecerror=%d, usecdisp=%d\n",
! 			(int)t, (int)usec, (int)usecoff, (int)parseio->parse_dtime.parse_usecerror,
! 			(int)parseio->parse_dtime.parse_usecdisp));
    
  
  #ifdef PARSEKERNEL
***************
*** 1161,1167 ****
  /*
   * History:
   *
!  * parse.c,v
   * Revision 3.23  1994/03/25  13:09:02  kardel
   * considering FIXEDONLY entries only in FIXEDONLY mode
   *
--- 1164,1176 ----
  /*
   * History:
   *
!  * parse.c,v
!  * Revision 3.25  1994/05/12  12:49:12  kardel
!  * printf fmt/arg cleanup
!  *
!  * Revision 3.24  1994/03/27  15:01:36  kardel
!  * reorder include file to cope with PTX
!  *
   * Revision 3.23  1994/03/25  13:09:02  kardel
   * considering FIXEDONLY entries only in FIXEDONLY mode
   *
diff -c parse/util/dcfd.c:1.1.1.5 parse/util/dcfd.c:3.18
*** parse/util/dcfd.c:1.1.1.5	Mon May 23 18:34:21 1994
--- parse/util/dcfd.c	Mon May 23 18:34:21 1994
***************
*** 1,7 ****
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/dcfd.c,v 3.15 1994/01/25 19:05:42 kardel Exp
   *  
!  * dcfd.c,v 3.15 1994/01/25 19:05:42 kardel Exp
   *
   * DCF77 100/200ms pulse synchronisation daemon program (via 50Baud serial line)
   *
--- 1,7 ----
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/dcfd.c,v 3.18 1994/05/12 12:49:23 kardel Exp
   *  
!  * dcfd.c,v 3.18 1994/05/12 12:49:23 kardel Exp
   *
   * DCF77 100/200ms pulse synchronisation daemon program (via 50Baud serial line)
   *
***************
*** 703,708 ****
--- 703,713 ----
     * if everything went well so far return the result of the symbolic
     * conversion routine else just the accumulated errors
     */
+   if (rtc != CVT_NONE) 
+     {
+       PRINTF("%-30s", "*** BAD DATA");
+     }
+ 
    return (rtc == CVT_NONE) ? convert_rawdcf(buffer, size, clock) : rtc;
  }
  
***************
*** 864,872 ****
    static char buf[20];
  
    if (val->tv_sec == 0)
!     sprintf(buf, "%c0.%06d", (val->tv_usec < 0) ? '-' : '+', abs(val->tv_usec));
    else
!     sprintf(buf, "%d.%06d", val->tv_sec, abs(val->tv_usec));
    return buf;
  }
  
--- 869,877 ----
    static char buf[20];
  
    if (val->tv_sec == 0)
!     sprintf(buf, "%c0.%06ld", (val->tv_usec < 0) ? '-' : '+', (long int)abs(val->tv_usec));
    else
!     sprintf(buf, "%ld.%06ld", (long int)val->tv_sec, (long int)abs(val->tv_usec));
    return buf;
  }
  
***************
*** 912,918 ****
    time_offset.tv_sec  = offset / 1000000;
    time_offset.tv_usec = offset % 1000000;
  
!   LPRINTF("adj_time: %d us ", offset);
    if (adjtime(&time_offset, 0L) == -1)
      perror("adjtime()");
  }
--- 917,923 ----
    time_offset.tv_sec  = offset / 1000000;
    time_offset.tv_usec = offset % 1000000;
  
!   LPRINTF("adj_time: %ld us ", (long int)offset);
    if (adjtime(&time_offset, 0L) == -1)
      perror("adjtime()");
  }
***************
*** 937,943 ****
        drift_comp = idrift << USECSCALE;
        fdrift     = (fdrift << USECSCALE) / 1000;
        drift_comp += fdrift & (1<<USECSCALE);
!       LPRINTF("read_drift: drift_comp %d ", drift_comp);
      }
  }
  
--- 942,948 ----
        drift_comp = idrift << USECSCALE;
        fdrift     = (fdrift << USECSCALE) / 1000;
        drift_comp += fdrift & (1<<USECSCALE);
!       LPRINTF("read_drift: drift_comp %ld ", (long int)drift_comp);
      }
  }
  
***************
*** 957,967 ****
        int idrift = R_SHIFT(drift_comp, USECSCALE);
        int fdrift = drift_comp & ((1<<USECSCALE)-1);
  
!       LPRINTF("update_drift: drift_comp %d ", drift_comp);
        fdrift = (fdrift * 1000) / (1<<USECSCALE);
!       fprintf(df, "%4d.%03d %c%d.%06d %.24s\n", idrift, fdrift,
! 	      (offset < 0) ? '-' : '+', abs(offset) / 1000000, abs(offset) % 1000000,
! 	      asctime(localtime(&reftime)));
        fclose(df);
        LPRINTF("update_drift: %d.%03d ppm ", idrift, fdrift);
      }
--- 962,972 ----
        int idrift = R_SHIFT(drift_comp, USECSCALE);
        int fdrift = drift_comp & ((1<<USECSCALE)-1);
  
!       LPRINTF("update_drift: drift_comp %ld ", (long int)drift_comp);
        fdrift = (fdrift * 1000) / (1<<USECSCALE);
!       fprintf(df, "%4d.%03d %c%ld.%06ld %.24s\n", idrift, fdrift,
! 	      (offset < 0) ? '-' : '+', (long int)(abs(offset) / 1000000),
! 	      (long int)(abs(offset) % 1000000), asctime(localtime(&reftime)));
        fclose(df);
        LPRINTF("update_drift: %d.%03d ppm ", idrift, fdrift);
      }
***************
*** 1023,1030 ****
        drift_comp = -MAX_DRIFT;
  
    update_drift(drift_file, usecoffset, reftime);
!   LPRINTF("clock_adjust: %s, clock_adjust %d, drift_comp %d(%d) ",
! 		  pr_timeval(offset), R_SHIFT(clock_adjust, USECSCALE) , R_SHIFT(drift_comp, USECSCALE), drift_comp);
  }
  
  /*-----------------------------------------------------------------------
--- 1028,1036 ----
        drift_comp = -MAX_DRIFT;
  
    update_drift(drift_file, usecoffset, reftime);
!   LPRINTF("clock_adjust: %s, clock_adjust %ld, drift_comp %ld(%ld) ",
! 	  pr_timeval(offset),(long int) R_SHIFT(clock_adjust, USECSCALE),
! 	  (long int)R_SHIFT(drift_comp, USECSCALE), (long int)drift_comp);
  }
  
  /*-----------------------------------------------------------------------
***************
*** 1303,1310 ****
  
        memset(term.c_cc, 0, sizeof(term.c_cc));
        term.c_cc[VMIN] = 1;
!       term.c_cflag = B50|CS8|CREAD|CLOCAL;
!       term.c_iflag = 0;
        term.c_oflag = 0;
        term.c_lflag = 0;
  
--- 1309,1316 ----
  
        memset(term.c_cc, 0, sizeof(term.c_cc));
        term.c_cc[VMIN] = 1;
!       term.c_cflag = B50|CS8|CREAD|CLOCAL|PARENB;
!       term.c_iflag = IGNPAR;
        term.c_oflag = 0;
        term.c_lflag = 0;
  
***************
*** 1369,1375 ****
        (void) alarm(1<<ADJINTERVAL);
  #endif
  
!       PRINTF("  DCF77 monitor - Copyright 1993, Frank Kardel\n\n");
  
        pbuf[60] = '\0';
        for ( i = 0; i < 60; i++)
--- 1375,1381 ----
        (void) alarm(1<<ADJINTERVAL);
  #endif
  
!       PRINTF("  DCF77 monitor - Copyright 1993,1994, Frank Kardel\n\n");
  
        pbuf[60] = '\0';
        for ( i = 0; i < 60; i++)
***************
*** 1423,1428 ****
--- 1429,1440 ----
  			}
  		      errs++;
  		    }
+ 		  else
+ 		    if (trace)
+ 		      {
+ 			PRINTF("\r  %.*s ", 59 - offset, &buf[offset]);
+ 		      }
+ 
  
  		  buf[0] = c;
  
***************
*** 1491,1501 ****
  
  	      if (rtc == CVT_OK)
  		{
- 		  if (trace && (i == 0))
- 		    {
- 		      PRINTF("\r  %.*s ", 59 - offset, &buf[offset]);
- 		    }
- 
  		  if (i == 0)
  		    {
  		      /*
--- 1503,1508 ----
diff -c parse/util/testdcf.c:1.1.1.7 parse/util/testdcf.c:3.13
*** parse/util/testdcf.c:1.1.1.7	Mon May 23 18:34:23 1994
--- parse/util/testdcf.c	Mon May 23 18:34:23 1994
***************
*** 1,7 ****
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/testdcf.c,v 3.11 1994/02/02 17:45:55 kardel Exp
   *  
!  * testdcf.c,v 3.11 1994/02/02 17:45:55 kardel Exp
   *
   * simple DCF77 100/200ms pulse test program (via 50Baud serial line)
   *
--- 1,7 ----
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/testdcf.c,v 3.13 1994/05/12 12:49:31 kardel Exp
   *  
!  * testdcf.c,v 3.13 1994/05/12 12:49:31 kardel Exp
   *
   * simple DCF77 100/200ms pulse test program (via 50Baud serial line)
   *
***************
*** 354,361 ****
  
  	  memset(term.c_cc, 0, sizeof(term.c_cc));
  	  term.c_cc[VMIN] = 1;
! 	  term.c_cflag = B50|CS8|CREAD|CLOCAL;
! 	  term.c_iflag = 0;
  	  term.c_oflag = 0;
  	  term.c_lflag = 0;
  
--- 354,361 ----
  
  	  memset(term.c_cc, 0, sizeof(term.c_cc));
  	  term.c_cc[VMIN] = 1;
! 	  term.c_cflag = B50|CS8|CREAD|CLOCAL|PARENB;
! 	  term.c_iflag = IGNPAR;
  	  term.c_oflag = 0;
  	  term.c_lflag = 0;
  
***************
*** 411,418 ****
  		}
  
  	      if (t.tv_sec > 1 ||
! 		  t.tv_sec == 1 &&
! 		  t.tv_usec > 500000)
  		{
  	          printf("%c %.*s ", pat[i % (sizeof(pat)-1)], 59 - offset, &buf[offset]);
  
--- 411,418 ----
  		}
  
  	      if (t.tv_sec > 1 ||
! 		  (t.tv_sec == 1 &&
! 		   t.tv_usec > 500000))
  		{
  	          printf("%c %.*s ", pat[i % (sizeof(pat)-1)], 59 - offset, &buf[offset]);
  
***************
*** 453,460 ****
  		{
  		  printf("%s, %2d:%02d:%02d, %d.%02d.%02d, <%s%s%s%s>",
  			wday[clock.wday],
! 			clock.hour, clock.minute, i, clock.day, clock.month,
! 			clock.year,
  			(clock.flags & DCFB_ALTERNATE) ? "R" : "_",
  			(clock.flags & DCFB_ANNOUNCE) ? "A" : "_",
  			(clock.flags & DCFB_DST) ? "D" : "_",
--- 453,460 ----
  		{
  		  printf("%s, %2d:%02d:%02d, %d.%02d.%02d, <%s%s%s%s>",
  			wday[clock.wday],
! 			(int)clock.hour, (int)clock.minute, (int)i, (int)clock.day, (int)clock.month,
! 			(int)clock.year,
  			(clock.flags & DCFB_ALTERNATE) ? "R" : "_",
  			(clock.flags & DCFB_ANNOUNCE) ? "A" : "_",
  			(clock.flags & DCFB_DST) ? "D" : "_",
cvs rdiff: Diffing patches
cvs rdiff: Diffing ppsclock
cvs rdiff: Diffing ppsclock/ppstest
cvs rdiff: Diffing ppsclock/sys
cvs rdiff: Diffing ppsclock/sys/genassym
cvs rdiff: Diffing ppsclock/sys/os
cvs rdiff: Diffing ppsclock/sys/sun
cvs rdiff: Diffing ppsclock/sys/sun4c
cvs rdiff: Diffing ppsclock/sys/sun4c/conf
cvs rdiff: Diffing ppsclock/sys/sun4m
cvs rdiff: Diffing ppsclock/sys/sun4m/conf
cvs rdiff: Diffing ppsclock/sys/sundev
cvs rdiff: Diffing ppsclock/sys/sys
cvs rdiff: Diffing refclocks
diff -c refclocks/rconfig:1.1.1.4 refclocks/rconfig:1.11
*** refclocks/rconfig:1.1.1.4	Mon May 23 18:34:43 1994
--- refclocks/rconfig	Mon May 23 18:34:43 1994
***************
*** 23,32 ****
--- 23,37 ----
  else
    config="`egrep '^[ 	]*CLOCKDEFS[ 	]*=' Config.local | sed 's/\([^#]*\)#.*$/\1/g; s/[ 	]*CLOCKDEFS[ 	]*=//g; s/-D//g; s/[ 	][ 	]*/ /g; s/^ *//g; s/ *$//g;'`"
    DEFS="`egrep '^[ 	]*DEFS[ 	]*=' Config | sed 's/\([^#]*\)#.*$/\1/g; s/[ 	]*DEFS[ 	]*=//g; s/-D//g; s/[ 	][ 	]*/ /g; s/^ *//g; s/ *$//g;'`"
+   DEFSLOCAL="`egrep '^[ 	]*DEFS_LOCAL[ 	]*=' Config.local | sed 's/\([^#]*\)#.*$/\1/g; s/[ 	]*DEFS_LOCAL[ 	]*=//g; s/-D//g; s/[ 	][ 	]*/ /g; s/^ *//g; s/ *$//g;'`"
    if [ ! "$REFCONF" ]; then
      echo
      echo "Current configuration"
      echo
+     if check "$DEFSLOCAL" '$0 ~ /MCAST/'; then
+       echo "==> MULTICAST SUPPORT (if available)"
+       echo
+     fi
      for i in $rcfg
      do
        sh $i check "$config" "" "" "$DEFS" "$REFCONF"
***************
*** 78,83 ****
--- 83,94 ----
  	PPS="-DPPS $PPS"
        fi
      fi
+     if (check "$REFCONF" '$0 ~ /MCAST/' ||
+ 	( [ ! "$REFCONF" ] && query "Do you want allow for multicast support (if available) ?" y)); then
+ 	MCAST="-DMCAST"
+       else
+ 	MCAST=""
+     fi
      for i in $rcfg
      do
        sh $i config "$RCONFIG" "$PPSFEATURES" "$PPSOK" "$DEFS" "$REFCONF"
***************
*** 98,104 ****
        fi
      fi
      if sed -e 's/^[ 	]*CLOCKDEFS[ 	]*=.*$/CLOCKDEFS='"$CLOCKDEFS"'/;' \
!         -e 's/^[ 	]*DEFS_LOCAL[ 	]*=.*$/DEFS_LOCAL= $(DEFS_OPT) '"$PPS"'/;' \
  	Config.local > Config.local.new; then
        mv Config.local Config.local.old &&
          mv Config.local.new Config.local &&
--- 109,115 ----
        fi
      fi
      if sed -e 's/^[ 	]*CLOCKDEFS[ 	]*=.*$/CLOCKDEFS='"$CLOCKDEFS"'/;' \
!         -e 's/^[ 	]*DEFS_LOCAL[ 	]*=.*$/DEFS_LOCAL= $(DEFS_OPT) '"$PPS $MCAST"'/;' \
  	Config.local > Config.local.new; then
        mv Config.local Config.local.old &&
          mv Config.local.new Config.local &&
***************
*** 106,112 ****
        echo
        echo "New configuration defines:"
        echo "	CLOCKDEFS=$CLOCKDEFS"
!       echo "	DEFS_LOCAL="'$(DEFS_OPT)'" $PPS"
        echo
        echo "Configuration updated"
      else
--- 117,123 ----
        echo
        echo "New configuration defines:"
        echo "	CLOCKDEFS=$CLOCKDEFS"
!       echo "	DEFS_LOCAL="'$(DEFS_OPT)'" $PPS $MCAST"
        echo
        echo "Configuration updated"
      else
cvs rdiff: Diffing scripts
cvs rdiff: Diffing scripts/monitoring
cvs rdiff: Diffing scripts/stats
cvs rdiff: Diffing scripts/support
cvs rdiff: Diffing scripts/support/bin
cvs rdiff: Diffing scripts/support/conf
cvs rdiff: Diffing scripts/support/etc
cvs rdiff: Diffing supportscripts
cvs rdiff: Diffing supportscripts/bin
cvs rdiff: Diffing supportscripts/conf
cvs rdiff: Diffing supportscripts/etc
cvs rdiff: Diffing util
cvs rdiff: Diffing xntpd
diff -c xntpd/Makefile.tmpl:1.1.1.20 xntpd/Makefile.tmpl:3.29
*** xntpd/Makefile.tmpl:1.1.1.20	Mon May 23 18:35:11 1994
--- xntpd/Makefile.tmpl	Mon May 23 18:35:11 1994
***************
*** 29,52 ****
  SOURCE=	ntp_config.c ntp_control.c ntp_io.c ntp_leap.c \
  	ntp_loopfilter.c ntp_monitor.c ntp_peer.c ntp_proto.c \
  	ntp_refclock.c ntp_request.c ntp_restrict.c ntp_timer.c \
! 	ntp_unixclock.c ntp_util.c ntpd.c refclock_chu.c \
! 	refclock_conf.c refclock_local.c refclock_pst.c \
! 	refclock_wwvb.c refclock_goes.c refclock_mx4200.c \
! 	refclock_parse.c refclock_as2201.c refclock_omega.c \
! 	refclock_tpro.c refclock_leitch.c refclock_irig.c \
! 	refclock_msfees.c refclock_gpstm.c refclock_trak.c \
! 	ntp_intres.c ntp_filegen.c refclock_datum.c
  
  OBJS=	ntp_config.o ntp_control.o ntp_io.o ntp_leap.o \
  	ntp_loopfilter.o ntp_monitor.o ntp_peer.o ntp_proto.o \
  	ntp_refclock.o ntp_request.o ntp_restrict.o ntp_timer.o \
! 	ntp_unixclock.o ntp_util.o ntpd.o refclock_chu.o \
! 	refclock_conf.o refclock_local.o refclock_pst.o \
! 	refclock_wwvb.o refclock_goes.o refclock_mx4200.o \
! 	refclock_parse.o refclock_as2201.o refclock_omega.o \
! 	refclock_tpro.o refclock_leitch.o refclock_irig.o \
! 	refclock_msfees.o refclock_gpstm.o refclock_trak.o \
! 	ntp_intres.o ntp_filegen.o refclock_datum.o
  
  all:	$(PROGRAM)
  
--- 29,53 ----
  SOURCE=	ntp_config.c ntp_control.c ntp_io.c ntp_leap.c \
  	ntp_loopfilter.c ntp_monitor.c ntp_peer.c ntp_proto.c \
  	ntp_refclock.c ntp_request.c ntp_restrict.c ntp_timer.c \
! 	ntp_unixclock.c ntp_util.c ntp_intres.c ntp_filegen.c ntpd.c \
! 	refclock_conf.c refclock_chu.c refclock_local.c \
! 	refclock_pst.c refclock_wwvb.c refclock_goes.c \
! 	refclock_mx4200.c refclock_parse.c refclock_as2201.c \
! 	refclock_omega.c refclock_tpro.c refclock_leitch.c \
! 	refclock_irig.c refclock_msfees.c refclock_gpstm.c \
! 	refclock_trak.c refclock_datum.c
  
  OBJS=	ntp_config.o ntp_control.o ntp_io.o ntp_leap.o \
  	ntp_loopfilter.o ntp_monitor.o ntp_peer.o ntp_proto.o \
  	ntp_refclock.o ntp_request.o ntp_restrict.o ntp_timer.o \
! 	ntp_unixclock.o ntp_util.o ntp_intres.o ntp_filegen.o ntpd.o \
! 	refclock_conf.o refclock_chu.o refclock_local.o \
! 	refclock_pst.o refclock_wwvb.o refclock_goes.o \
! 	refclock_mx4200.o refclock_parse.o refclock_as2201.o \
! 	refclock_omega.o refclock_tpro.o refclock_leitch.o \
! 	refclock_irig.o refclock_msfees.o refclock_gpstm.o \
! 	refclock_trak.o refclock_datum.o
! 	
  
  all:	$(PROGRAM)
  
diff -c xntpd/ntp_config.c:1.1.1.25 xntpd/ntp_config.c:3.29
*** xntpd/ntp_config.c:1.1.1.25	Mon May 23 18:35:12 1994
--- xntpd/ntp_config.c	Mon May 23 18:35:12 1994
***************
*** 1656,1663 ****
  		netnum += temp;
  #ifdef DEBUG
  	if (debug > 3)
! 		printf("getnetnum %s step %d buf %s temp %d netnum %d\n",
! 		    num, i, buf, temp, netnum);
  #endif
  	}
  
--- 1656,1663 ----
  		netnum += temp;
  #ifdef DEBUG
  	if (debug > 3)
! 		printf("getnetnum %s step %d buf %s temp %d netnum %lu\n",
! 		    num, i, buf, temp, (u_long)netnum);
  #endif
  	}
  
***************
*** 1684,1691 ****
  	addr->sin_addr.s_addr = htonl(netnum);
  #ifdef DEBUG
  	if (debug > 1)
! 		printf("getnetnum given %s, got %s (%x)\n",
! 		    num, ntoa(addr), netnum);
  #endif
  	return 1;
  }
--- 1684,1691 ----
  	addr->sin_addr.s_addr = htonl(netnum);
  #ifdef DEBUG
  	if (debug > 1)
! 		printf("getnetnum given %s, got %s (%lx)\n",
! 		    num, ntoa(addr), (u_long)netnum);
  #endif
  	return 1;
  }
diff -c xntpd/ntp_control.c:1.1.1.23 xntpd/ntp_control.c:3.32
*** xntpd/ntp_control.c:1.1.1.23	Mon May 23 18:35:13 1994
--- xntpd/ntp_control.c	Mon May 23 18:35:13 1994
***************
*** 602,609 ****
  #ifdef DEBUG
  		if (debug >= 3)
  			printf(
!       "recv_len %d, properlen %d, wants auth with keyid %d, MAC length=%d\n",
! 			    rbufp->recv_length, properlen, res_keyid, maclen);
  #endif
  		if (!authhavekey(res_keyid)) {
  #ifdef DEBUG
--- 602,609 ----
  #ifdef DEBUG
  		if (debug >= 3)
  			printf(
!       "recv_len %d, properlen %d, wants auth with keyid %lu, MAC length=%d\n",
! 			    rbufp->recv_length, properlen, (u_long)res_keyid, maclen);
  #endif
  		if (!authhavekey(res_keyid)) {
  #ifdef DEBUG
***************
*** 724,738 ****
  	register u_char clock;
  
  	clock = CTL_SST_TS_UNSPEC;
! 	if (sys_peer != 0)
! 		if (sys_peer->sstclktype != CTL_SST_TS_UNSPEC)
  			clock = sys_peer->sstclktype;
! 		else {
  			if (sys_peer->refclktype < sizeof(clocktypes))
  				clock = clocktypes[sys_peer->refclktype];
  			if (pps_control)
  				clock |= CTL_SST_TS_PPS;
  		}
  	return (u_short)CTL_SYS_STATUS(sys_leap, clock, 
  	    ctl_sys_num_events, ctl_sys_last_event);
  }
--- 724,741 ----
  	register u_char clock;
  
  	clock = CTL_SST_TS_UNSPEC;
! 	if (sys_peer != 0) {
! 		if (sys_peer->sstclktype != CTL_SST_TS_UNSPEC) {
  			clock = sys_peer->sstclktype;
! 			if (pps_control)
! 				clock |= CTL_SST_TS_PPS;
! 		} else {
  			if (sys_peer->refclktype < sizeof(clocktypes))
  				clock = clocktypes[sys_peer->refclktype];
  			if (pps_control)
  				clock |= CTL_SST_TS_PPS;
  		}
+ 	}
  	return (u_short)CTL_SYS_STATUS(sys_leap, clock, 
  	    ctl_sys_num_events, ctl_sys_last_event);
  }
***************
*** 999,1005 ****
  		*cp++ = *cq++;
  
  	*cp++ = '=';
! 	(void) sprintf(cp, "%u", uval);
  	while (*cp != '\0')
  		cp++;
  	
--- 1002,1008 ----
  		*cp++ = *cq++;
  
  	*cp++ = '=';
! 	(void) sprintf(cp, "%lu", (u_long)uval);
  	while (*cp != '\0')
  		cp++;
  	
***************
*** 1049,1055 ****
  		*cp++ = *cq++;
  
  	*cp++ = '=';
! 	(void) sprintf(cp, "%d", ival);
  	while (*cp != '\0')
  		cp++;
  	
--- 1052,1058 ----
  		*cp++ = *cq++;
  
  	*cp++ = '=';
! 	(void) sprintf(cp, "%ld", (long)ival);
  	while (*cp != '\0')
  		cp++;
  	
diff -c xntpd/ntp_filegen.c:1.1.1.7 xntpd/ntp_filegen.c:3.14
*** xntpd/ntp_filegen.c:1.1.1.7	Mon May 23 18:35:14 1994
--- xntpd/ntp_filegen.c	Mon May 23 18:35:14 1994
***************
*** 100,106 ****
  
  	case FILEGEN_PID:
  		filename = emalloc(len + 1 + 1 + 10);
! 		sprintf(filename,"%s%c#%d", basename, SUFFIX_SEP, newid);
  		break;
        
  	case FILEGEN_DAY:
--- 100,106 ----
  
  	case FILEGEN_PID:
  		filename = emalloc(len + 1 + 1 + 10);
! 		sprintf(filename,"%s%c#%ld", basename, SUFFIX_SEP, (long)newid);
  		break;
        
  	case FILEGEN_DAY:
***************
*** 142,148 ****
  
  	case FILEGEN_AGE:
  		filename = emalloc(len + 1 + 2 + 10);
! 		sprintf(filename, "%s%ca%08d", basename, SUFFIX_SEP, newid);
  		break;
  	}
    
--- 142,148 ----
  
  	case FILEGEN_AGE:
  		filename = emalloc(len + 1 + 2 + 10);
! 		sprintf(filename, "%s%ca%08ld", basename, SUFFIX_SEP, (long)newid);
  		break;
  	}
    
diff -c xntpd/ntp_io.c:1.1.1.26 xntpd/ntp_io.c:3.31
*** xntpd/ntp_io.c:1.1.1.26	Mon May 23 18:35:16 1994
--- xntpd/ntp_io.c	Mon May 23 18:35:16 1994
***************
*** 18,23 ****
--- 18,27 ----
  #include "ntp_if.h"
  #include "ntp_stdlib.h"
  
+ #if defined(MCAST) && !defined(IP_ADD_MEMBERSHIP)
+ #undef MCAST
+ #endif
+ 
  #if defined(BSD)&&!defined(sun)&&!defined(SYS_SINIXM)
  #if BSD >= 199006
  #define HAVE_VARIABLE_IFR_LENGTH
***************
*** 648,656 ****
  	if (bind(fd, (struct sockaddr *)addr, sizeof(*addr)) < 0) {
  		char buff[160];
  		sprintf(buff,
! 	"bind() fd %d, family %d, port %d, addr %08x, in_classd=%d flags=%d fails: %%m",
! 		    fd, addr->sin_family, ntohs(addr->sin_port),
! 		    ntohl(addr->sin_addr.s_addr),
  		    IN_CLASSD(ntohl(addr->sin_addr.s_addr)), flags);
  		syslog(LOG_ERR, buff);
  		close(fd);
--- 652,660 ----
  	if (bind(fd, (struct sockaddr *)addr, sizeof(*addr)) < 0) {
  		char buff[160];
  		sprintf(buff,
! 	"bind() fd %d, family %d, port %d, addr %08lx, in_classd=%d flags=%d fails: %%m",
! 		    fd, addr->sin_family, (int)ntohs(addr->sin_port),
! 		    (u_long)ntohl(addr->sin_addr.s_addr),
  		    IN_CLASSD(ntohl(addr->sin_addr.s_addr)), flags);
  		syslog(LOG_ERR, buff);
  		close(fd);
***************
*** 664,674 ****
  	}
  #ifdef DEBUG
  	if (debug)
! 		printf("bind() fd %d, family %d, port %d, addr %08x, flags=%d\n",
  			fd,
  			addr->sin_family,
! 			ntohs(addr->sin_port),
! 			ntohl(addr->sin_addr.s_addr),
  			flags);
  #endif
  	if (fd > maxactivefd)
--- 668,678 ----
  	}
  #ifdef DEBUG
  	if (debug)
! 		printf("bind() fd %d, family %d, port %d, addr %08lx, flags=%d\n",
  			fd,
  			addr->sin_family,
! 			(int)ntohs(addr->sin_port),
! 			(u_long)ntohl(addr->sin_addr.s_addr),
  			flags);
  #endif
  	if (fd > maxactivefd)
***************
*** 794,801 ****
  
  #ifdef DEBUG
  	if (debug > 4)
! 		printf("getrecvbufs: %d handler interrupts, %d frames\n",
! 		    handler_calls, handler_pkts);
  #endif
  
  	if (full_recvbufs == 0) {
--- 798,805 ----
  
  #ifdef DEBUG
  	if (debug > 4)
! 		printf("getrecvbufs: %ld handler interrupts, %ld frames\n",
! 		    (long)handler_calls, (long)handler_pkts);
  #endif
  
  	if (full_recvbufs == 0) {
diff -c xntpd/ntp_loopfilter.c:1.1.1.39 xntpd/ntp_loopfilter.c:3.47
*** xntpd/ntp_loopfilter.c:1.1.1.39	Mon May 23 18:35:18 1994
--- xntpd/ntp_loopfilter.c	Mon May 23 18:35:18 1994
***************
*** 577,583 ****
  			record_peer_stats(&loopback_interface->sin,
  			    ctlsysstatus(), &pps_offset, 0, pps_dispersion);
  		} else
! 			pps_time = 0;
  #endif /* KERNEL_PLL */
  	} else {
  		if (offset < 0) {
--- 577,584 ----
  			record_peer_stats(&loopback_interface->sin,
  			    ctlsysstatus(), &pps_offset, 0, pps_dispersion);
  		} else
! 			if (pps_time && current_time - pps_time > PPS_MAXAGE)
! 				pps_time = 0;
  #endif /* KERNEL_PLL */
  	} else {
  		if (offset < 0) {
diff -c xntpd/ntp_peer.c:1.1.1.15 xntpd/ntp_peer.c:3.12
*** xntpd/ntp_peer.c:1.1.1.15	Mon May 23 18:35:20 1994
--- xntpd/ntp_peer.c	Mon May 23 18:35:20 1994
***************
*** 377,385 ****
  
  #ifdef DEBUG
  	if (debug)
! 		printf("peer_config: addr %s mode %d version %d minpoll %d maxpoll %d flags %d ttl %d key %u\n",
  		    ntoa(srcadr), hmode, version, minpoll, maxpoll, flags,
! 		    ttl, key);
  #endif
  	/*
  	 * See if we have this guy in the tables already.  If
--- 377,385 ----
  
  #ifdef DEBUG
  	if (debug)
! 		printf("peer_config: addr %s mode %d version %d minpoll %d maxpoll %d flags %d ttl %d key %lu\n",
  		    ntoa(srcadr), hmode, version, minpoll, maxpoll, flags,
! 		    ttl, (u_long)key);
  #endif
  	/*
  	 * See if we have this guy in the tables already.  If
diff -c xntpd/ntp_proto.c:1.1.1.25 xntpd/ntp_proto.c:3.28
*** xntpd/ntp_proto.c:1.1.1.25	Mon May 23 18:35:21 1994
--- xntpd/ntp_proto.c	Mon May 23 18:35:21 1994
***************
*** 428,435 ****
  		hiskeyid = ntohl(pkt->keyid);
  #ifdef	DEBUG
  		if (debug > 3)
! 		    printf("receive: pkt is %d octets, mac %d octets long, keyid %d\n",
! 			   rbufp->recv_length, has_mac, hiskeyid);
  #endif
  	} else if (rbufp->recv_length == LEN_PKT_NOMAC) {
  		hiskeyid = 0;
--- 428,435 ----
  		hiskeyid = ntohl(pkt->keyid);
  #ifdef	DEBUG
  		if (debug > 3)
! 		    printf("receive: pkt is %d octets, mac %d octets long, keyid %ld\n",
! 			   rbufp->recv_length, has_mac, (u_long)hiskeyid);
  #endif
  	} else if (rbufp->recv_length == LEN_PKT_NOMAC) {
  		hiskeyid = 0;
diff -c xntpd/ntp_request.c:1.1.1.20 xntpd/ntp_request.c:3.20
*** xntpd/ntp_request.c:1.1.1.20	Mon May 23 18:35:23 1994
--- xntpd/ntp_request.c	Mon May 23 18:35:23 1994
***************
*** 512,520 ****
  #ifdef DEBUG
  			if (debug > 4)
  				printf(
! 			"failed auth %d info_auth_keyid %u pkt keyid %u\n",
  				    INFO_IS_AUTH(inpkt->auth_seq),
! 				    info_auth_keyid, ntohl(inpkt->keyid));
  #endif
  			req_ack(srcadr, inter, inpkt, INFO_ERR_AUTH);
  			return;
--- 512,520 ----
  #ifdef DEBUG
  			if (debug > 4)
  				printf(
! 			"failed auth %d info_auth_keyid %lu pkt keyid %lu\n",
  				    INFO_IS_AUTH(inpkt->auth_seq),
! 				    (u_long)info_auth_keyid, (u_long)ntohl(inpkt->keyid));
  #endif
  			req_ack(srcadr, inter, inpkt, INFO_ERR_AUTH);
  			return;
diff -c xntpd/ntp_restrict.c:1.1.1.12 xntpd/ntp_restrict.c:3.13
*** xntpd/ntp_restrict.c:1.1.1.12	Mon May 23 18:35:24 1994
--- xntpd/ntp_restrict.c	Mon May 23 18:35:25 1994
***************
*** 137,145 ****
  	client_limit_period = 3600;
  	res_limited_refcnt = 0;
  
! 	sprintf(bp, "client_limit=%d", client_limit);
  	set_sys_var(bp, strlen(bp)+1, RO);
! 	sprintf(bp, "client_limit_period=%d", client_limit_period);
  	set_sys_var(bp, strlen(bp)+1, RO);
  }
  
--- 137,145 ----
  	client_limit_period = 3600;
  	res_limited_refcnt = 0;
  
! 	sprintf(bp, "client_limit=%ld", (long)client_limit);
  	set_sys_var(bp, strlen(bp)+1, RO);
! 	sprintf(bp, "client_limit_period=%ld", (long)client_limit_period);
  	set_sys_var(bp, strlen(bp)+1, RO);
  }
  
***************
*** 210,218 ****
  
  #ifdef DEBUG
  		if (debug > 2)
! 			printf("limited clients check: %d clients, period %d seconds, net is 0x%X\n",
! 			       client_limit, client_limit_period,
! 			       netof(hostaddr));
  #endif /*DEBUG*/
  		if (mon_enabled == MON_OFF) {
  #ifdef DEBUG
--- 210,218 ----
  
  #ifdef DEBUG
  		if (debug > 2)
! 			printf("limited clients check: %ld clients, period %ld seconds, net is 0x%lX\n",
! 			       (long)client_limit, (long)client_limit_period,
! 			       (u_long)netof(hostaddr));
  #endif /*DEBUG*/
  		if (mon_enabled == MON_OFF) {
  #ifdef DEBUG
***************
*** 238,246 ****
  			    > client_limit_period) {
  #ifdef DEBUG
  				if (debug > 5)
! 					printf("checking: %s: ignore: too old: %d\n",
  					       numtoa(md->rmtadr),
! 					       current_time - md->lasttime);
  #endif
  				continue;
  			}
--- 238,246 ----
  			    > client_limit_period) {
  #ifdef DEBUG
  				if (debug > 5)
! 					printf("checking: %s: ignore: too old: %ld\n",
  					       numtoa(md->rmtadr),
! 					       (long)(current_time - md->lasttime));
  #endif
  				continue;
  			}
***************
*** 259,267 ****
  			    netof(hostaddr)) {
  #ifdef DEBUG
  				if (debug > 5)
! 					printf("checking: %s: different net 0x%X\n",
  					       numtoa(md->rmtadr),
! 					       netof(md->rmtadr));
  #endif
  				continue;
  			}
--- 259,267 ----
  			    netof(hostaddr)) {
  #ifdef DEBUG
  				if (debug > 5)
! 					printf("checking: %s: different net 0x%lX\n",
  					       numtoa(md->rmtadr),
! 					       (u_long)netof(md->rmtadr));
  #endif
  				continue;
  			}
***************
*** 286,293 ****
  		}
  #ifdef DEBUG
  		if (debug > 4)
! 			printf("this one is rank %d in list, limit is %d: %s\n",
! 			       lcnt, client_limit,
  			       (lcnt <= client_limit) ? "ALLOW" : "REJECT");
  #endif
  		if (lcnt <= client_limit) {
--- 286,293 ----
  		}
  #ifdef DEBUG
  		if (debug > 4)
! 			printf("this one is rank %d in list, limit is %ld: %s\n",
! 			       lcnt, (long)client_limit,
  			       (lcnt <= client_limit) ? "ALLOW" : "REJECT");
  #endif
  		if (lcnt <= client_limit) {
diff -c xntpd/ntp_unixclock.c:1.1.1.29 xntpd/ntp_unixclock.c:3.31
*** xntpd/ntp_unixclock.c:1.1.1.29	Mon May 23 18:35:26 1994
--- xntpd/ntp_unixclock.c	Mon May 23 18:35:26 1994
***************
*** 107,113 ****
  	clock_parms(&tickadj, &tick);
  #ifdef	DEBUG
  	if (debug)
! 		printf("kernel vars: tickadj = %d, tick = %d\n", tickadj, tick);
  #endif
  
  	/*
--- 107,113 ----
  	clock_parms(&tickadj, &tick);
  #ifdef	DEBUG
  	if (debug)
! 		printf("kernel vars: tickadj = %ld, tick = %ld\n", (long int)tickadj, (long int)tick);
  #endif
  
  	/*
***************
*** 162,169 ****
  #ifdef DEBUG
  	if (debug)
  		printf(
! 	"adj_precision = %d, tvu_maxslew = %d, tsf_maxslew = 0.%08x\n",
! 		    adj_precision, tvu_maxslew, tsf_maxslew);
  #endif
  
  	/*
--- 162,170 ----
  #ifdef DEBUG
  	if (debug)
  		printf(
! 	"adj_precision = %ld, tvu_maxslew = %ld, tsf_maxslew = 0.%08lx\n",
! 		       (long int)adj_precision, (long int)tvu_maxslew,
! 		       (unsigned long)tsf_maxslew);
  #endif
  
  	/*
diff -c xntpd/refclock_datum.c:1.1.1.1 xntpd/refclock_datum.c:1.2
*** xntpd/refclock_datum.c:1.1.1.1	Mon May 23 18:35:31 1994
--- xntpd/refclock_datum.c	Mon May 23 18:35:31 1994
***************
*** 30,43 ****
  #endif
  #if defined(STREAM)
  #include <stropts.h>
! #if defined(WWVBCLK)
  #include <sys/clkdefs.h>
! #endif /* WWVBCLK */
  #endif /* STREAM */
  
! #if defined (WWVBPPS)
  #include <sys/ppsclock.h>
! #endif /* WWVBPPS */
  
  #include "ntp_stdlib.h"
  
--- 30,43 ----
  #endif
  #if defined(STREAM)
  #include <stropts.h>
! #if defined(DATUMCLK)
  #include <sys/clkdefs.h>
! #endif /* DATUMCLK */
  #endif /* STREAM */
  
! #if defined (DATUMPPS)
  #include <sys/ppsclock.h>
! #endif /* DATUMPPS */
  
  #include "ntp_stdlib.h"
  
***************
*** 86,92 ****
    int inuse;			/* in use flag */
    l_fp lastrec;
    l_fp lastref;
!   int yearstart;
    int coderecv;
    int day;			/* day */
    int hour;			/* hour */
--- 86,92 ----
    int inuse;			/* in use flag */
    l_fp lastrec;
    l_fp lastref;
!   U_LONG yearstart;
    int coderecv;
    int day;			/* day */
    int hour;			/* hour */
***************
*** 112,118 ****
  static int nunits;
  static struct datum_pts_unit **datum_pts_unit;
  static u_char stratumtouse[MAXUNITS];
- static l_fp fudgefactor[MAXUNITS];
  
  static FILE *logfile;
  
--- 112,117 ----
***************
*** 341,347 ****
    int i;
    int index;
    int error_code;
-   l_fp tstmp;
    struct datum_pts_unit *datum_pts;
  
  #ifdef DEBUG_DATUM_PTC
--- 340,345 ----
***************
*** 516,522 ****
    tzoff = -loctm->tm_gmtoff/3600;
  
  #ifdef DEBUG_DATUM_PTC
!   fprintf(logfile,"Time Zone = %d, time (sec) since 1970 = %d\n",tzoff, tim);
    fflush(logfile);
  #endif
  
--- 514,520 ----
    tzoff = -loctm->tm_gmtoff/3600;
  
  #ifdef DEBUG_DATUM_PTC
!   fprintf(logfile,"Time Zone = %d, time (sec) since 1970 = %ld\n",tzoff,(long)tim);
    fflush(logfile);
  #endif
  
***************
*** 535,545 ****
  
  #ifdef DEBUG_DATUM_PTC
      fprintf(logfile,"Error: bad clocktime\n");
!     fprintf(logfile,"GMT %d, lastrec %d, yearstart %d, lastref %d\n",
  		  tzoff,
! 		  datum_pts->lastrec.l_ui,
! 		  datum_pts->yearstart,
! 		  datum_pts->lastref.l_ui);
      fflush(logfile);
  #endif
      syslog(LOG_ERR, "Datum_PTS: Bad clocktime");
--- 533,543 ----
  
  #ifdef DEBUG_DATUM_PTC
      fprintf(logfile,"Error: bad clocktime\n");
!     fprintf(logfile,"GMT %d, lastrec %lu, yearstart %lu, lastref %lu\n",
  		  tzoff,
! 		  (u_long)datum_pts->lastrec.l_ui,
! 		  (u_long)datum_pts->yearstart,
! 		  (u_long)datum_pts->lastref.l_ui);
      fflush(logfile);
  #endif
      syslog(LOG_ERR, "Datum_PTS: Bad clocktime");
diff -c xntpd/refclock_gpstm.c:1.1.1.3 xntpd/refclock_gpstm.c:1.2
*** xntpd/refclock_gpstm.c:1.1.1.3	Mon May 23 18:35:32 1994
--- xntpd/refclock_gpstm.c	Mon May 23 18:35:32 1994
***************
*** 92,98 ****
   */
  enum gpstm_event {e_Init, e_F18, e_F50, e_F51, e_TS};
  static enum {Base, Start, F18, F50, F51, F08} State[MAXUNITS];
- static time_t Last[MAXUNITS];
  static void gpstm_doevent P((int, enum gpstm_event));
  static void gpstm_initstate P((int));
  
--- 92,97 ----
***************
*** 777,783 ****
  }
  
  static void
! gpstm_initstate(unit) {
  	State[unit] = Base;		/* just in case */
  	gpstm_doevent(unit, e_Init);
  }
--- 776,784 ----
  }
  
  static void
! gpstm_initstate(unit)
!      int unit;
! {
  	State[unit] = Base;		/* just in case */
  	gpstm_doevent(unit, e_Init);
  }
diff -c xntpd/refclock_leitch.c:1.1.1.15 xntpd/refclock_leitch.c:1.7
*** xntpd/refclock_leitch.c:1.1.1.15	Mon May 23 18:35:33 1994
--- xntpd/refclock_leitch.c	Mon May 23 18:35:34 1994
***************
*** 477,483 ****
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%u\n", leitch->reftime1.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime1.l_uf);
  		leitch->codetime1 = rbufp->recv_time;
--- 477,483 ----
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%lu\n", (unsigned long)leitch->reftime1.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime1.l_uf);
  		leitch->codetime1 = rbufp->recv_time;
***************
*** 494,500 ****
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%u\n", leitch->reftime2.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime2.l_uf);
  		leitch->codetime2 = rbufp->recv_time;
--- 494,500 ----
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%lu\n", (unsigned long)leitch->reftime2.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime2.l_uf);
  		leitch->codetime2 = rbufp->recv_time;
***************
*** 511,517 ****
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%u\n", leitch->reftime3.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime3.l_uf);
  		leitch->codetime3 = rbufp->recv_time;
--- 511,517 ----
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%lu\n", (unsigned long)leitch->reftime3.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime3.l_uf);
  		leitch->codetime3 = rbufp->recv_time;
***************
*** 555,564 ****
  
  #ifdef DEBUG
  	if (debug)
! 	    fprintf(stderr,"%u %u %u %u %d %d\n",
! 		leitch->codetime1.l_ui, leitch->codetime1.l_uf,
! 		leitch->reftime1.l_ui, leitch->reftime1.l_uf,
! 		off.l_ui, off.l_uf);
  #endif
  	tmp_fp = leitch->reftime2;
  	L_SUB(&tmp_fp,&leitch->codetime2);
--- 555,567 ----
  
  #ifdef DEBUG
  	if (debug)
! 	    fprintf(stderr,"%lu %lu %lu %lu %ld %ld\n",
! 		    (unsigned long)leitch->codetime1.l_ui,
! 		    (unsigned long)leitch->codetime1.l_uf,
! 		    (unsigned long)leitch->reftime1.l_ui,
! 		    (unsigned long)leitch->reftime1.l_uf,
! 		    (long int)off.l_i,
! 		    (long int)off.l_f);
  #endif
  	tmp_fp = leitch->reftime2;
  	L_SUB(&tmp_fp,&leitch->codetime2);
***************
*** 566,575 ****
  		off = tmp_fp;
  #ifdef DEBUG
  	if (debug)
! 		fprintf(stderr,"%u %u %u %u %d %d\n",
! 		leitch->codetime2.l_ui, leitch->codetime2.l_uf,
! 		leitch->reftime2.l_ui, leitch->reftime2.l_uf,
! 		off.l_ui, off.l_uf);
  #endif
  	tmp_fp = leitch->reftime3;
  	L_SUB(&tmp_fp,&leitch->codetime3);
--- 569,581 ----
  		off = tmp_fp;
  #ifdef DEBUG
  	if (debug)
! 		fprintf(stderr,"%lu %lu %lu %lu %ld %ld\n",
! 			(unsigned long)leitch->codetime2.l_ui,
! 			(unsigned long)leitch->codetime2.l_uf,
! 			(unsigned long)leitch->reftime2.l_ui,
! 			(unsigned long)leitch->reftime2.l_uf,
! 			(long int)off.l_i,
! 			(long int)off.l_f);
  #endif
  	tmp_fp = leitch->reftime3;
  	L_SUB(&tmp_fp,&leitch->codetime3);
***************
*** 579,588 ****
  
  #ifdef DEBUG
  	if (debug)
! 	    fprintf(stderr,"%u %u %u %u %d %d\n",
! 		leitch->codetime3.l_ui, leitch->codetime3.l_uf,
! 		leitch->reftime3.l_ui, leitch->reftime3.l_uf,
! 		off.l_ui, off.l_uf);
  #endif
  	refclock_receive(leitch->peer, &off, 0, dispersion, &codetime,
              &codetime, isinsync);
--- 585,597 ----
  
  #ifdef DEBUG
  	if (debug)
! 	    fprintf(stderr,"%lu %lu %lu %lu %ld %ld\n",
! 		    (unsigned long)leitch->codetime3.l_ui,
! 		    (unsigned long)leitch->codetime3.l_uf,
! 		    (unsigned long)leitch->reftime3.l_ui,
! 		    (unsigned long)leitch->reftime3.l_uf,
! 		    (long int)off.l_i,
! 		    (long int)off.l_f);
  #endif
  	refclock_receive(leitch->peer, &off, 0, dispersion, &codetime,
              &codetime, isinsync);
diff -c xntpd/refclock_parse.c:1.1.1.14 xntpd/refclock_parse.c:3.59
*** xntpd/refclock_parse.c:1.1.1.14	Mon May 23 18:35:37 1994
--- xntpd/refclock_parse.c	Mon May 23 18:35:37 1994
***************
*** 1,8 ****
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS))
  /*
!  * /src/NTP/REPOSITORY/v3/xntpd/refclock_parse.c,v 3.53 1994/03/25 13:07:39 kardel Exp
   *
!  * refclock_parse.c,v 3.53 1994/03/25 13:07:39 kardel Exp
   *
   * generic reference clock driver for receivers
   *
--- 1,8 ----
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS))
  /*
!  * /src/NTP/REPOSITORY/v3/xntpd/refclock_parse.c,v 3.59 1994/05/23 16:29:27 kardel Exp
   *
!  * refclock_parse.c,v 3.59 1994/05/23 16:29:27 kardel Exp
   *
   * generic reference clock driver for receivers
   *
***************
*** 30,37 ****
   *  PPS		      - supply loopfilter with PPS samples (if configured)
   *  PPSPPS            - notify loopfilter of PPS file descriptor
   *
-  *  FREEBSD_CONRAD    - Make very cheap "Conrad DCF77 RS-232" gadget work
-  *			with FreeBSD.
   * TTY defines:
   *  HAVE_BSD_TTYS     - currently unsupported
   *  HAVE_SYSV_TTYS    - will use termio.h
--- 30,35 ----
***************
*** 44,49 ****
--- 42,48 ----
   *   - Meinberg DCF77 receiver DCF77 PZF 535 (TCXO version) (DCF)
   *   - Meinberg DCF77 receiver DCF77 PZF 535 (OCXO version) (DCF)
   *   - Meinberg DCF77 receiver U/A 31                       (DCF)
+  *   - IGEL CLOCK                                           (DCF)
   *   - ELV DCF7000                                          (DCF)
   *   - Schmid clock                                         (DCF)
   *   - Conrad DCF77 receiver module                         (DCF)
***************
*** 84,92 ****
  #include <time.h>
  
  #include <sys/errno.h>
- #ifdef FREEBSD_CONRAD
- #include <sys/ioctl.h>
- #endif
  extern int errno;
  
  #if !defined(STREAM) && !defined(HAVE_SYSV_TTYS) && !defined(HAVE_BSD_TTYS) && !defined(HAVE_TERMIOS)
--- 83,88 ----
***************
*** 134,140 ****
  #include "parse.h"
  
  #if !defined(NO_SCCSID) && !defined(lint) && !defined(__GNUC__)
! static char rcsid[]="refclock_parse.c,v 3.53 1994/03/25 13:07:39 kardel Exp";
  #endif
  
  /**===========================================================================
--- 130,136 ----
  #include "parse.h"
  
  #if !defined(NO_SCCSID) && !defined(lint) && !defined(__GNUC__)
! static char rcsid[]="refclock_parse.c,v 3.59 1994/05/23 16:29:27 kardel Exp";
  #endif
  
  /**===========================================================================
***************
*** 445,457 ****
  #define RAWDCF_ROOTDELAY	0x00000364 /* 13 ms */
  #define RAWDCF_FORMAT		"RAW DCF77 Timecode"
  #define RAWDCF_MAXUNSYNC	(0) /* sorry - its a true receiver - no signal - no time */
! 
! #ifdef FREEBSD_CONRAD
! #define RAWDCF_CFLAG            (CS8|CREAD|CLOCAL)
! #else
! #define RAWDCF_CFLAG            (B50|CS8|CREAD|CLOCAL)
! #endif
! #define RAWDCF_IFLAG		0
  #define RAWDCF_OFLAG		0
  #define RAWDCF_LFLAG		0
  
--- 441,448 ----
  #define RAWDCF_ROOTDELAY	0x00000364 /* 13 ms */
  #define RAWDCF_FORMAT		"RAW DCF77 Timecode"
  #define RAWDCF_MAXUNSYNC	(0) /* sorry - its a true receiver - no signal - no time */
! #define RAWDCF_CFLAG            (B50|CS8|CREAD|CLOCAL|PARENB)
! #define RAWDCF_IFLAG		(IGNPAR)
  #define RAWDCF_OFLAG		0
  #define RAWDCF_LFLAG		0
  
***************
*** 474,484 ****
  #define TIMEBRICK_DESCRIPTION	"RAW DCF77 CODE (TimeBrick)"
  
  /*
   * Trimble SV6 GPS receiver
   */
  #define TRIM_POLLRATE	0	/* only true direct polling */
! #define TRIM_POLLCMD	">QTM<"
! #define TRIM_CMDSIZE	5
  
  static poll_info_t trimble_pollinfo = { TRIM_POLLRATE, TRIM_POLLCMD, TRIM_CMDSIZE };
  static	int	trimble_init	P((struct parseunit *));
--- 465,484 ----
  #define TIMEBRICK_DESCRIPTION	"RAW DCF77 CODE (TimeBrick)"
  
  /*
+  * IGEL:clock receiver
+  */
+ #define IGELCLOCK_BASEDELAY	0x420C49B0 /* ~258 ms - IGEL:clock receiver */
+ #define IGELCLOCK_DESCRIPTION	"RAW DCF77 CODE (IGEL:clock)"
+ #define IGELCLOCK_CFLAG		(B1200|CS8|CREAD|HUPCL|CLOCAL)
+ 
+ /*
   * Trimble SV6 GPS receiver
   */
+ #ifndef TRIM_POLLRATE
  #define TRIM_POLLRATE	0	/* only true direct polling */
! #endif
! #define TRIM_POLLCMD	">SRM;FR_FLAG=F<>QTM<"
! #define TRIM_CMDSIZE	20
  
  static poll_info_t trimble_pollinfo = { TRIM_POLLRATE, TRIM_POLLCMD, TRIM_CMDSIZE };
  static	int	trimble_init	P((struct parseunit *));
***************
*** 675,681 ****
--- 675,685 ----
    },
    {				/* 127.127.8.32+<device> */
      TRIMBLESV6_FLAGS,
+ #if TRIM_POLLRATE		/* DHD940515: Allow user config */
+     NO_POLL,
+ #else
      TRIMBLESV6_POLL,
+ #endif
      TRIMBLESV6_INIT,
      TRIMBLESV6_END,
      TRIMBLESV6_DATA,
***************
*** 691,696 ****
--- 695,719 ----
      TRIMBLESV6_IFLAG,
      TRIMBLESV6_OFLAG,
      TRIMBLESV6_LFLAG
+   },
+   {				/* 127.127.8.36+<device> */
+     RAWDCF_FLAGS,
+     NO_POLL,
+     NO_INIT,
+     NO_END,
+     NO_DATA,
+     RAWDCF_ROOTDELAY,
+     IGELCLOCK_BASEDELAY,
+     NO_PPSDELAY,
+     DCF_A_ID,
+     IGELCLOCK_DESCRIPTION,
+     RAWDCF_FORMAT,
+     DCF_TYPE,
+     RAWDCF_MAXUNSYNC,
+     IGELCLOCK_CFLAG,
+     RAWDCF_IFLAG,
+     RAWDCF_OFLAG,
+     RAWDCF_LFLAG
    }
  };
  
***************
*** 932,937 ****
--- 955,961 ----
        syslog(LOG_ERR, "PARSE receiver #%d: stream_enable: ioctl(fd, I_STR, PARSEIOC_ENABLE): %m", CL_UNIT(parse->unit));
        return 0;
      }
+   parse->io.clock_recv = stream_receive; /* ok - parse input in kernel */
    return 1;
  }
  
***************
*** 954,959 ****
--- 978,984 ----
        syslog(LOG_ERR, "PARSE receiver #%d: stream_disable: ioctl(fd, I_STR, PARSEIOC_DISABLE): %m", CL_UNIT(parse->unit));
        return 0;
      }
+   parse->io.clock_recv = local_receive; /* ok - parse input in daemon */
    return 1;
  }
  
***************
*** 1492,1513 ****
    struct parseunit *parse = (struct parseunit *)rbufp->recv_srcclock;
    register int count;
    register char *s;
- #ifdef FREEBSD_CONRAD
-   struct timeval foo;
- #endif
- 
    /*
     * eat all characters, parsing then and feeding complete samples
     */
    count = rbufp->recv_length;
    s = rbufp->recv_buffer;
- #ifdef FREEBSD_CONRAD
-   ioctl(parse->fd,TIOCTIMESTAMP,&foo);
-   TVTOTS(&foo, &rbufp->recv_time);
-   rbufp->recv_time.l_uf += TS_ROUNDBIT;
-   rbufp->recv_time.l_ui += JAN_1970;
-   rbufp->recv_time.l_uf &= TS_MASK;
- #endif
  
    while (count--)
      {
--- 1517,1527 ----
***************
*** 1663,1669 ****
  
  	  while (i-- > 0)
  	    {
! 	      if (parse_ioread(&parse->parseio, *s++, ts))
  		{
  		  /*
  		   * got something good to eat
--- 1677,1683 ----
  
  	  while (i-- > 0)
  	    {
! 	      if (parse_ioread(&parse->parseio, *s++, &ts))
  		{
  		  /*
  		   * got something good to eat
***************
*** 1874,1880 ****
        i++;
      }
  
!   sprintf(buffer, "unknown #%d", state);
  
    return buffer;
  }
--- 1888,1894 ----
        i++;
      }
  
!   sprintf(buffer, "unknown #%ld", (long int)state);
  
    return buffer;
  }
***************
*** 1961,1967 ****
  
    if ((tmp = delta / (60*60*24)) != 0)
      {
!       sprintf(buffer, "%dd+", tmp);
        delta -= tmp * 60*60*24;
      }
  
--- 1975,1981 ----
  
    if ((tmp = delta / (60*60*24)) != 0)
      {
!       sprintf(buffer, "%ldd+", (long int)tmp);
        delta -= tmp * 60*60*24;
      }
  
***************
*** 1971,1977 ****
    delta /= 60;
  
    sprintf(buffer+strlen(buffer), "%02d:%02d:%02d",
! 	  delta, m, s);
  
    return buffer;
  }
--- 1985,1991 ----
    delta /= 60;
  
    sprintf(buffer+strlen(buffer), "%02d:%02d:%02d",
! 	  (int)delta, (int)m, (int)s);
  
    return buffer;
  }
***************
*** 2292,2301 ****
        tm.c_iflag     = clockinfo[type].cl_iflag;
        tm.c_oflag     = clockinfo[type].cl_oflag;
        tm.c_lflag     = clockinfo[type].cl_lflag;
! #ifdef FREEBSD_CONRAD
!       tm.c_ispeed    = 50;
!       tm.c_ospeed    = 50;
! #endif
        if (TTY_SETATTR(fd232, &tm) == -1)
  	{
  	  syslog(LOG_ERR, "PARSE receiver #%d: parse_start: tcsetattr(%d, &tm): %m", unit, fd232);
--- 2306,2312 ----
        tm.c_iflag     = clockinfo[type].cl_iflag;
        tm.c_oflag     = clockinfo[type].cl_oflag;
        tm.c_lflag     = clockinfo[type].cl_lflag;
! 	
        if (TTY_SETATTR(fd232, &tm) == -1)
  	{
  	  syslog(LOG_ERR, "PARSE receiver #%d: parse_start: tcsetattr(%d, &tm): %m", unit, fd232);
***************
*** 2338,2358 ****
        return 0;		/* well, ok - special initialisation broke */
      }
    
- #ifdef FREEBSD_CONRAD
-       {
- 	int i,j;
- 	struct timeval tv;
- 	ioctl(parse->fd,TIOCTIMESTAMP,&tv);
- 	j = TIOCM_RTS;
- 	i = ioctl(fd232, TIOCMBIC, &j);
- 	if (i < 0) {
- 	  syslog(LOG_ERR, 
- 	    "PARSE receiver #%d: lowrts_poll: failed to lower RTS: %m", 
- 	    CL_UNIT(parse->unit));
- 	}
-       }
- #endif
- 	
    strcpy(tmp_ctl.parseformat.parse_buffer, parse->parse_type->cl_format);
    tmp_ctl.parseformat.parse_count = strlen(tmp_ctl.parseformat.parse_buffer);
  
--- 2349,2354 ----
***************
*** 2433,2439 ****
      }
  
  #ifdef PPSPPS
!   if (parse->pollonly || (parse->parse_type->cl_flags & PARSE_F_PPSPPS))
      {
        if (fdpps == -1)
  	{
--- 2429,2435 ----
      }
  
  #ifdef PPSPPS
!   if (parse->pollonly && (parse->parse_type->cl_flags & PARSE_F_PPSPPS))
      {
        if (fdpps == -1)
  	{
***************
*** 2653,2665 ****
  		parse->peer->refid = htonl(PARSEHSREFID);
  	}
  
-       /*
-        * NOT USED - yet
-        *
        if (in->haveflags & CLK_HAVEVAL2)
  	{
  	}
!        */
        if (in->haveflags & (CLK_HAVEFLAG1|CLK_HAVEFLAG2|CLK_HAVEFLAG3|CLK_HAVEFLAG4))
  	{
  	  parse->flags = (in->flags & (CLK_FLAG1|CLK_FLAG2|CLK_FLAG3|CLK_FLAG4)) |
--- 2649,2659 ----
  		parse->peer->refid = htonl(PARSEHSREFID);
  	}
  
        if (in->haveflags & CLK_HAVEVAL2)
  	{
+ 	  parse->peer->refid = in->fudgeval2;
  	}
!        
        if (in->haveflags & (CLK_HAVEFLAG1|CLK_HAVEFLAG2|CLK_HAVEFLAG3|CLK_HAVEFLAG4))
  	{
  	  parse->flags = (in->flags & (CLK_FLAG1|CLK_FLAG2|CLK_FLAG3|CLK_FLAG4)) |
***************
*** 2699,2705 ****
  
        out->fudgeval1 = (LONG)parse->peer->stratum;
  
!       out->fudgeval2 = 0;
  
        out->flags     = parse->flags & PARSE_STAT_FLAGS;
  
--- 2693,2699 ----
  
        out->fudgeval1 = (LONG)parse->peer->stratum;
  
!       out->fudgeval2 = parse->peer->refid;
  
        out->flags     = parse->flags & PARSE_STAT_FLAGS;
  
***************
*** 2848,2854 ****
                        (parse->status == i) ? "*" : "",
  		      clockstatus(i),
  		      l_mktime(stime),
! 		      percent / 100, percent % 100);
  	      sum += stime;
  	      tt  += strlen(tt);
  	    }
--- 2842,2848 ----
                        (parse->status == i) ? "*" : "",
  		      clockstatus(i),
  		      l_mktime(stime),
! 		      (int)(percent / 100), (int)(percent % 100));
  	      sum += stime;
  	      tt  += strlen(tt);
  	    }
***************
*** 2863,2869 ****
        sprintf(tt, "refclock_iomode=\"%s\"", parse->binding->bd_description);
  
        tt = add_var(&out->kv_list, 128, RO);
!       sprintf(tt, "refclock_driver_version=\"refclock_parse.c,v 3.53 1994/03/25 13:07:39 kardel Exp\"");
  
        out->lencode       = strlen(outstatus);
        out->lastcode      = outstatus;
--- 2857,2863 ----
        sprintf(tt, "refclock_iomode=\"%s\"", parse->binding->bd_description);
  
        tt = add_var(&out->kv_list, 128, RO);
!       sprintf(tt, "refclock_driver_version=\"refclock_parse.c,v 3.59 1994/05/23 16:29:27 kardel Exp\"");
  
        out->lencode       = strlen(outstatus);
        out->lastcode      = outstatus;
***************
*** 3447,3453 ****
  /*
   * History:
   *
!  * refclock_parse.c,v
   * Revision 3.53  1994/03/25  13:07:39  kardel
   * fixed offset calculation for large (>4 Min) offsets
   *
--- 3441,3465 ----
  /*
   * History:
   *
!  * refclock_parse.c,v
!  * Revision 3.59  1994/05/23  16:29:27  kardel
!  * IGEL clock - Trimble update
!  *
!  * Revision 3.58  1994/05/12  21:03:39  kardel
!  * adhere to new standard that fudgeval2 is refid
!  *
!  * Revision 3.57  1994/05/12  12:50:47  kardel
!  * printf fmt/arg cleanup
!  *
!  * Revision 3.56  1994/05/10  21:15:51  kardel
!  * var reference level bug, kernel disable fix
!  *
!  * Revision 3.55  1994/05/02  00:37:01  kardel
!  * 3.3t reconcilation + bug fixes (PPS simulation - old kpll)
!  *
!  * Revision 3.54  1994/04/11  19:34:42  kardel
!  * longer input characters for DCF77 raw input (8Bit+parity ignored)
!  *
   * Revision 3.53  1994/03/25  13:07:39  kardel
   * fixed offset calculation for large (>4 Min) offsets
   *
cvs rdiff: Diffing xntpdc
diff -c xntpdc/ntpdc.c:1.1.1.22 xntpdc/ntpdc.c:3.22
*** xntpdc/ntpdc.c:1.1.1.22	Mon May 23 18:35:42 1994
--- xntpdc/ntpdc.c	Mon May 23 18:35:43 1994
***************
*** 1089,1097 ****
  	if (decodenetnum(host, num)) {
  		if (fullhost != 0) {
  			(void) sprintf(fullhost,
! 			    "%d.%d.%d.%d", ((htonl(*num)>>24)&0xff),
! 			    ((htonl(*num)>>16)&0xff), ((htonl(*num)>>8)&0xff),
! 			    (htonl(*num)&0xff));
  		}
  		return 1;
  	} else if ((hp = gethostbyname(host)) != 0) {
--- 1089,1097 ----
  	if (decodenetnum(host, num)) {
  		if (fullhost != 0) {
  			(void) sprintf(fullhost,
! 			    "%u.%u.%u.%u", (u_int)((htonl(*num)>>24)&0xff),
! 			    (u_int)((htonl(*num)>>16)&0xff), (u_int)((htonl(*num)>>8)&0xff),
! 			    (u_int)(htonl(*num)&0xff));
  		}
  		return 1;
  	} else if ((hp = gethostbyname(host)) != 0) {
***************
*** 1271,1277 ****
  
  	if (pcmd->nargs == 0) {
  		val = delay_time.l_ui * 1000 + delay_time.l_uf / 4294967;
! 		(void) fprintf(fp, "delay %d ms\n", val);
  	} else {
  		if (pcmd->argval[0].ival < 0) {
  			isneg = 1;
--- 1271,1277 ----
  
  	if (pcmd->nargs == 0) {
  		val = delay_time.l_ui * 1000 + delay_time.l_uf / 4294967;
! 		(void) fprintf(fp, "delay %ld ms\n", (long)val);
  	} else {
  		if (pcmd->argval[0].ival < 0) {
  			isneg = 1;
***************
*** 1328,1334 ****
  		if (info_auth_keyid == 0)
  			(void) fprintf(fp, "no keyid defined\n");
  		else
! 			(void) fprintf(fp, "keyid is %u\n", info_auth_keyid);
  	} else {
  		info_auth_keyid = pcmd->argval[0].uval;
  	}
--- 1328,1334 ----
  		if (info_auth_keyid == 0)
  			(void) fprintf(fp, "no keyid defined\n");
  		else
! 			(void) fprintf(fp, "keyid is %lu\n", (u_long)info_auth_keyid);
  	} else {
  		info_auth_keyid = pcmd->argval[0].uval;
  	}
diff -c xntpdc/ntpdc_ops.c:1.1.1.18 xntpdc/ntpdc_ops.c:3.21
*** xntpdc/ntpdc_ops.c:1.1.1.18	Mon May 23 18:35:44 1994
--- xntpdc/ntpdc_ops.c	Mon May 23 18:35:44 1994
***************
*** 453,460 ****
  	    ufptoa(NTOHS_FP(pp->rootdispersion), 5));
  	
  	(void) fprintf(fp,
! 	    "ppoll %d, hpoll %d, keyid %u, version %d, association %u\n",
! 	    pp->ppoll, pp->hpoll, pp->keyid, pp->version, ntohs(pp->associd));
  
  	(void) fprintf(fp,
  	    "valid %d, reach %03o, unreach %d, flash %03o, ",
--- 453,460 ----
  	    ufptoa(NTOHS_FP(pp->rootdispersion), 5));
  	
  	(void) fprintf(fp,
! 	    "ppoll %d, hpoll %d, keyid %lu, version %d, association %u\n",
! 	    pp->ppoll, pp->hpoll, (u_long)pp->keyid, pp->version, ntohs(pp->associd));
  
  	(void) fprintf(fp,
  	    "valid %d, reach %03o, unreach %d, flash %03o, ",
***************
*** 463,469 ****
  	(void) fprintf(fp, "boffset %s, ttl %d\n",
  	    fptoa(NTOHS_FP(pp->estbdelay), 5), pp->ttl);
  	
! 	(void) fprintf(fp, "timer %ds, flags", ntohl(pp->timer));
  	if (pp->flags == 0) {
  		(void) fprintf(fp, " none\n");
  	} else {
--- 463,469 ----
  	(void) fprintf(fp, "boffset %s, ttl %d\n",
  	    fptoa(NTOHS_FP(pp->estbdelay), 5), pp->ttl);
  	
! 	(void) fprintf(fp, "timer %lds, flags", (long)ntohl(pp->timer));
  	if (pp->flags == 0) {
  		(void) fprintf(fp, " none\n");
  	} else {
***************
*** 627,652 ****
  		    nntohost(pp->srcadr));
  		(void) fprintf(fp, "local interface:      %s\n",
  		    numtoa(pp->dstadr));
! 		(void) fprintf(fp, "time last received:   %ds\n",
! 		    ntohl(pp->timereceived));
! 		(void) fprintf(fp, "time until next send: %ds\n",
! 		    ntohl(pp->timetosend));
! 		(void) fprintf(fp, "reachability change:  %ds\n",
! 		    ntohl(pp->timereachable));
! 		(void) fprintf(fp, "packets sent:         %d\n",
! 		    ntohl(pp->sent));
! 		(void) fprintf(fp, "packets received:     %d\n",
! 		    ntohl(pp->processed));
! 		(void) fprintf(fp, "bad authentication:   %d\n",
! 		    ntohl(pp->badauth));
! 		(void) fprintf(fp, "bogus origin:         %d\n",
! 		    ntohl(pp->bogusorg));
! 		(void) fprintf(fp, "duplicate:            %d\n",
! 		    ntohl(pp->oldpkt));
! 		(void) fprintf(fp, "bad dispersion:       %d\n",
! 		    ntohl(pp->seldisp));
! 		(void) fprintf(fp, "bad reference time:   %d\n",
! 		    ntohl(pp->selbroken));
  		(void) fprintf(fp, "candidate order:      %d\n",
  		    (int)pp->candidate);
  		if (items > 0)
--- 627,652 ----
  		    nntohost(pp->srcadr));
  		(void) fprintf(fp, "local interface:      %s\n",
  		    numtoa(pp->dstadr));
! 		(void) fprintf(fp, "time last received:   %lds\n",
! 		    (long)ntohl(pp->timereceived));
! 		(void) fprintf(fp, "time until next send: %lds\n",
! 		    (long)ntohl(pp->timetosend));
! 		(void) fprintf(fp, "reachability change:  %lds\n",
! 		    (long)ntohl(pp->timereachable));
! 		(void) fprintf(fp, "packets sent:         %ld\n",
! 		    (long)ntohl(pp->sent));
! 		(void) fprintf(fp, "packets received:     %ld\n",
! 		    (long)ntohl(pp->processed));
! 		(void) fprintf(fp, "bad authentication:   %ld\n",
! 		    (long)ntohl(pp->badauth));
! 		(void) fprintf(fp, "bogus origin:         %ld\n",
! 		    (long)ntohl(pp->bogusorg));
! 		(void) fprintf(fp, "duplicate:            %ld\n",
! 		    (long)ntohl(pp->oldpkt));
! 		(void) fprintf(fp, "bad dispersion:       %ld\n",
! 		    (long)ntohl(pp->seldisp));
! 		(void) fprintf(fp, "bad reference time:   %ld\n",
! 		    (long)ntohl(pp->selbroken));
  		(void) fprintf(fp, "candidate order:      %d\n",
  		    (int)pp->candidate);
  		if (items > 0)
***************
*** 701,707 ****
  		NTOHL_FP(&il->drift_comp, &temp2ts);
  
  		(void) fprintf(fp,
! 		    "offset %s, frequency %s, time_const %d, watchdog %d\n",
  		    lfptoa(&tempts, 6),
  		    lfptoa(&temp2ts, 3),
  		    ntohl(il->compliance),
--- 701,707 ----
  		NTOHL_FP(&il->drift_comp, &temp2ts);
  
  		(void) fprintf(fp,
! 		    "offset %s, frequency %s, time_const %ld, watchdog %ld\n",
  		    lfptoa(&tempts, 6),
  		    lfptoa(&temp2ts, 3),
  		    ntohl(il->compliance),
***************
*** 713,721 ****
  		NTOHL_FP(&il->drift_comp, &tempts);
  		(void) fprintf(fp, "frequency:            %s ppm\n",
  		    lfptoa(&tempts, 3));
! 		(void) fprintf(fp, "time constant:        %d\n",
  		    ntohl(il->compliance));
! 		(void) fprintf(fp, "watchdog timer:       %d s\n",
  		    ntohl(il->watchdog_timer));
  	}
  }
--- 713,721 ----
  		NTOHL_FP(&il->drift_comp, &tempts);
  		(void) fprintf(fp, "frequency:            %s ppm\n",
  		    lfptoa(&tempts, 3));
! 		(void) fprintf(fp, "time constant:        %ld\n",
  		    ntohl(il->compliance));
! 		(void) fprintf(fp, "watchdog timer:       %ld s\n",
  		    ntohl(il->watchdog_timer));
  	}
  }
***************
*** 827,854 ****
  		return;
  	}
  
! 	(void) fprintf(fp, "system uptime:          %d\n",
  	    ntohl(ss->timeup));
! 	(void) fprintf(fp, "time since reset:       %d\n",
  	    ntohl(ss->timereset));
! 	(void) fprintf(fp, "bad stratum in packet:  %d\n",
  	    ntohl(ss->badstratum));
! 	(void) fprintf(fp, "old version packets:    %d\n",
  	    ntohl(ss->oldversionpkt));
! 	(void) fprintf(fp, "new version packets:    %d\n",
  	    ntohl(ss->newversionpkt));
! 	(void) fprintf(fp, "unknown version number: %d\n",
  	    ntohl(ss->unknownversion));
! 	(void) fprintf(fp, "bad packet length:      %d\n",
  	    ntohl(ss->badlength));
! 	(void) fprintf(fp, "packets processed:      %d\n",
  	    ntohl(ss->processed));
! 	(void) fprintf(fp, "bad authentication:     %d\n",
  	    ntohl(ss->badauth));
  	if (itemsize != sizeof(struct info_sys_stats))
  		return;
  	
! 	(void) fprintf(fp, "limitation rejects:     %d\n",
  	    ntohl(ss->limitrejected));
  }
  
--- 827,854 ----
  		return;
  	}
  
! 	(void) fprintf(fp, "system uptime:          %ld\n",
  	    ntohl(ss->timeup));
! 	(void) fprintf(fp, "time since reset:       %ld\n",
  	    ntohl(ss->timereset));
! 	(void) fprintf(fp, "bad stratum in packet:  %ld\n",
  	    ntohl(ss->badstratum));
! 	(void) fprintf(fp, "old version packets:    %ld\n",
  	    ntohl(ss->oldversionpkt));
! 	(void) fprintf(fp, "new version packets:    %ld\n",
  	    ntohl(ss->newversionpkt));
! 	(void) fprintf(fp, "unknown version number: %ld\n",
  	    ntohl(ss->unknownversion));
! 	(void) fprintf(fp, "bad packet length:      %ld\n",
  	    ntohl(ss->badlength));
! 	(void) fprintf(fp, "packets processed:      %ld\n",
  	    ntohl(ss->processed));
! 	(void) fprintf(fp, "bad authentication:     %ld\n",
  	    ntohl(ss->badauth));
  	if (itemsize != sizeof(struct info_sys_stats))
  		return;
  	
! 	(void) fprintf(fp, "limitation rejects:     %ld\n",
  	    ntohl(ss->limitrejected));
  }
  
***************
*** 880,886 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_io_stats)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:      %d\n",
  	    ntohl(io->timereset));
  	(void) fprintf(fp, "receive buffers:      %d\n",
  	    (int)ntohs(io->totalrecvbufs));
--- 880,886 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_io_stats)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:      %ld\n",
  	    ntohl(io->timereset));
  	(void) fprintf(fp, "receive buffers:      %d\n",
  	    (int)ntohs(io->totalrecvbufs));
***************
*** 890,908 ****
  	    (int)ntohs(io->fullrecvbufs));
  	(void) fprintf(fp, "low water refills:    %d\n",
  	    (int)ntohs(io->lowwater));
! 	(void) fprintf(fp, "dropped packets:      %d\n",
  	    ntohl(io->dropped));
! 	(void) fprintf(fp, "ignored packets:      %d\n",
  	    ntohl(io->ignored));
! 	(void) fprintf(fp, "received packets:     %d\n",
  	    ntohl(io->received));
! 	(void) fprintf(fp, "packets sent:         %d\n",
  	    ntohl(io->sent));
! 	(void) fprintf(fp, "packets not sent:     %d\n",
  	    ntohl(io->notsent));
! 	(void) fprintf(fp, "interrupts handled:   %d\n",
  	    ntohl(io->interrupts));
! 	(void) fprintf(fp, "received by int:      %d\n",
  	    ntohl(io->int_received));
  }
  
--- 890,908 ----
  	    (int)ntohs(io->fullrecvbufs));
  	(void) fprintf(fp, "low water refills:    %d\n",
  	    (int)ntohs(io->lowwater));
! 	(void) fprintf(fp, "dropped packets:      %ld\n",
  	    ntohl(io->dropped));
! 	(void) fprintf(fp, "ignored packets:      %ld\n",
  	    ntohl(io->ignored));
! 	(void) fprintf(fp, "received packets:     %ld\n",
  	    ntohl(io->received));
! 	(void) fprintf(fp, "packets sent:         %ld\n",
  	    ntohl(io->sent));
! 	(void) fprintf(fp, "packets not sent:     %ld\n",
  	    ntohl(io->notsent));
! 	(void) fprintf(fp, "interrupts handled:   %ld\n",
  	    ntohl(io->interrupts));
! 	(void) fprintf(fp, "received by int:      %ld\n",
  	    ntohl(io->int_received));
  }
  
***************
*** 935,951 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_mem_stats)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:     %d\n",
  	    ntohl(mem->timereset));
  	(void) fprintf(fp, "total peer memory:    %d\n",
  	    (int)ntohs(mem->totalpeermem));
  	(void) fprintf(fp, "free peer memory:     %d\n",
  	    (int)ntohs(mem->freepeermem));
! 	(void) fprintf(fp, "calls to findpeer:    %d\n",
  	    ntohl(mem->findpeer_calls));
! 	(void) fprintf(fp, "new peer allocations: %d\n",
  	    ntohl(mem->allocations));
! 	(void) fprintf(fp, "peer demobilizations: %d\n",
  	    ntohl(mem->demobilizations));
  
  	(void) fprintf(fp, "hash table counts:   ");
--- 935,951 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_mem_stats)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:     %ld\n",
  	    ntohl(mem->timereset));
  	(void) fprintf(fp, "total peer memory:    %d\n",
  	    (int)ntohs(mem->totalpeermem));
  	(void) fprintf(fp, "free peer memory:     %d\n",
  	    (int)ntohs(mem->freepeermem));
! 	(void) fprintf(fp, "calls to findpeer:    %ld\n",
  	    ntohl(mem->findpeer_calls));
! 	(void) fprintf(fp, "new peer allocations: %ld\n",
  	    ntohl(mem->allocations));
! 	(void) fprintf(fp, "peer demobilizations: %ld\n",
  	    ntohl(mem->demobilizations));
  
  	(void) fprintf(fp, "hash table counts:   ");
***************
*** 986,998 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_timer_stats)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:  %d\n",
  	    ntohl(tim->timereset));
! 	(void) fprintf(fp, "alarms handled:    %d\n",
  	    ntohl(tim->alarms));
! 	(void) fprintf(fp, "alarm overruns:    %d\n",
  	    ntohl(tim->overflows));
! 	(void) fprintf(fp, "calls to transmit: %d\n",
  	    ntohl(tim->xmtcalls));
  }
  
--- 986,998 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_timer_stats)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:  %ld\n",
  	    ntohl(tim->timereset));
! 	(void) fprintf(fp, "alarms handled:    %ld\n",
  	    ntohl(tim->alarms));
! 	(void) fprintf(fp, "alarm overruns:    %ld\n",
  	    ntohl(tim->overflows));
! 	(void) fprintf(fp, "calls to transmit: %ld\n",
  	    ntohl(tim->xmtcalls));
  }
  
***************
*** 1310,1316 ****
  		if (flagstr[0] == '\0')
  			(void) strcpy(flagstr, "none");
  
! 		(void) fprintf(fp, "%-15.15s %-15.15s %9d  %s\n",
  		    addr, mask, count, flagstr);
  		rl++;
  		items--;
--- 1310,1316 ----
  		if (flagstr[0] == '\0')
  			(void) strcpy(flagstr, "none");
  
! 		(void) fprintf(fp, "%-15.15s %-15.15s %9ld  %s\n",
  		    addr, mask, count, flagstr);
  		rl++;
  		items--;
***************
*** 1484,1490 ****
  		while (items > 0) {
  			addr.s_addr = ml->daddr;
  			(void) fprintf(fp, 
! 				"%-22.22s %5d %-15s %8d %1d %1d %6u %6u %7u\n",
  				       nntohost(ml->addr),
  				       ntohs(ml->port),
  				       inet_ntoa(addr),
--- 1484,1490 ----
  		while (items > 0) {
  			addr.s_addr = ml->daddr;
  			(void) fprintf(fp, 
! 				"%-22.22s %5d %-15s %8ld %1d %1d %6lu %6lu %7lu\n",
  				       nntohost(ml->addr),
  				       ntohs(ml->port),
  				       inet_ntoa(addr),
***************
*** 1491,1499 ****
  				       ntohl(ml->count),
  				       ml->mode,
  				       ml->version,
! 				       ntohl(ml->lastdrop),
! 				       ntohl(ml->lasttime),
! 				       ntohl(ml->firsttime));
  			ml++;
  			items--;
  		}
--- 1491,1499 ----
  				       ntohl(ml->count),
  				       ml->mode,
  				       ml->version,
! 				       (u_long)ntohl(ml->lastdrop),
! 				       (u_long)ntohl(ml->lasttime),
! 				       (u_long)ntohl(ml->firsttime));
  			ml++;
  			items--;
  		}
***************
*** 1507,1521 ****
  		while (items > 0) {
  			addr.s_addr = ml->lastdrop;
  			(void) fprintf(fp,
! 				"%-25.25s %5d %9d %4d %2d %9u %9u %9u\n",
  				       nntohost(ml->addr),
  				       ntohs(ml->port),
  				       ntohl(ml->count),
  				       ml->mode,
  				       ml->version,
! 				       ntohl(ml->lastdrop),
! 				       ntohl(ml->lasttime),
! 				       ntohl(ml->firsttime));
  			ml++;
  			items--;
  		}
--- 1507,1521 ----
  		while (items > 0) {
  			addr.s_addr = ml->lastdrop;
  			(void) fprintf(fp,
! 				"%-25.25s %5d %9ld %4d %2d %9lu %9lu %9lu\n",
  				       nntohost(ml->addr),
  				       ntohs(ml->port),
  				       ntohl(ml->count),
  				       ml->mode,
  				       ml->version,
! 				       (u_long)ntohl(ml->lastdrop),
! 				       (u_long)ntohl(ml->lasttime),
! 				       (u_long)ntohl(ml->firsttime));
  			ml++;
  			items--;
  		}
***************
*** 1526,1539 ****
  		(void) fprintf(fp,
  			       "======================================================================\n");
  		while (items > 0) {
! 			(void) fprintf(fp, "%-20.20s %5d %9d %4d   %3d %9u %9u\n",
  				       nntohost(oml->addr),
  				       ntohs(oml->port),
  				       ntohl(oml->count),
  				       oml->mode,
  				       oml->version,
! 				       ntohl(oml->lasttime),
! 				       ntohl(oml->firsttime));
  			oml++;
  			items--;
  		}
--- 1526,1539 ----
  		(void) fprintf(fp,
  			       "======================================================================\n");
  		while (items > 0) {
! 			(void) fprintf(fp, "%-20.20s %5d %9ld %4d   %3d %9lu %9lu\n",
  				       nntohost(oml->addr),
  				       ntohs(oml->port),
  				       ntohl(oml->count),
  				       oml->mode,
  				       oml->version,
! 				       (u_long)ntohl(oml->lasttime),
! 				       (u_long)ntohl(oml->firsttime));
  			oml++;
  			items--;
  		}
***************
*** 1775,1791 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_auth)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:     %d\n",
  	    ntohl(ia->timereset));
! 	(void) fprintf(fp, "key lookups:          %d\n",
  	    ntohl(ia->keylookups));
! 	(void) fprintf(fp, "keys not found:       %d\n",
  	    ntohl(ia->keynotfound));
! 	(void) fprintf(fp, "uncached keys:        %d\n",
  	    ntohl(ia->keyuncached));
! 	(void) fprintf(fp, "encryptions:          %d\n",
  	    ntohl(ia->encryptions));
! 	(void) fprintf(fp, "decryptions:          %d\n",
  	    ntohl(ia->decryptions));
  }
  
--- 1775,1791 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_auth)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:     %ld\n",
  	    ntohl(ia->timereset));
! 	(void) fprintf(fp, "key lookups:          %ld\n",
  	    ntohl(ia->keylookups));
! 	(void) fprintf(fp, "keys not found:       %ld\n",
  	    ntohl(ia->keynotfound));
! 	(void) fprintf(fp, "uncached keys:        %ld\n",
  	    ntohl(ia->keyuncached));
! 	(void) fprintf(fp, "encryptions:          %ld\n",
  	    ntohl(ia->encryptions));
! 	(void) fprintf(fp, "decryptions:          %ld\n",
  	    ntohl(ia->decryptions));
  }
  
***************
*** 1833,1842 ****
  		else
  			(void) fprintf(fp, "normal priority\n");
  		
! 		(void) fprintf(fp, "set for %d secs, last set %d secs ago\n",
! 		    it->origtime, it->settime);
! 		(void) fprintf(fp, "sequence %d, number of resets %d\n",
! 		    it->sequence, it->resets);
  	}
  }
  
--- 1833,1842 ----
  		else
  			(void) fprintf(fp, "normal priority\n");
  		
! 		(void) fprintf(fp, "set for %ld secs, last set %ld secs ago\n",
! 		    (long)it->origtime, (long)it->settime);
! 		(void) fprintf(fp, "sequence %d, number of resets %ld\n",
! 		    it->sequence, (long)it->resets);
  	}
  }
  
***************
*** 1981,2015 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_control)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:       %d\n",
  	    ntohl(ic->ctltimereset));
! 	(void) fprintf(fp, "requests received:      %d\n",
  	    ntohl(ic->numctlreq));
! 	(void) fprintf(fp, "responses sent:         %d\n",
  	    ntohl(ic->numctlresponses));
! 	(void) fprintf(fp, "fragments sent:         %d\n",
  	    ntohl(ic->numctlfrags));
! 	(void) fprintf(fp, "async messages sent:    %d\n",
  	    ntohl(ic->numasyncmsgs));
! 	(void) fprintf(fp, "error msgs sent:        %d\n",
  	    ntohl(ic->numctlerrors));
! 	(void) fprintf(fp, "total bad pkts:         %d\n",
  	    ntohl(ic->numctlbadpkts));
! 	(void) fprintf(fp, "packet too short:       %d\n",
  	    ntohl(ic->numctltooshort));
! 	(void) fprintf(fp, "response on input:      %d\n",
  	    ntohl(ic->numctlinputresp));
! 	(void) fprintf(fp, "fragment on input:      %d\n",
  	    ntohl(ic->numctlinputfrag));
! 	(void) fprintf(fp, "error set on input:     %d\n",
  	    ntohl(ic->numctlinputerr));
! 	(void) fprintf(fp, "bad offset on input:    %d\n",
  	    ntohl(ic->numctlbadoffset));
! 	(void) fprintf(fp, "bad version packets:    %d\n",
  	    ntohl(ic->numctlbadversion));
! 	(void) fprintf(fp, "data in pkt too short:  %d\n",
  	    ntohl(ic->numctldatatooshort));
! 	(void) fprintf(fp, "unknown op codes:       %d\n",
  	    ntohl(ic->numctlbadop));
  }
  
--- 1981,2015 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_control)))
  		return;
  
! 	(void) fprintf(fp, "time since reset:       %ld\n",
  	    ntohl(ic->ctltimereset));
! 	(void) fprintf(fp, "requests received:      %ld\n",
  	    ntohl(ic->numctlreq));
! 	(void) fprintf(fp, "responses sent:         %ld\n",
  	    ntohl(ic->numctlresponses));
! 	(void) fprintf(fp, "fragments sent:         %ld\n",
  	    ntohl(ic->numctlfrags));
! 	(void) fprintf(fp, "async messages sent:    %ld\n",
  	    ntohl(ic->numasyncmsgs));
! 	(void) fprintf(fp, "error msgs sent:        %ld\n",
  	    ntohl(ic->numctlerrors));
! 	(void) fprintf(fp, "total bad pkts:         %ld\n",
  	    ntohl(ic->numctlbadpkts));
! 	(void) fprintf(fp, "packet too short:       %ld\n",
  	    ntohl(ic->numctltooshort));
! 	(void) fprintf(fp, "response on input:      %ld\n",
  	    ntohl(ic->numctlinputresp));
! 	(void) fprintf(fp, "fragment on input:      %ld\n",
  	    ntohl(ic->numctlinputfrag));
! 	(void) fprintf(fp, "error set on input:     %ld\n",
  	    ntohl(ic->numctlinputerr));
! 	(void) fprintf(fp, "bad offset on input:    %ld\n",
  	    ntohl(ic->numctlbadoffset));
! 	(void) fprintf(fp, "bad version packets:    %ld\n",
  	    ntohl(ic->numctlbadversion));
! 	(void) fprintf(fp, "data in pkt too short:  %ld\n",
  	    ntohl(ic->numctldatatooshort));
! 	(void) fprintf(fp, "unknown op codes:       %ld\n",
  	    ntohl(ic->numctlbadop));
  }
  
***************
*** 2071,2092 ****
  		(void) fprintf(fp, "Leap overide option in effect\n");
   	if (il->leap_bits & INFO_LEAP_SEENSTRATUM1)
   		(void) fprintf(fp, "Stratum 1 restrictions in effect\n");
! 	(void) fprintf(fp, "time to next leap interrupt: %d s\n",
  	    ntohl(il->leap_timer));
  	gettstamp(&ts);
  	(void) fprintf(fp, "date of next leap interrupt: %s\n",
  	    humandate(ts.l_ui + ntohl(il->leap_timer)));
! 	(void) fprintf(fp, "calls to leap process: %u\n",
  	    ntohl(il->leap_processcalls));
! 	(void) fprintf(fp, "leap more than month away: %u\n",
  	    ntohl(il->leap_notclose));
! 	(void) fprintf(fp, "leap less than month away: %u\n",
  	    ntohl(il->leap_monthofleap));
! 	(void) fprintf(fp, "leap less than day away:   %u\n",
  	    ntohl(il->leap_dayofleap));
! 	(void) fprintf(fp, "leap in less than 2 hours: %u\n",
  	    ntohl(il->leap_hoursfromleap));
! 	(void) fprintf(fp, "leap happened:             %u\n",
  	    ntohl(il->leap_happened));
  }
  
--- 2071,2092 ----
  		(void) fprintf(fp, "Leap overide option in effect\n");
   	if (il->leap_bits & INFO_LEAP_SEENSTRATUM1)
   		(void) fprintf(fp, "Stratum 1 restrictions in effect\n");
! 	(void) fprintf(fp, "time to next leap interrupt: %ld s\n",
  	    ntohl(il->leap_timer));
  	gettstamp(&ts);
  	(void) fprintf(fp, "date of next leap interrupt: %s\n",
  	    humandate(ts.l_ui + ntohl(il->leap_timer)));
! 	(void) fprintf(fp, "calls to leap process: %lu\n",
  	    ntohl(il->leap_processcalls));
! 	(void) fprintf(fp, "leap more than month away: %lu\n",
  	    ntohl(il->leap_notclose));
! 	(void) fprintf(fp, "leap less than month away: %lu\n",
  	    ntohl(il->leap_monthofleap));
! 	(void) fprintf(fp, "leap less than day away:   %lu\n",
  	    ntohl(il->leap_dayofleap));
! 	(void) fprintf(fp, "leap in less than 2 hours: %lu\n",
  	    ntohl(il->leap_hoursfromleap));
! 	(void) fprintf(fp, "leap happened:             %lu\n",
  	    ntohl(il->leap_happened));
  }
  
***************
*** 2143,2157 ****
  		    cl->lastevent);
  		(void) fprintf(fp, "current status:       %d\n",
  		    cl->currentstatus);
! 		(void) fprintf(fp, "number of polls:      %u\n",
  		    ntohl(cl->polls));
! 		(void) fprintf(fp, "no response to poll:  %u\n",
  		    ntohl(cl->noresponse));
! 		(void) fprintf(fp, "bad format responses: %u\n",
  		    ntohl(cl->badformat));
! 		(void) fprintf(fp, "bad data responses:   %u\n",
  		    ntohl(cl->baddata));
! 		(void) fprintf(fp, "running time:         %u\n",
  		    ntohl(cl->timestarted));
  		NTOHL_FP(&cl->fudgetime1, &ts);
  		(void) fprintf(fp, "fudge time 1:         %s\n",
--- 2143,2157 ----
  		    cl->lastevent);
  		(void) fprintf(fp, "current status:       %d\n",
  		    cl->currentstatus);
! 		(void) fprintf(fp, "number of polls:      %lu\n",
  		    ntohl(cl->polls));
! 		(void) fprintf(fp, "no response to poll:  %lu\n",
  		    ntohl(cl->noresponse));
! 		(void) fprintf(fp, "bad format responses: %lu\n",
  		    ntohl(cl->badformat));
! 		(void) fprintf(fp, "bad data responses:   %lu\n",
  		    ntohl(cl->baddata));
! 		(void) fprintf(fp, "running time:         %lu\n",
  		    ntohl(cl->timestarted));
  		NTOHL_FP(&cl->fudgetime1, &ts);
  		(void) fprintf(fp, "fudge time 1:         %s\n",
***************
*** 2388,2406 ****
  	/*
  	 * pll variables
  	 */
! 	(void)fprintf(fp, "pll offset:           %d us\n",
  	    ntohl(ik->offset));
  	(void)fprintf(fp, "pll frequency:        %s ppm\n",
  	    fptoa((s_fp)ntohl(ik->freq), 3));
! 	(void)fprintf(fp, "maximum error:        %d us\n",
  	    ntohl(ik->maxerror));
! 	(void)fprintf(fp, "estimated error:      %d us\n",
  	    ntohl(ik->esterror));
  	(void)fprintf(fp, "status:               %04x\n",
  	    ntohs(ik->status & 0xffff));
! 	(void)fprintf(fp, "pll time constant:    %d\n",
  	    ntohl(ik->constant));
! 	(void)fprintf(fp, "precision:            %d us\n",
              ntohl(ik->precision));
  	(void)fprintf(fp, "frequency tolerance:  %s ppm\n",
              fptoa((s_fp)ntohl(ik->tolerance), 0));
--- 2388,2406 ----
  	/*
  	 * pll variables
  	 */
! 	(void)fprintf(fp, "pll offset:           %ld us\n",
  	    ntohl(ik->offset));
  	(void)fprintf(fp, "pll frequency:        %s ppm\n",
  	    fptoa((s_fp)ntohl(ik->freq), 3));
! 	(void)fprintf(fp, "maximum error:        %ld us\n",
  	    ntohl(ik->maxerror));
! 	(void)fprintf(fp, "estimated error:      %ld us\n",
  	    ntohl(ik->esterror));
  	(void)fprintf(fp, "status:               %04x\n",
  	    ntohs(ik->status & 0xffff));
! 	(void)fprintf(fp, "pll time constant:    %ld\n",
  	    ntohl(ik->constant));
! 	(void)fprintf(fp, "precision:            %ld us\n",
              ntohl(ik->precision));
  	(void)fprintf(fp, "frequency tolerance:  %s ppm\n",
              fptoa((s_fp)ntohl(ik->tolerance), 0));
***************
*** 2419,2434 ****
              fptoa((s_fp)ntohl(ik->ppsfreq), 3));
  	(void)fprintf(fp, "pps stability:        %s ppm\n",
  	    fptoa((s_fp)ntohl(ik->stabil), 3));
! 	(void)fprintf(fp, "pps jitter:           %d us\n",
              ntohl(ik->jitter));
  	(void)fprintf(fp, "calibration interval: %d s\n",
  	    1 << ntohs(ik->shift));
! 	(void)fprintf(fp, "calibration cycles:   %d\n",
  	    ntohl(ik->calcnt));
! 	(void)fprintf(fp, "jitter exceeded:      %d\n",
  	    ntohl(ik->jitcnt));
! 	(void)fprintf(fp, "stability exceeded:   %d\n",
  	    ntohl(ik->stbcnt));
! 	(void)fprintf(fp, "calibration errors:   %d\n",
  	    ntohl(ik->errcnt));
  }
--- 2419,2434 ----
              fptoa((s_fp)ntohl(ik->ppsfreq), 3));
  	(void)fprintf(fp, "pps stability:        %s ppm\n",
  	    fptoa((s_fp)ntohl(ik->stabil), 3));
! 	(void)fprintf(fp, "pps jitter:           %ld us\n",
              ntohl(ik->jitter));
  	(void)fprintf(fp, "calibration interval: %d s\n",
  	    1 << ntohs(ik->shift));
! 	(void)fprintf(fp, "calibration cycles:   %ld\n",
  	    ntohl(ik->calcnt));
! 	(void)fprintf(fp, "jitter exceeded:      %ld\n",
  	    ntohl(ik->jitcnt));
! 	(void)fprintf(fp, "stability exceeded:   %ld\n",
  	    ntohl(ik->stbcnt));
! 	(void)fprintf(fp, "calibration errors:   %ld\n",
  	    ntohl(ik->errcnt));
  }
cvs rdiff: Diffing xntpres
*** parse/util/parsetest.c	Mon Feb 21 04:25:30 1994
--- parse/util/parsetest.c	Thu May 12 14:49:27 1994
***************
*** 1,7 ****
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/parsetest.c,v 3.13 1994/02/20 13:04:46 kardel Exp
   *
!  * parsetest.c,v 3.13 1994/02/20 13:04:46 kardel Exp
   *
   * Copyright (c) 1989,1990,1991,1992,1993,1994
   * Frank Kardel Friedrich-Alexander Universitaet Erlangen-Nuernberg
--- 1,7 ----
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/parsetest.c,v 3.14 1994/05/12 12:49:27 kardel Exp
   *
!  * parsetest.c,v 3.14 1994/05/12 12:49:27 kardel Exp
   *
   * Copyright (c) 1989,1990,1991,1992,1993,1994
   * Frank Kardel Friedrich-Alexander Universitaet Erlangen-Nuernberg
***************
*** 10,16 ****
   * but WITHOUT ANY WARRANTY; without even the implied warranty of
   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   *
!  * parsetest.c,v
   * Revision 3.13  1994/02/20  13:04:46  kardel
   * parse add/delete second support
   *
--- 10,22 ----
   * but WITHOUT ANY WARRANTY; without even the implied warranty of
   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   *
!  * $Log: parsetest.c,v $
!  * Revision 3.14  1994/05/12  12:49:27  kardel
!  * printf fmt/arg cleanup
!  *
!  * Revision 3.14  1994/05/11  09:25:43  kardel
!  * 3.3r + printf fmt/arg fixes
!  *
   * Revision 3.13  1994/02/20  13:04:46  kardel
   * parse add/delete second support
   *
***************
*** 59,65 ****
        { PARSEB_NOSYNC,   "TIME CODE NOT CONFIRMED" },
        { PARSEB_DST,      "DST" },
        { PARSEB_UTC,      "UTC DISPLAY" },
!       { PARSEB_LEAP,     "LEAP WARNING" },
        { PARSEB_LEAPSECOND, "LEAP SECOND" },
        { PARSEB_ALTERNATE,"ALTERNATE ANTENNA" },
        { PARSEB_TIMECODE, "TIME CODE" },
--- 65,72 ----
        { PARSEB_NOSYNC,   "TIME CODE NOT CONFIRMED" },
        { PARSEB_DST,      "DST" },
        { PARSEB_UTC,      "UTC DISPLAY" },
!       { PARSEB_LEAPADD,  "LEAP ADDITION WARNING" },
!       { PARSEB_LEAPDEL,  "LEAP DELETION WARNING" },
        { PARSEB_LEAPSECOND, "LEAP SECOND" },
        { PARSEB_ALTERNATE,"ALTERNATE ANTENNA" },
        { PARSEB_TIMECODE, "TIME CODE" },
***************
*** 194,200 ****
  	  parsetime_t parsetime;
  	  struct strioctl strioc;
  	  
! 	  printf("parsetest.c,v 3.13 1994/02/20 13:04:46 kardel Exp\n");
  	  
  	  while (ioctl(fd, I_POP, 0) == 0)
  	    ;
--- 201,207 ----
  	  parsetime_t parsetime;
  	  struct strioctl strioc;
  	  
! 	  printf("parsetest.c,v 3.11 1994/01/23 19:00:01 kardel Exp\n");
  	  
  	  while (ioctl(fd, I_POP, 0) == 0)
  	    ;
***************
*** 215,221 ****
  	      perror("ioctl(fd, I_STR(PARSEIOC_GETSTAT))");
  	      exit(1);
  	    }
! 	  printf("parse status: %04x\n", dct.parsestatus.flags);
  
  	  dct.parsestatus.flags |= PARSE_STAT_FILTER;
  	  strioc.ic_cmd = PARSEIOC_SETSTAT;
--- 222,228 ----
  	      perror("ioctl(fd, I_STR(PARSEIOC_GETSTAT))");
  	      exit(1);
  	    }
! 	  printf("parse status: %04lx\n", (unsigned long)dct.parsestatus.flags);
  
  	  dct.parsestatus.flags |= PARSE_STAT_FILTER;
  	  strioc.ic_cmd = PARSEIOC_SETSTAT;
***************
*** 232,238 ****
  	      perror("ioctl(fd, I_STR(PARSEIOC_GETSTAT))");
  	      exit(1);
  	    }
! 	  printf("parse status: %04x\n", dct.parsestatus.flags);
  
  	  while (read(fd, &parsetime, sizeof(parsetime)) == sizeof(parsetime))
  	    {
--- 239,245 ----
  	      perror("ioctl(fd, I_STR(PARSEIOC_GETSTAT))");
  	      exit(1);
  	    }
! 	  printf("parse status: %04lx\n", (unsigned long)dct.parsestatus.flags);
  
  	  while (read(fd, &parsetime, sizeof(parsetime)) == sizeof(parsetime))
  	    {
***************
*** 245,259 ****
  	      tmp1[24] = '\0';
  	      tmp2[24] = '\0';
  
! 	      printf("%s (+%06dus) %s PPS: %s (+%06dus), ", tmp1, parsetime.parse_stime.tv.tv_usec, tmp, tmp2, parsetime.parse_ptime.tv.tv_usec);
  
  	      strstatus(tmp, parsetime.parse_state);
! 	      printf("state: 0x%x (%s) error: %dus, dispersion: %dus, Status: 0x%x (%s)\n",
! 		     parsetime.parse_state,
  		     tmp,
! 		     parsetime.parse_usecerror,
! 		     parsetime.parse_usecdisp,
! 		     parsetime.parse_status,
  		     parsestatus(parsetime.parse_status, tmp1));
  	    }
  	  
--- 252,267 ----
  	      tmp1[24] = '\0';
  	      tmp2[24] = '\0';
  
! 	      printf("%s (+%06ldus) %s PPS: %s (+%06ldus), ", tmp1, (long int)parsetime.parse_stime.tv.tv_usec, tmp, tmp2,
! 		     (long int)parsetime.parse_ptime.tv.tv_usec);
  
  	      strstatus(tmp, parsetime.parse_state);
! 	      printf("state: 0x%lx (%s) error: %ldus, dispersion: %ldus, Status: 0x%lx (%s)\n",
! 		     (unsigned long)parsetime.parse_state,
  		     tmp,
! 		     (long)parsetime.parse_usecerror,
! 		     (long)parsetime.parse_usecdisp,
! 		     (unsigned long)parsetime.parse_status,
  		     parsestatus(parsetime.parse_status, tmp1));
  	    }
  	  
-- 
	   Frank Kardel (kardel@informatik.uni-erlangen.de)
    All SCSI disks will from now on be required to send an email
         notice 24 hours prior to complete hardware failure!


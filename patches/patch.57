
Received: from louie.udel.edu by huey.udel.edu id aa03658; 12 May 94 20:41 EDT
Received: from faui45.informatik.uni-erlangen.de by louie.udel.edu id aa27572;
          12 May 94 20:29 EDT
Received: from faui43.informatik.uni-erlangen.de by uni-erlangen.de with SMTP;
	id AA16694 (5.65c-6/7.3v-FAU); Fri, 13 May 1994 02:29:47 +0200
Received: by immd4.informatik.uni-erlangen.de;
	id AA13306 (5.65c-6/7.3m-FAU); Fri, 13 May 1994 02:29:43 +0200
From: Frank Kardel <Frank.Kardel@informatik.uni-erlangen.de>
Message-Id: <199405130029.AA13306@faui43.informatik.uni-erlangen.de>
Subject: patches for pogo:/pogo/dist/xntp3.3u.tar
To: mills@udel.edu
Date: Fri, 13 May 94 2:29:41 DST
X-Mailer: ELM [version 2.3 PL11]

Hi Dave,

Ok, here they are:
	- fix to reduce gcc 2.5.8 noise about printf fmt/arg mismatch
	- if MCAST is defined and the system does not support it compilation is
	  still possible
	- sys_refid fix
	- pps enable fix (got trashed of pps was supplied diretly by refclock driver)
	- ntpq sys status word interpretation fix (PPS stati where listed sync_xxx)
	- parse fixes
	- VERSION update (->3.3u)

diff -c VERSION:1.1.1.17 VERSION:3.23
*** VERSION:1.1.1.17	Fri May 13 00:56:13 1994
--- VERSION	Fri May 13 00:56:14 1994
***************
*** 1 ****
! version=3.3t (beta multicast)
--- 1 ----
! version=3.3u (beta multicast)
diff -c authstuff/authcert.c:1.1.1.6 authstuff/authcert.c:3.5
*** authstuff/authcert.c:1.1.1.6	Fri May 13 00:56:39 1994
--- authstuff/authcert.c	Fri May 13 00:56:39 1994
***************
*** 91,96 ****

  	
  	for(i=0;i<2;i++){
! 		printf("%08x",*lp++);
  	}
  }
--- 91,96 ----

  	
  	for(i=0;i<2;i++){
! 		printf("%08lx",(unsigned long)(*lp++));
  	}
  }
diff -c include/parse.h:1.1.1.9 include/parse.h:3.18
*** include/parse.h:1.1.1.9	Fri May 13 00:57:52 1994
--- include/parse.h	Fri May 13 00:57:52 1994
***************
*** 1,7 ****
  /*
!  * /src/NTP/REPOSITORY/v3/include/parse.h,v 3.17 1994/03/03 09:27:20 kardel Exp
   *
!  * parse.h,v 3.17 1994/03/03 09:27:20 kardel Exp
   *
   * Copyright (c) 1989,1990,1991,1992,1993,1994
   * Frank Kardel Friedrich-Alexander Universitaet Erlangen-Nuernberg
--- 1,7 ----
  /*
!  * /src/NTP/REPOSITORY/v3/include/parse.h,v 3.18 1994/05/12 12:40:34 kardel Exp
   *
!  * parse.h,v 3.18 1994/05/12 12:40:34 kardel Exp
   *
   * Copyright (c) 1989,1990,1991,1992,1993,1994
   * Frank Kardel Friedrich-Alexander Universitaet Erlangen-Nuernberg
***************
*** 15,21 ****
  #ifndef __PARSE_H__
  #define __PARSE_H__
  #if	!(defined(lint) || defined(__GNUC__))
!   static char parsehrcsid[]="parse.h,v 3.17 1994/03/03 09:27:20 kardel Exp";
  #endif

  #include "ntp_types.h"
--- 15,21 ----
  #ifndef __PARSE_H__
  #define __PARSE_H__
  #if	!(defined(lint) || defined(__GNUC__))
!   static char parsehrcsid[]="parse.h,v 3.18 1994/05/12 12:40:34 kardel Exp";
  #endif

  #include "ntp_types.h"
***************
*** 50,56 ****
  #define FREE(_X_, _Y_) kmem_free((caddr_t)_X_, _Y_)
  #endif
  #else
- /* extern char *malloc();		XXX defined elsewhere */
  #define MALLOC(_X_) malloc(_X_)
  #define FREE(_X_, _Y_) free(_X_)
  #endif
--- 50,55 ----
***************
*** 74,79 ****
--- 73,85 ----
  #endif	/* DEBUG */
  #endif	/* PARSESTREAM */

+ #if defined(timercmp) && defined(__GNUC__)
+ #undef timercmp
+ #define	timercmp(tvp, uvp, cmp)	\
+ 	((tvp)->tv_sec cmp (uvp)->tv_sec || \
+ 	 ((tvp)->tv_sec == (uvp)->tv_sec && (tvp)->tv_usec cmp (uvp)->tv_usec))
+ #endif
+ 
  #ifndef TIMES10
  #define TIMES10(_X_)	(((_X_) << 3) + ((_X_) << 1))
  #endif
***************
*** 385,391 ****
  /*
   * History:
   *
!  * parse.h,v
   * Revision 3.17  1994/03/03  09:27:20  kardel
   * rcs ids fixed
   *
--- 391,400 ----
  /*
   * History:
   *
!  * parse.h,v
!  * Revision 3.18  1994/05/12  12:40:34  kardel
!  * shut up gcc about broken Sun/BSD code
!  *
   * Revision 3.17  1994/03/03  09:27:20  kardel
   * rcs ids fixed
   *
diff -c lib/numtoa.c:1.1.1.7 lib/numtoa.c:3.4
*** lib/numtoa.c:1.1.1.7	Fri May 13 00:58:44 1994
--- lib/numtoa.c	Fri May 13 00:58:44 1994
***************
*** 17,24 ****
  	netnum = ntohl(num);
  	LIB_GETBUF(buf);

! 	(void) sprintf(buf, "%d.%d.%d.%d", (netnum>>24)&0xff,
! 	    (netnum>>16)&0xff, (netnum>>8)&0xff, netnum&0xff);

  	return buf;
  }
--- 17,25 ----
  	netnum = ntohl(num);
  	LIB_GETBUF(buf);

! 	(void) sprintf(buf, "%lu.%lu.%lu.%lu", (unsigned long)(netnum>>24)&0xff,
! 	    (unsigned long)(netnum>>16)&0xff, (unsigned long)(netnum>>8)&0xff,
! 		       (unsigned long)netnum&0xff);

  	return buf;
  }
diff -c lib/prettydate.c:1.1.1.8 lib/prettydate.c:3.5
*** lib/prettydate.c:1.1.1.8	Fri May 13 00:58:46 1994
--- lib/prettydate.c	Fri May 13 00:58:47 1994
***************
*** 35,44 ****

  	tm = localtime((LONG *)&sec);

! 	(void) sprintf(bp, "%08x.%08x  %s, %s %2d %4d %2d:%02d:%02d.%03d",
! 	    ts->l_ui, ts->l_uf, days[tm->tm_wday], months[tm->tm_mon],
! 	    tm->tm_mday, 1900+tm->tm_year, tm->tm_hour, tm->tm_min,
! 	    tm->tm_sec, msec);
  	
  	return bp;
  }
--- 35,45 ----

  	tm = localtime((LONG *)&sec);

! 	(void) sprintf(bp, "%08lx.%08lx  %s, %s %2d %4d %2u:%02u:%02u.%03lu",
! 		       (unsigned long)ts->l_ui, (unsigned long)ts->l_uf, days[tm->tm_wday],
! 		       months[tm->tm_mon], tm->tm_mday, (unsigned int)(1900+tm->tm_year),
! 		       (unsigned int)tm->tm_hour,(unsigned int)tm->tm_min,
! 		       (unsigned int)tm->tm_sec, (unsigned long)msec);
  	
  	return bp;
  }
diff -c lib/refnumtoa.c:1.1.1.3 lib/refnumtoa.c:3.7
*** lib/refnumtoa.c:1.1.1.3	Fri May 13 00:58:48 1994
--- lib/refnumtoa.c	Fri May 13 00:58:48 1994
***************
*** 23,33 ****

  	if (rclock != NULL)
  	  {
! 	    (void) sprintf(buf, "%s(%d)", clockname((int)((netnum>>8)&0xff)), netnum&0xff);
  	  }
  	else
  	  {
! 	    (void) sprintf(buf, "REFCLK(%d,%d)", (netnum>>8)&0xff, netnum&0xff);
  	  }

  	return buf;
--- 23,33 ----

  	if (rclock != NULL)
  	  {
! 	    (void) sprintf(buf, "%s(%lu)", clockname((int)((netnum>>8)&0xff)), (unsigned long)netnum&0xff);
  	  }
  	else
  	  {
! 	    (void) sprintf(buf, "REFCLK(%lu,%lu)", (unsigned long)((netnum>>8)&0xff), (unsigned long)(netnum&0xff));
  	  }

  	return buf;
diff -c lib/uglydate.c:1.1.1.8 lib/uglydate.c:3.5
*** lib/uglydate.c:1.1.1.8	Fri May 13 00:58:53 1994
--- lib/uglydate.c	Fri May 13 00:58:54 1994
***************
*** 45,53 ****
  			year -= 100;
  	}

! 	(void) sprintf(bp, "%17s %02d:%03d:%02d:%02d:%02d.%03d",
  	    timep, year, tm->tm_yday, tm->tm_hour, tm->tm_min,
! 	    tm->tm_sec, msec);

  	return bp;
  }
--- 45,53 ----
  			year -= 100;
  	}

! 	(void) sprintf(bp, "%17s %02d:%03d:%02d:%02d:%02d.%03lu",
  	    timep, year, tm->tm_yday, tm->tm_hour, tm->tm_min,
! 	    tm->tm_sec, (unsigned long)msec);

  	return bp;
  }
diff -c ntpdate/ntpdate.c:1.1.1.22 ntpdate/ntpdate.c:3.22
*** ntpdate/ntpdate.c:1.1.1.22	Fri May 13 00:59:25 1994
--- ntpdate/ntpdate.c	Fri May 13 00:59:25 1994
***************
*** 313,319 ****
  		if (!authhavekey(sys_authkey)) {
  			char buf[10];

! 			(void) sprintf(buf, "%u", sys_authkey);
  			syslog(LOG_ERR, "authentication key %s unknown", buf);
  			exit(1);
  		}
--- 313,319 ----
  		if (!authhavekey(sys_authkey)) {
  			char buf[10];

! 			(void) sprintf(buf, "%lu", (unsigned long)sys_authkey);
  			syslog(LOG_ERR, "authentication key %s unknown", buf);
  			exit(1);
  		}
***************
*** 564,572 ****
  		is_authentic = 0;

  		if (debug > 3)
! 		    printf("receive: rpkt keyid=%d sys_authkey=%d decrypt=%d\n",
! 			   ntohl(rpkt->keyid), sys_authkey, 
! 			   authdecrypt(sys_authkey, (U_LONG *)rpkt,
  				       LEN_PKT_NOMAC));

  		if (has_mac && ntohl(rpkt->keyid) == sys_authkey &&
--- 564,572 ----
  		is_authentic = 0;

  		if (debug > 3)
! 		    printf("receive: rpkt keyid=%ld sys_authkey=%ld decrypt=%ld\n",
! 			   (long int)ntohl(rpkt->keyid), (long int)sys_authkey, 
! 			   (long int)authdecrypt(sys_authkey, (U_LONG *)rpkt,
  				       LEN_PKT_NOMAC));

  		if (has_mac && ntohl(rpkt->keyid) == sys_authkey &&
diff -c ntpq/ntpq.c:1.1.1.23 ntpq/ntpq.c:3.26
*** ntpq/ntpq.c:1.1.1.23	Fri May 13 00:59:30 1994
--- ntpq/ntpq.c	Fri May 13 00:59:30 1994
***************
*** 1550,1558 ****
  	if (decodenetnum(host, num)) {
  		if (fullhost != 0) {
  			(void) sprintf(fullhost,
! 			    "%d.%d.%d.%d", ((htonl(*num)>>24)&0xff),
! 			    ((htonl(*num)>>16)&0xff), ((htonl(*num)>>8)&0xff),
! 			    (htonl(*num)&0xff));
  		}
  		return 1;
  	} else if ((hp = gethostbyname(host)) != 0) {
--- 1550,1558 ----
  	if (decodenetnum(host, num)) {
  		if (fullhost != 0) {
  			(void) sprintf(fullhost,
! 			    "%u.%u.%u.%u", (unsigned int)((htonl(*num)>>24)&0xff),
! 			    (unsigned int)((htonl(*num)>>16)&0xff), (unsigned int)((htonl(*num)>>8)&0xff),
! 			    (unsigned int)(htonl(*num)&0xff));
  		}
  		return 1;
  	} else if ((hp = gethostbyname(host)) != 0) {
***************
*** 2021,2027 ****

  	if (pcmd->nargs == 0) {
  		val = delay_time.l_ui * 1000 + delay_time.l_uf / 4294967;
! 		(void) fprintf(fp, "delay %d ms\n", val);
  	} else {
  		if (pcmd->argval[0].ival < 0) {
  			isneg = 1;
--- 2021,2027 ----

  	if (pcmd->nargs == 0) {
  		val = delay_time.l_ui * 1000 + delay_time.l_uf / 4294967;
! 		(void) fprintf(fp, "delay %ld ms\n", (long int)val);
  	} else {
  		if (pcmd->argval[0].ival < 0) {
  			isneg = 1;
***************
*** 2092,2098 ****
  		if (info_auth_keyid == -1)
  			(void) fprintf(fp, "no keyid defined\n");
  		else
! 			(void) fprintf(fp, "keyid is %u\n", info_auth_keyid);
  	} else {
  		info_auth_keyid = pcmd->argval[0].uval;
  	}
--- 2092,2098 ----
  		if (info_auth_keyid == -1)
  			(void) fprintf(fp, "no keyid defined\n");
  		else
! 			(void) fprintf(fp, "keyid is %lu\n", (unsigned long)info_auth_keyid);
  	} else {
  		info_auth_keyid = pcmd->argval[0].uval;
  	}
***************
*** 2515,2521 ****
  	case TYPE_SYS:
  		(void)strcpy(cb, getcode(CTL_SYS_LI(st), leap_codes));
  		(void)strcat(cb, ", ");
! 		(void)strcat(cb, getcode(CTL_SYS_SOURCE(st), sync_codes));
  		(void)strcat(cb, ", ");
  		(void)strcat(cb, getevents(CTL_SYS_NEVNT(st)));
  		(void)strcat(cb, ", ");
--- 2515,2523 ----
  	case TYPE_SYS:
  		(void)strcpy(cb, getcode(CTL_SYS_LI(st), leap_codes));
  		(void)strcat(cb, ", ");
! 		(void)strcat(cb, getcode(CTL_SYS_SOURCE(st) & ~CTL_SST_TS_PPS, sync_codes));
! 		if (CTL_SYS_SOURCE(st) & CTL_SST_TS_PPS)
! 			(void)strcat(cb, "/PPS");
  		(void)strcat(cb, ", ");
  		(void)strcat(cb, getevents(CTL_SYS_NEVNT(st)));
  		(void)strcat(cb, ", ");
***************
*** 2865,2871 ****
    	if (++nextcb >= NUMCB)
  	  	nextcb = 0;

!   	sprintf(cb, "0x%x", val);
    	cb += strlen(cb);
    	if (val <= ((1<<8)-1)) {
      		if (!val) {
--- 2867,2873 ----
    	if (++nextcb >= NUMCB)
  	  	nextcb = 0;

!   	sprintf(cb, "0x%lx", (unsigned long)val);
    	cb += strlen(cb);
    	if (val <= ((1<<8)-1)) {
      		if (!val) {
***************
*** 3028,3034 ****
  				else {
  					char b[10];

! 					(void) sprintf(b, "%03o", uval);
  					output(fp, name, b);
  				}
  				break;
--- 3030,3036 ----
  				else {
  					char b[10];

! 					(void) sprintf(b, "%03o", (unsigned int)uval);
  					output(fp, name, b);
  				}
  				break;
diff -c ntpq/ntpq_ops.c:1.1.1.8 ntpq/ntpq_ops.c:3.8
*** ntpq/ntpq_ops.c:1.1.1.8	Fri May 13 00:59:32 1994
--- ntpq/ntpq_ops.c	Fri May 13 00:59:32 1994
***************
*** 1174,1197 ****
  	}

  	if (diff <= 2048) {
! 		(void) sprintf(buf, "%d", diff);
  		return buf;
  	}

  	diff = (diff + 29) / 60;
  	if (diff <= 300) {
! 		(void) sprintf(buf, "%dm", diff);
  		return buf;
  	}

  	diff = (diff + 29) / 60;
  	if (diff <= 96) {
! 		(void) sprintf(buf, "%dh", diff);
  		return buf;
  	}

  	diff = (diff + 11) / 24;
! 	(void) sprintf(buf, "%dd", diff);
  	return buf;
  }

--- 1174,1197 ----
  	}

  	if (diff <= 2048) {
! 		(void) sprintf(buf, "%ld", (long int)diff);
  		return buf;
  	}

  	diff = (diff + 29) / 60;
  	if (diff <= 300) {
! 		(void) sprintf(buf, "%ldm", (long int)diff);
  		return buf;
  	}

  	diff = (diff + 29) / 60;
  	if (diff <= 96) {
! 		(void) sprintf(buf, "%ldh", (long int)diff);
  		return buf;
  	}

  	diff = (diff + 11) / 24;
! 	(void) sprintf(buf, "%ldd", (long int)diff);
  	return buf;
  }

***************
*** 1408,1417 ****
  	if (numhosts > 1)
  		(void) fprintf(fp, "%-*s ", maxhostlen, currenthost);
  	(void) fprintf(fp,
! 	    "%c%-15.15s %-15.15s %2d %4.4s %4d  %3o  %7.7s %7.7s %7.7s\n",
! 	    c, nntohost(srcadr), dstadr_refid, stratum,
  	    when(&ts, &rec, &reftime),
! 	    poll, reach, fixup(7, lfptoms(&estdelay, 2)),
  	    fixup(7, lfptoms(&estoffset, 2)),
  	    fixup(7, lfptoms(&estdisp, 2)));
  	return 1;
--- 1408,1417 ----
  	if (numhosts > 1)
  		(void) fprintf(fp, "%-*s ", maxhostlen, currenthost);
  	(void) fprintf(fp,
! 	    "%c%-15.15s %-15.15s %2ld %4.4s %4ld  %3o  %7.7s %7.7s %7.7s\n",
! 	    c, nntohost(srcadr), dstadr_refid, (long int)stratum,
  	    when(&ts, &rec, &reftime),
! 	    (long int)poll, (int)reach, fixup(7, lfptoms(&estdelay, 2)),
  	    fixup(7, lfptoms(&estoffset, 2)),
  	    fixup(7, lfptoms(&estdisp, 2)));
  	return 1;
diff -c ntptrace/ntptrace.c:1.1.1.14 ntptrace/ntptrace.c:1.4
*** ntptrace/ntptrace.c:1.1.1.14	Fri May 13 00:59:35 1994
--- ntptrace/ntptrace.c	Fri May 13 00:59:37 1994
***************
*** 145,152 ****
  			sys_timeout = atoi(ntp_optarg);
  			if (sys_timeout < 1) {
  			    (void)fprintf(stderr,
! 					"%s: timeout (%d) too short\n",
! 					progname, sys_timeout);
  			    errflg++;
  			}
  			break;
--- 145,152 ----
  			sys_timeout = atoi(ntp_optarg);
  			if (sys_timeout < 1) {
  			    (void)fprintf(stderr,
! 					"%s: timeout (%ld) too short\n",
! 					progname, (long int)sys_timeout);
  			    errflg++;
  			}
  			break;
diff -c parse/Makefile.kernel:1.1.1.4 parse/Makefile.kernel:3.10
*** parse/Makefile.kernel:1.1.1.4	Fri May 13 00:59:40 1994
--- parse/Makefile.kernel	Fri May 13 00:59:40 1994
***************
*** 30,48 ****
  	ld -r -o parse parsesolaris.o libparse_kernel.a ../lib/libntp.a
  	@echo "--- Install 'parse' in /kernel/strmod for automatic loading"

! mparsestreams.o: mparsestreams.o.$(KARCH)
! 	@echo "--- You may load mparsestreams.o.$(KARCH) via 'modload mparsestreams.o.$(KARCH)' into the kernel"

! mparsestreams.o.$(KARCH): parsestreams.c microtime.o ../lib/libntp.a libparse_kernel.a ../include/parse.h ../include/sys/parsestreams.h
  	cc -c -DMICROTIME $(DEFS) -I../include parsestreams.c
  	ld -r -o $@ parsestreams.o ../lib/libntp.a libparse_kernel.a \
  		    microtime.o
  	rm -f parsestreams.o

! parsestreams.o: parsestreams.o.$(KARCH)
! 	@echo "--- You may load parsestreams.o.$(KARCH) via 'modload parsestreams.o' (put in e.g. /sys/<karch>/OBJ) into the kernel"

! parsestreams.o.$(KARCH): parsestreams.c ../lib/libntp.a libparse_kernel.a ../include/parse.h ../include/sys/parsestreams.h
  	cc -c $(DEFS) -I../include parsestreams.c
  	ld -r -o $@ parsestreams.o ../lib/libntp.a libparse_kernel.a
  	rm -f parsestreams.o
--- 30,48 ----
  	ld -r -o parse parsesolaris.o libparse_kernel.a ../lib/libntp.a
  	@echo "--- Install 'parse' in /kernel/strmod for automatic loading"

! mparsestreams.o: mparsestreams.$(KARCH).o
! 	@echo "--- You may load mparsestreams.$(KARCH).o via 'modload mparsestreams.$(KARCH).o' into the kernel"

! mparsestreams.$(KARCH).o: parsestreams.c microtime.o ../lib/libntp.a libparse_kernel.a ../include/parse.h ../include/sys/parsestreams.h
  	cc -c -DMICROTIME $(DEFS) -I../include parsestreams.c
  	ld -r -o $@ parsestreams.o ../lib/libntp.a libparse_kernel.a \
  		    microtime.o
  	rm -f parsestreams.o

! parsestreams.o: parsestreams.$(KARCH).o
! 	@echo "--- You may load parsestreams.$(KARCH).o via 'modload parsestreams.o' (put in e.g. /sys/<karch>/OBJ) into the kernel"

! parsestreams.$(KARCH).o: parsestreams.c ../lib/libntp.a libparse_kernel.a ../include/parse.h ../include/sys/parsestreams.h
  	cc -c $(DEFS) -I../include parsestreams.c
  	ld -r -o $@ parsestreams.o ../lib/libntp.a libparse_kernel.a
  	rm -f parsestreams.o
diff -c parse/clk_rawdcf.c:1.1.1.11 parse/clk_rawdcf.c:3.14
*** parse/clk_rawdcf.c:1.1.1.11	Fri May 13 00:59:46 1994
--- parse/clk_rawdcf.c	Fri May 13 00:59:46 1994
***************
*** 1,8 ****
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS)) && defined(CLOCK_RAWDCF)
  /*
!  * /src/NTP/REPOSITORY/v3/parse/clk_rawdcf.c,v 3.13 1994/03/10 19:00:43 kardel Exp
   *  
!  * clk_rawdcf.c,v 3.13 1994/03/10 19:00:43 kardel Exp
   *
   * Raw DCF77 pulse clock support
   *
--- 1,8 ----
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS)) && defined(CLOCK_RAWDCF)
  /*
!  * /src/NTP/REPOSITORY/v3/parse/clk_rawdcf.c,v 3.14 1994/05/12 12:49:09 kardel Exp
   *  
!  * clk_rawdcf.c,v 3.14 1994/05/12 12:49:09 kardel Exp
   *
   * Raw DCF77 pulse clock support
   *
***************
*** 284,292 ****
        if (ext_bf(buffer, DCF_R, dcfparam->zerobits))
  	clock->flags |= PARSEB_ALTERNATE;

!       parseprintf(DD_RAWDCF,("parse: convert_rawdcf: TIME CODE OK: %d:%d, %d.%d.%d, flags 0x%x\n",
! 			  clock->hour, clock->minute, clock->day, clock->month, clock->year,
! 			  clock->flags));
        return CVT_OK;
      }
    else
--- 284,292 ----
        if (ext_bf(buffer, DCF_R, dcfparam->zerobits))
  	clock->flags |= PARSEB_ALTERNATE;

!       parseprintf(DD_RAWDCF,("parse: convert_rawdcf: TIME CODE OK: %d:%d, %d.%d.%d, flags 0x%lx\n",
! 			  (int)clock->hour, (int)clock->minute, (int)clock->day, (int)clock->month,(int) clock->year,
! 			  (unsigned long)clock->flags));
        return CVT_OK;
      }
    else
***************
*** 529,535 ****
  /*
   * History:
   *
!  * clk_rawdcf.c,v
   * Revision 3.13  1994/03/10  19:00:43  kardel
   * clear utctime field to avoid confusion on synthesize time stamps
   *
--- 529,538 ----
  /*
   * History:
   *
!  * clk_rawdcf.c,v
!  * Revision 3.14  1994/05/12  12:49:09  kardel
!  * printf fmt/arg cleanup
!  *
   * Revision 3.13  1994/03/10  19:00:43  kardel
   * clear utctime field to avoid confusion on synthesize time stamps
   *
diff -c parse/clk_schmid.c:1.1.1.10 parse/clk_schmid.c:3.15
*** parse/clk_schmid.c:1.1.1.10	Fri May 13 00:59:47 1994
--- parse/clk_schmid.c	Fri May 13 00:59:47 1994
***************
*** 1,8 ****
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS)) && defined(CLOCK_SCHMID)
  /*
!  * /src/NTP/REPOSITORY/v3/parse/clk_schmid.c,v 3.13 1994/02/20 13:04:41 kardel Exp
   *  
!  * clk_schmid.c,v 3.13 1994/02/20 13:04:41 kardel Exp
   *
   * Schmid clock support
   *
--- 1,8 ----
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS)) && defined(CLOCK_SCHMID)
  /*
!  * /src/NTP/REPOSITORY/v3/parse/clk_schmid.c,v 3.15 1994/05/12 12:34:48 kardel Exp
   *  
!  * clk_schmid.c,v 3.15 1994/05/12 12:34:48 kardel Exp
   *
   * Schmid clock support
   *
***************
*** 79,97 ****

  static unsigned LONG
  cvt_schmid(buffer, size, format, clock)
!   register char          *buffer;
    register int            size;
    register struct format *format;
    register clocktime_t   *clock;
  {
!   if ((size != 11) || (buffer[10] != '\375'))
      {
        return CVT_NONE;
      }
    else
      {
!       if (buffer[0] > 23 || buffer[1] > 59 || buffer[2] > 59 || buffer[3] >  9 /* Time */
! 	  ||  buffer[0] <  0 || buffer[1] <  0 || buffer[2] <  0 || buffer[3] <  0)
  	{
  	  return CVT_FAIL|CVT_BADTIME;
  	}
--- 79,96 ----

  static unsigned LONG
  cvt_schmid(buffer, size, format, clock)
!   register unsigned char *buffer;
    register int            size;
    register struct format *format;
    register clocktime_t   *clock;
  {
!   if ((size != 11) || (buffer[10] != (unsigned char)'\375'))
      {
        return CVT_NONE;
      }
    else
      {
!       if (buffer[0] > 23 || buffer[1] > 59 || buffer[2] > 59 || buffer[3] >  9) /* Time */
  	{
  	  return CVT_FAIL|CVT_BADTIME;
  	}
***************
*** 167,173 ****
  /*
   * History:
   *
!  * clk_schmid.c,v
   * Revision 3.13  1994/02/20  13:04:41  kardel
   * parse add/delete second support
   *
--- 166,178 ----
  /*
   * History:
   *
!  * clk_schmid.c,v
!  * Revision 3.15  1994/05/12  12:34:48  kardel
!  * data type cleanup
!  *
!  * Revision 3.14  1994/04/12  14:56:31  kardel
!  * fix declaration
!  *
   * Revision 3.13  1994/02/20  13:04:41  kardel
   * parse add/delete second support
   *
diff -c parse/parse.c:1.1.1.11 parse/parse.c:3.25
*** parse/parse.c:1.1.1.11	Fri May 13 00:59:51 1994
--- parse/parse.c	Fri May 13 00:59:51 1994
***************
*** 1,8 ****
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS))
  /*
!  * /src/NTP/REPOSITORY/v3/parse/parse.c,v 3.23 1994/03/25 13:09:02 kardel Exp
   *  
!  * parse.c,v 3.23 1994/03/25 13:09:02 kardel Exp
   *
   * Parser module for reference clock
   *
--- 1,8 ----
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS))
  /*
!  * /src/NTP/REPOSITORY/v3/parse/parse.c,v 3.25 1994/05/12 12:49:12 kardel Exp
   *  
!  * parse.c,v 3.25 1994/05/12 12:49:12 kardel Exp
   *
   * Parser module for reference clock
   *
***************
*** 476,482 ****

  #ifdef DEBUG
    if ((updated & CVT_MASK) != CVT_NONE)
!     parseprintf(DD_PARSE, ("parse_ioread: time sample accumulated (status=0x%x)\n", updated));
  #endif

    parseio->parse_dtime.parse_status = updated;
--- 476,484 ----

  #ifdef DEBUG
    if ((updated & CVT_MASK) != CVT_NONE)
!     {
!       parseprintf(DD_PARSE, ("parse_ioread: time sample accumulated (status=0x%x)\n", updated));
!     }
  #endif

    parseio->parse_dtime.parse_status = updated;
***************
*** 823,829 ****
      }

    parseprintf(DD_PARSE,("parse: updatetimeinfo: T=%x+%d usec, useccoff=%d, usecerror=%d, usecdisp=%d\n",
! 		      t, usec, usecoff, parseio->parse_dtime.parse_usecerror, parseio->parse_dtime.parse_usecdisp));

  #ifdef PARSEKERNEL
--- 825,832 ----
      }

    parseprintf(DD_PARSE,("parse: updatetimeinfo: T=%x+%d usec, useccoff=%d, usecerror=%d, usecdisp=%d\n",
! 			(int)t, (int)usec, (int)usecoff, (int)parseio->parse_dtime.parse_usecerror,
! 			(int)parseio->parse_dtime.parse_usecdisp));

  #ifdef PARSEKERNEL
***************
*** 1161,1167 ****
  /*
   * History:
   *
!  * parse.c,v
   * Revision 3.23  1994/03/25  13:09:02  kardel
   * considering FIXEDONLY entries only in FIXEDONLY mode
   *
--- 1164,1176 ----
  /*
   * History:
   *
!  * parse.c,v
!  * Revision 3.25  1994/05/12  12:49:12  kardel
!  * printf fmt/arg cleanup
!  *
!  * Revision 3.24  1994/03/27  15:01:36  kardel
!  * reorder include file to cope with PTX
!  *
   * Revision 3.23  1994/03/25  13:09:02  kardel
   * considering FIXEDONLY entries only in FIXEDONLY mode
   *
diff -c parse/util/dcfd.c:1.1.1.5 parse/util/dcfd.c:3.18
*** parse/util/dcfd.c:1.1.1.5	Fri May 13 00:59:57 1994
--- parse/util/dcfd.c	Fri May 13 00:59:57 1994
***************
*** 1,7 ****
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/dcfd.c,v 3.15 1994/01/25 19:05:42 kardel Exp
   *  
!  * dcfd.c,v 3.15 1994/01/25 19:05:42 kardel Exp
   *
   * DCF77 100/200ms pulse synchronisation daemon program (via 50Baud serial line)
   *
--- 1,7 ----
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/dcfd.c,v 3.18 1994/05/12 12:49:23 kardel Exp
   *  
!  * dcfd.c,v 3.18 1994/05/12 12:49:23 kardel Exp
   *
   * DCF77 100/200ms pulse synchronisation daemon program (via 50Baud serial line)
   *
***************
*** 703,708 ****
--- 703,713 ----
     * if everything went well so far return the result of the symbolic
     * conversion routine else just the accumulated errors
     */
+   if (rtc != CVT_NONE) 
+     {
+       PRINTF("%-30s", "*** BAD DATA");
+     }
+ 
    return (rtc == CVT_NONE) ? convert_rawdcf(buffer, size, clock) : rtc;
  }

***************
*** 864,872 ****
    static char buf[20];

    if (val->tv_sec == 0)
!     sprintf(buf, "%c0.%06d", (val->tv_usec < 0) ? '-' : '+', abs(val->tv_usec));
    else
!     sprintf(buf, "%d.%06d", val->tv_sec, abs(val->tv_usec));
    return buf;
  }

--- 869,877 ----
    static char buf[20];

    if (val->tv_sec == 0)
!     sprintf(buf, "%c0.%06ld", (val->tv_usec < 0) ? '-' : '+', (long int)abs(val->tv_usec));
    else
!     sprintf(buf, "%ld.%06ld", (long int)val->tv_sec, (long int)abs(val->tv_usec));
    return buf;
  }

***************
*** 912,918 ****
    time_offset.tv_sec  = offset / 1000000;
    time_offset.tv_usec = offset % 1000000;

!   LPRINTF("adj_time: %d us ", offset);
    if (adjtime(&time_offset, 0L) == -1)
      perror("adjtime()");
  }
--- 917,923 ----
    time_offset.tv_sec  = offset / 1000000;
    time_offset.tv_usec = offset % 1000000;

!   LPRINTF("adj_time: %ld us ", (long int)offset);
    if (adjtime(&time_offset, 0L) == -1)
      perror("adjtime()");
  }
***************
*** 937,943 ****
        drift_comp = idrift << USECSCALE;
        fdrift     = (fdrift << USECSCALE) / 1000;
        drift_comp += fdrift & (1<<USECSCALE);
!       LPRINTF("read_drift: drift_comp %d ", drift_comp);
      }
  }

--- 942,948 ----
        drift_comp = idrift << USECSCALE;
        fdrift     = (fdrift << USECSCALE) / 1000;
        drift_comp += fdrift & (1<<USECSCALE);
!       LPRINTF("read_drift: drift_comp %ld ", (long int)drift_comp);
      }
  }

***************
*** 957,967 ****
        int idrift = R_SHIFT(drift_comp, USECSCALE);
        int fdrift = drift_comp & ((1<<USECSCALE)-1);

!       LPRINTF("update_drift: drift_comp %d ", drift_comp);
        fdrift = (fdrift * 1000) / (1<<USECSCALE);
!       fprintf(df, "%4d.%03d %c%d.%06d %.24s\n", idrift, fdrift,
! 	      (offset < 0) ? '-' : '+', abs(offset) / 1000000, abs(offset) % 1000000,
! 	      asctime(localtime(&reftime)));
        fclose(df);
        LPRINTF("update_drift: %d.%03d ppm ", idrift, fdrift);
      }
--- 962,972 ----
        int idrift = R_SHIFT(drift_comp, USECSCALE);
        int fdrift = drift_comp & ((1<<USECSCALE)-1);

!       LPRINTF("update_drift: drift_comp %ld ", (long int)drift_comp);
        fdrift = (fdrift * 1000) / (1<<USECSCALE);
!       fprintf(df, "%4d.%03d %c%ld.%06ld %.24s\n", idrift, fdrift,
! 	      (offset < 0) ? '-' : '+', (long int)(abs(offset) / 1000000),
! 	      (long int)(abs(offset) % 1000000), asctime(localtime(&reftime)));
        fclose(df);
        LPRINTF("update_drift: %d.%03d ppm ", idrift, fdrift);
      }
***************
*** 1023,1030 ****
        drift_comp = -MAX_DRIFT;

    update_drift(drift_file, usecoffset, reftime);
!   LPRINTF("clock_adjust: %s, clock_adjust %d, drift_comp %d(%d) ",
! 		  pr_timeval(offset), R_SHIFT(clock_adjust, USECSCALE) , R_SHIFT(drift_comp, USECSCALE), drift_comp);
  }

  /*-----------------------------------------------------------------------
--- 1028,1036 ----
        drift_comp = -MAX_DRIFT;

    update_drift(drift_file, usecoffset, reftime);
!   LPRINTF("clock_adjust: %s, clock_adjust %ld, drift_comp %ld(%ld) ",
! 	  pr_timeval(offset),(long int) R_SHIFT(clock_adjust, USECSCALE),
! 	  (long int)R_SHIFT(drift_comp, USECSCALE), (long int)drift_comp);
  }

  /*-----------------------------------------------------------------------
***************
*** 1303,1310 ****

        memset(term.c_cc, 0, sizeof(term.c_cc));
        term.c_cc[VMIN] = 1;
!       term.c_cflag = B50|CS8|CREAD|CLOCAL;
!       term.c_iflag = 0;
        term.c_oflag = 0;
        term.c_lflag = 0;

--- 1309,1316 ----

        memset(term.c_cc, 0, sizeof(term.c_cc));
        term.c_cc[VMIN] = 1;
!       term.c_cflag = B50|CS8|CREAD|CLOCAL|PARENB;
!       term.c_iflag = IGNPAR;
        term.c_oflag = 0;
        term.c_lflag = 0;

***************
*** 1369,1375 ****
        (void) alarm(1<<ADJINTERVAL);
  #endif

!       PRINTF("  DCF77 monitor - Copyright 1993, Frank Kardel\n\n");

        pbuf[60] = '\0';
        for ( i = 0; i < 60; i++)
--- 1375,1381 ----
        (void) alarm(1<<ADJINTERVAL);
  #endif

!       PRINTF("  DCF77 monitor - Copyright 1993,1994, Frank Kardel\n\n");

        pbuf[60] = '\0';
        for ( i = 0; i < 60; i++)
***************
*** 1423,1428 ****
--- 1429,1440 ----
  			}
  		      errs++;
  		    }
+ 		  else
+ 		    if (trace)
+ 		      {
+ 			PRINTF("\r  %.*s ", 59 - offset, &buf[offset]);
+ 		      }
+ 

  		  buf[0] = c;

***************
*** 1491,1501 ****

  	      if (rtc == CVT_OK)
  		{
- 		  if (trace && (i == 0))
- 		    {
- 		      PRINTF("\r  %.*s ", 59 - offset, &buf[offset]);
- 		    }
- 
  		  if (i == 0)
  		    {
  		      /*
--- 1503,1508 ----
diff -c parse/util/testdcf.c:1.1.1.7 parse/util/testdcf.c:3.13
*** parse/util/testdcf.c:1.1.1.7	Fri May 13 00:59:59 1994
--- parse/util/testdcf.c	Fri May 13 00:59:59 1994
***************
*** 1,7 ****
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/testdcf.c,v 3.11 1994/02/02 17:45:55 kardel Exp
   *  
!  * testdcf.c,v 3.11 1994/02/02 17:45:55 kardel Exp
   *
   * simple DCF77 100/200ms pulse test program (via 50Baud serial line)
   *
--- 1,7 ----
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/testdcf.c,v 3.13 1994/05/12 12:49:31 kardel Exp
   *  
!  * testdcf.c,v 3.13 1994/05/12 12:49:31 kardel Exp
   *
   * simple DCF77 100/200ms pulse test program (via 50Baud serial line)
   *
***************
*** 354,361 ****

  	  memset(term.c_cc, 0, sizeof(term.c_cc));
  	  term.c_cc[VMIN] = 1;
! 	  term.c_cflag = B50|CS8|CREAD|CLOCAL;
! 	  term.c_iflag = 0;
  	  term.c_oflag = 0;
  	  term.c_lflag = 0;

--- 354,361 ----

  	  memset(term.c_cc, 0, sizeof(term.c_cc));
  	  term.c_cc[VMIN] = 1;
! 	  term.c_cflag = B50|CS8|CREAD|CLOCAL|PARENB;
! 	  term.c_iflag = IGNPAR;
  	  term.c_oflag = 0;
  	  term.c_lflag = 0;

***************
*** 411,418 ****
  		}

  	      if (t.tv_sec > 1 ||
! 		  t.tv_sec == 1 &&
! 		  t.tv_usec > 500000)
  		{
  	          printf("%c %.*s ", pat[i % (sizeof(pat)-1)], 59 - offset, &buf[offset]);

--- 411,418 ----
  		}

  	      if (t.tv_sec > 1 ||
! 		  (t.tv_sec == 1 &&
! 		   t.tv_usec > 500000))
  		{
  	          printf("%c %.*s ", pat[i % (sizeof(pat)-1)], 59 - offset, &buf[offset]);

***************
*** 453,460 ****
  		{
  		  printf("%s, %2d:%02d:%02d, %d.%02d.%02d, <%s%s%s%s>",
  			wday[clock.wday],
! 			clock.hour, clock.minute, i, clock.day, clock.month,
! 			clock.year,
  			(clock.flags & DCFB_ALTERNATE) ? "R" : "_",
  			(clock.flags & DCFB_ANNOUNCE) ? "A" : "_",
  			(clock.flags & DCFB_DST) ? "D" : "_",
--- 453,460 ----
  		{
  		  printf("%s, %2d:%02d:%02d, %d.%02d.%02d, <%s%s%s%s>",
  			wday[clock.wday],
! 			(int)clock.hour, (int)clock.minute, (int)i, (int)clock.day, (int)clock.month,
! 			(int)clock.year,
  			(clock.flags & DCFB_ALTERNATE) ? "R" : "_",
  			(clock.flags & DCFB_ANNOUNCE) ? "A" : "_",
  			(clock.flags & DCFB_DST) ? "D" : "_",
diff -c refclocks/rconfig:1.1.1.4 refclocks/rconfig:1.11
*** refclocks/rconfig:1.1.1.4	Fri May 13 01:01:21 1994
--- refclocks/rconfig	Fri May 13 01:01:23 1994
***************
*** 23,32 ****
--- 23,37 ----
  else
    config="`egrep '^[ 	]*CLOCKDEFS[ 	]*=' Config.local | sed 's/\([^#]*\)#.*$/\1/g; s/[ 	]*CLOCKDEFS[ 	]*=//g; s/-D//g; s/[ 	][ 	]*/ /g; s/^ *//g; s/ *$//g;'`"
    DEFS="`egrep '^[ 	]*DEFS[ 	]*=' Config | sed 's/\([^#]*\)#.*$/\1/g; s/[ 	]*DEFS[ 	]*=//g; s/-D//g; s/[ 	][ 	]*/ /g; s/^ *//g; s/ *$//g;'`"
+   DEFSLOCAL="`egrep '^[ 	]*DEFS_LOCAL[ 	]*=' Config.local | sed 's/\([^#]*\)#.*$/\1/g; s/[ 	]*DEFS_LOCAL[ 	]*=//g; s/-D//g; s/[ 	][ 	]*/ /g; s/^ *//g; s/ *$//g;'`"
    if [ ! "$REFCONF" ]; then
      echo
      echo "Current configuration"
      echo
+     if check "$DEFSLOCAL" '$0 ~ /MCAST/'; then
+       echo "==> MULTICAST SUPPORT (if available)"
+       echo
+     fi
      for i in $rcfg
      do
        sh $i check "$config" "" "" "$DEFS" "$REFCONF"
***************
*** 78,83 ****
--- 83,94 ----
  	PPS="-DPPS $PPS"
        fi
      fi
+     if (check "$REFCONF" '$0 ~ /MCAST/' ||
+ 	( [ ! "$REFCONF" ] && query "Do you want allow for multicast support (if available) ?" y)); then
+ 	MCAST="-DMCAST"
+       else
+ 	MCAST=""
+     fi
      for i in $rcfg
      do
        sh $i config "$RCONFIG" "$PPSFEATURES" "$PPSOK" "$DEFS" "$REFCONF"
***************
*** 98,104 ****
        fi
      fi
      if sed -e 's/^[ 	]*CLOCKDEFS[ 	]*=.*$/CLOCKDEFS='"$CLOCKDEFS"'/;' \
!         -e 's/^[ 	]*DEFS_LOCAL[ 	]*=.*$/DEFS_LOCAL= $(DEFS_OPT) '"$PPS"'/;' \
  	Config.local > Config.local.new; then
        mv Config.local Config.local.old &&
          mv Config.local.new Config.local &&
--- 109,115 ----
        fi
      fi
      if sed -e 's/^[ 	]*CLOCKDEFS[ 	]*=.*$/CLOCKDEFS='"$CLOCKDEFS"'/;' \
!         -e 's/^[ 	]*DEFS_LOCAL[ 	]*=.*$/DEFS_LOCAL= $(DEFS_OPT) '"$PPS $MCAST"'/;' \
  	Config.local > Config.local.new; then
        mv Config.local Config.local.old &&
          mv Config.local.new Config.local &&
***************
*** 106,112 ****
        echo
        echo "New configuration defines:"
        echo "	CLOCKDEFS=$CLOCKDEFS"
!       echo "	DEFS_LOCAL="'$(DEFS_OPT)'" $PPS"
        echo
        echo "Configuration updated"
      else
--- 117,123 ----
        echo
        echo "New configuration defines:"
        echo "	CLOCKDEFS=$CLOCKDEFS"
!       echo "	DEFS_LOCAL="'$(DEFS_OPT)'" $PPS $MCAST"
        echo
        echo "Configuration updated"
      else
diff -c util/tickadj.c:1.1.1.19 util/tickadj.c:3.20
*** util/tickadj.c:1.1.1.19	Fri May 13 01:02:30 1994
--- util/tickadj.c	Fri May 13 01:02:31 1994
***************
*** 556,563 ****
  		exit(1);
  	}
  	if (i != sizeof(int)) {
! 		(void) fprintf(stderr, "%s: read expected %d, got %d\n",
! 		    progname, sizeof(int), i);
  		exit(1);
  	}
  }
--- 556,563 ----
  		exit(1);
  	}
  	if (i != sizeof(int)) {
! 		(void) fprintf(stderr, "%s: read expected %ld, got %d\n",
! 		    progname, (unsigned long)sizeof(int), i);
  		exit(1);
  	}
  }
diff -c xntpd/ntp_config.c:1.1.1.23 xntpd/ntp_config.c:3.28
*** xntpd/ntp_config.c:1.1.1.23	Fri May 13 01:02:51 1994
--- xntpd/ntp_config.c	Fri May 13 01:02:52 1994
***************
*** 1452,1458 ****

  #ifdef DEBUG
  					if (debug)
! 						sprintf(bp, "client_limit=%d", i);
  #endif
  					set_sys_var(bp, strlen(bp)+1, RO);
  					client_limit = i;
--- 1452,1458 ----

  #ifdef DEBUG
  					if (debug)
! 						sprintf(bp, "client_limit=%lu", (unsigned long)i);
  #endif
  					set_sys_var(bp, strlen(bp)+1, RO);
  					client_limit = i;
***************
*** 1473,1479 ****
  					extern U_LONG client_limit_period;
  					char bp[80];

! 					sprintf(bp, "client_limit_period=%d", i);
  					set_sys_var(bp, strlen(bp)+1, RO);
  					client_limit_period = i;
  				}
--- 1473,1479 ----
  					extern U_LONG client_limit_period;
  					char bp[80];

! 					sprintf(bp, "client_limit_period=%lu", (unsigned long)i);
  					set_sys_var(bp, strlen(bp)+1, RO);
  					client_limit_period = i;
  				}
***************
*** 1683,1690 ****
  		netnum += temp;
  #ifdef DEBUG
  	if (debug > 3)
! 		printf("getnetnum %s step %d buf %s temp %d netnum %d\n",
! 		    num, i, buf, temp, netnum);
  #endif
  	}

--- 1683,1690 ----
  		netnum += temp;
  #ifdef DEBUG
  	if (debug > 3)
! 		printf("getnetnum %s step %d buf %s temp %d netnum %lu\n",
! 		    num, i, buf, temp, (unsigned long)netnum);
  #endif
  	}

***************
*** 1711,1718 ****
  	addr->sin_addr.s_addr = htonl(netnum);
  #ifdef DEBUG
  	if (debug > 1)
! 		printf("getnetnum given %s, got %s (%x)\n",
! 		    num, ntoa(addr), netnum);
  #endif
  	return 1;
  }
--- 1711,1718 ----
  	addr->sin_addr.s_addr = htonl(netnum);
  #ifdef DEBUG
  	if (debug > 1)
! 		printf("getnetnum given %s, got %s (%lx)\n",
! 		    num, ntoa(addr), (unsigned long)netnum);
  #endif
  	return 1;
  }
diff -c xntpd/ntp_control.c:1.1.1.21 xntpd/ntp_control.c:3.31
*** xntpd/ntp_control.c:1.1.1.21	Fri May 13 01:02:53 1994
--- xntpd/ntp_control.c	Fri May 13 01:02:54 1994
***************
*** 606,613 ****
  #ifdef DEBUG
  		if (debug >= 3)
  			printf(
!       "recv_len %d, properlen %d, wants auth with keyid %d, MAC length=%d\n",
! 			    rbufp->recv_length, properlen, res_keyid, maclen);
  #endif
  		if (!authhavekey(res_keyid)) {
  #ifdef DEBUG
--- 606,613 ----
  #ifdef DEBUG
  		if (debug >= 3)
  			printf(
!       "recv_len %d, properlen %d, wants auth with keyid %ld, MAC length=%d\n",
! 			    rbufp->recv_length, properlen, (long int)res_keyid, maclen);
  #endif
  		if (!authhavekey(res_keyid)) {
  #ifdef DEBUG
***************
*** 728,742 ****
  	register u_char clock;

  	clock = CTL_SST_TS_UNSPEC;
! 	if (sys_peer != 0)
! 		if (sys_peer->sstclktype != CTL_SST_TS_UNSPEC)
  			clock = sys_peer->sstclktype;
! 		else {
  			if (sys_peer->refclktype < sizeof(clocktypes))
  				clock = clocktypes[sys_peer->refclktype];
  			if (pps_control)
  				clock |= CTL_SST_TS_PPS;
  		}
  	return (u_short)CTL_SYS_STATUS(sys_leap, clock, 
  	    ctl_sys_num_events, ctl_sys_last_event);
  }
--- 728,745 ----
  	register u_char clock;

  	clock = CTL_SST_TS_UNSPEC;
! 	if (sys_peer != 0) {
! 		if (sys_peer->sstclktype != CTL_SST_TS_UNSPEC) {
  			clock = sys_peer->sstclktype;
! 			if (pps_control)
! 				clock |= CTL_SST_TS_PPS;
! 		} else {
  			if (sys_peer->refclktype < sizeof(clocktypes))
  				clock = clocktypes[sys_peer->refclktype];
  			if (pps_control)
  				clock |= CTL_SST_TS_PPS;
  		}
+ 	}
  	return (u_short)CTL_SYS_STATUS(sys_leap, clock, 
  	    ctl_sys_num_events, ctl_sys_last_event);
  }
***************
*** 1029,1035 ****
  		*cp++ = *cq++;

  	*cp++ = '=';
! 	(void) sprintf(cp, "%u", uval);
  	while (*cp != '\0')
  		cp++;
  	
--- 1032,1038 ----
  		*cp++ = *cq++;

  	*cp++ = '=';
! 	(void) sprintf(cp, "%lu", (unsigned long)uval);
  	while (*cp != '\0')
  		cp++;
  	
***************
*** 1079,1085 ****
  		*cp++ = *cq++;

  	*cp++ = '=';
! 	(void) sprintf(cp, "%d", ival);
  	while (*cp != '\0')
  		cp++;
  	
--- 1082,1088 ----
  		*cp++ = *cq++;

  	*cp++ = '=';
! 	(void) sprintf(cp, "%ld", (long int)ival);
  	while (*cp != '\0')
  		cp++;
  	
diff -c xntpd/ntp_filegen.c:1.1.1.6 xntpd/ntp_filegen.c:3.13
*** xntpd/ntp_filegen.c:1.1.1.6	Fri May 13 01:02:55 1994
--- xntpd/ntp_filegen.c	Fri May 13 01:02:56 1994
***************
*** 100,106 ****

  	case FILEGEN_PID:
  		filename = emalloc(len + 1 + 1 + 10);
! 		sprintf(filename,"%s%c#%d", basename, SUFFIX_SEP, newid);
  		break;

  	case FILEGEN_DAY:
--- 100,106 ----

  	case FILEGEN_PID:
  		filename = emalloc(len + 1 + 1 + 10);
! 		sprintf(filename,"%s%c#%ld", basename, SUFFIX_SEP, (long int)newid);
  		break;

  	case FILEGEN_DAY:
***************
*** 142,148 ****

  	case FILEGEN_AGE:
  		filename = emalloc(len + 1 + 2 + 10);
! 		sprintf(filename, "%s%ca%08d", basename, SUFFIX_SEP, newid);
  		break;
  	}

--- 142,148 ----

  	case FILEGEN_AGE:
  		filename = emalloc(len + 1 + 2 + 10);
! 		sprintf(filename, "%s%ca%08ld", basename, SUFFIX_SEP, (long int)newid);
  		break;
  	}

diff -c xntpd/ntp_io.c:1.1.1.24 xntpd/ntp_io.c:3.30
*** xntpd/ntp_io.c:1.1.1.24	Fri May 13 01:02:58 1994
--- xntpd/ntp_io.c	Fri May 13 01:02:58 1994
***************
*** 18,23 ****
--- 18,27 ----
  #include "ntp_if.h"
  #include "ntp_stdlib.h"

+ #if defined(MCAST) && !defined(IP_ADD_MEMBERSHIP)
+ #undef MCAST
+ #endif
+ 
  #if defined(BSD)&&!defined(sun)&&!defined(SYS_SINIXM)
  #if BSD >= 199006
  #define HAVE_VARIABLE_IFR_LENGTH
***************
*** 587,597 ****
  	if (bind(fd, (struct sockaddr *)addr, sizeof(*addr)) < 0) {
  		char buff[160];
  		sprintf(buff,
! 		    "bind() fd %d, family %d, port %d, addr %08x, bcast=%d fails: %%m", 
  			fd,
  			addr->sin_family,
  			addr->sin_port,
! 			addr->sin_addr.s_addr,
  			bcast);
  		syslog(LOG_ERR, buff);
  		exit(1);
--- 591,601 ----
  	if (bind(fd, (struct sockaddr *)addr, sizeof(*addr)) < 0) {
  		char buff[160];
  		sprintf(buff,
! 		    "bind() fd %d, family %d, port %d, addr %08lx, bcast=%d fails: %%m", 
  			fd,
  			addr->sin_family,
  			addr->sin_port,
! 			(unsigned long)addr->sin_addr.s_addr,
  			bcast);
  		syslog(LOG_ERR, buff);
  		exit(1);
***************
*** 730,737 ****

  #ifdef DEBUG
  	if (debug > 4)
! 		printf("getrecvbufs: %d handler interrupts, %d frames\n",
! 		    handler_calls, handler_pkts);
  #endif

  	if (full_recvbufs == 0) {
--- 734,741 ----

  #ifdef DEBUG
  	if (debug > 4)
! 		printf("getrecvbufs: %ld handler interrupts, %ld frames\n",
! 		    (long int)handler_calls, (long int)handler_pkts);
  #endif

  	if (full_recvbufs == 0) {
***************
*** 747,753 ****
  	 */
  #ifdef DEBUG
  	if (debug > 4)
! 		printf("getrecvbufs returning %d buffers\n", full_recvbufs);
  #endif
  	rb = beginlist;
  	fulllist = 0;
--- 751,757 ----
  	 */
  #ifdef DEBUG
  	if (debug > 4)
! 		printf("getrecvbufs returning %ld buffers\n", (long int)full_recvbufs);
  #endif
  	rb = beginlist;
  	fulllist = 0;
diff -c xntpd/ntp_loopfilter.c:1.1.1.38 xntpd/ntp_loopfilter.c:3.46
*** xntpd/ntp_loopfilter.c:1.1.1.38	Fri May 13 01:03:04 1994
--- xntpd/ntp_loopfilter.c	Fri May 13 01:03:04 1994
***************
*** 514,519 ****
--- 514,521 ----
  		sys_rootdispersion = tmp + pps_dispersion;
  		if (!(peer->flags & FLAG_REFCLOCK))
  			sys_refid = PPSREFID;
+ 		else
+ 			sys_refid = peer->refid;
  	}
  	offset = last_offset.l_f;
  	
***************
*** 575,581 ****
  			record_peer_stats(&loopback_interface->sin,
  			    ctlsysstatus(), &pps_offset, 0, pps_dispersion);
  		} else
! 			pps_time = 0;
  #endif /* KERNEL_PLL */
  	} else {
  		if (offset < 0) {
--- 577,584 ----
  			record_peer_stats(&loopback_interface->sin,
  			    ctlsysstatus(), &pps_offset, 0, pps_dispersion);
  		} else
! 			if (pps_time && current_time - pps_time > PPS_MAXAGE)
! 				pps_time = 0;
  #endif /* KERNEL_PLL */
  	} else {
  		if (offset < 0) {
diff -c xntpd/ntp_peer.c:1.1.1.13 xntpd/ntp_peer.c:3.11
*** xntpd/ntp_peer.c:1.1.1.13	Fri May 13 01:03:10 1994
--- xntpd/ntp_peer.c	Fri May 13 01:03:11 1994
***************
*** 364,372 ****

  #ifdef DEBUG
  	if (debug)
! 		printf("peer_config: addr %s mode %d version %d minpoll %d maxpoll %d flags %d ttl %d key %u\n",
  		    ntoa(srcadr), hmode, version, minpoll, maxpoll, flags,
! 		    ttl, key);
  #endif
  	/*
  	 * See if we have this guy in the tables already.  If
--- 364,372 ----

  #ifdef DEBUG
  	if (debug)
! 		printf("peer_config: addr %s mode %d version %d minpoll %d maxpoll %d flags %d ttl %d key %lu\n",
  		    ntoa(srcadr), hmode, version, minpoll, maxpoll, flags,
! 		    ttl, (unsigned long)key);
  #endif
  	/*
  	 * See if we have this guy in the tables already.  If
diff -c xntpd/ntp_proto.c:1.1.1.24 xntpd/ntp_proto.c:3.26
*** xntpd/ntp_proto.c:1.1.1.24	Fri May 13 01:03:13 1994
--- xntpd/ntp_proto.c	Fri May 13 01:03:13 1994
***************
*** 418,425 ****
  		hiskeyid = ntohl(pkt->keyid);
  #ifdef	DEBUG
  		if (debug > 3)
! 		    printf("receive: pkt is %d octets, mac %d octets long, keyid %d\n",
! 			   rbufp->recv_length, has_mac, hiskeyid);
  #endif
  	} else if (rbufp->recv_length == LEN_PKT_NOMAC) {
  		hiskeyid = 0;
--- 418,425 ----
  		hiskeyid = ntohl(pkt->keyid);
  #ifdef	DEBUG
  		if (debug > 3)
! 		    printf("receive: pkt is %d octets, mac %ld octets long, keyid %ld\n",
! 			   rbufp->recv_length, (long int)has_mac, (long int)hiskeyid);
  #endif
  	} else if (rbufp->recv_length == LEN_PKT_NOMAC) {
  		hiskeyid = 0;
***************
*** 427,434 ****
  	} else {
  #ifdef DEBUG
  		if (debug > 2)
! 			printf("receive: bad length %d (not > %d or == %d)\n",
! 			       rbufp->recv_length, LEN_PKT_MAC, LEN_PKT_NOMAC);
  #endif
  		sys_badlength++;
  		return;
--- 427,434 ----
  	} else {
  #ifdef DEBUG
  		if (debug > 2)
! 			printf("receive: bad length %d (not > %ld or == %ld)\n",
! 			       rbufp->recv_length, (long int)LEN_PKT_MAC, (long int)LEN_PKT_NOMAC);
  #endif
  		sys_badlength++;
  		return;
diff -c xntpd/ntp_request.c:1.1.1.18 xntpd/ntp_request.c:3.19
*** xntpd/ntp_request.c:1.1.1.18	Fri May 13 01:03:14 1994
--- xntpd/ntp_request.c	Fri May 13 01:03:15 1994
***************
*** 507,515 ****
  #ifdef DEBUG
  			if (debug > 4)
  				printf(
! 			"failed auth %d info_auth_keyid %u pkt keyid %u\n",
  				    INFO_IS_AUTH(inpkt->auth_seq),
! 				    info_auth_keyid, ntohl(inpkt->keyid));
  #endif
  			req_ack(srcadr, inter, inpkt, INFO_ERR_AUTH);
  			return;
--- 507,515 ----
  #ifdef DEBUG
  			if (debug > 4)
  				printf(
! 			"failed auth %d info_auth_keyid %lu pkt keyid %lu\n",
  				    INFO_IS_AUTH(inpkt->auth_seq),
! 				    (unsigned long)info_auth_keyid, (unsigned long)ntohl(inpkt->keyid));
  #endif
  			req_ack(srcadr, inter, inpkt, INFO_ERR_AUTH);
  			return;
***************
*** 518,524 ****
  #ifdef DEBUG
  			if (debug > 4)
  			    printf("failed pkt length pkt %d req %d too long\n",
! 				    rbufp->recv_length, REQ_LEN_MAC);
  #endif
  			req_ack(srcadr, inter, inpkt, INFO_ERR_FMT);
  			return;
--- 518,524 ----
  #ifdef DEBUG
  			if (debug > 4)
  			    printf("failed pkt length pkt %d req %d too long\n",
! 				    rbufp->recv_length, (int)REQ_LEN_MAC);
  #endif
  			req_ack(srcadr, inter, inpkt, INFO_ERR_FMT);
  			return;
diff -c xntpd/ntp_restrict.c:1.1.1.12 xntpd/ntp_restrict.c:3.12
*** xntpd/ntp_restrict.c:1.1.1.12	Fri May 13 01:03:15 1994
--- xntpd/ntp_restrict.c	Fri May 13 01:03:16 1994
***************
*** 137,145 ****
  	client_limit_period = 3600;
  	res_limited_refcnt = 0;

! 	sprintf(bp, "client_limit=%d", client_limit);
  	set_sys_var(bp, strlen(bp)+1, RO);
! 	sprintf(bp, "client_limit_period=%d", client_limit_period);
  	set_sys_var(bp, strlen(bp)+1, RO);
  }

--- 137,145 ----
  	client_limit_period = 3600;
  	res_limited_refcnt = 0;

! 	sprintf(bp, "client_limit=%ld", (long int)client_limit);
  	set_sys_var(bp, strlen(bp)+1, RO);
! 	sprintf(bp, "client_limit_period=%ld", (long int)client_limit_period);
  	set_sys_var(bp, strlen(bp)+1, RO);
  }

***************
*** 210,218 ****

  #ifdef DEBUG
  		if (debug > 2)
! 			printf("limited clients check: %d clients, period %d seconds, net is 0x%X\n",
! 			       client_limit, client_limit_period,
! 			       netof(hostaddr));
  #endif /*DEBUG*/
  		if (mon_enabled == MON_OFF) {
  #ifdef DEBUG
--- 210,218 ----

  #ifdef DEBUG
  		if (debug > 2)
! 			printf("limited clients check: %ld clients, period %ld seconds, net is 0x%lX\n",
! 			       (long int)client_limit, (long int)client_limit_period,
! 			       (unsigned long)netof(hostaddr));
  #endif /*DEBUG*/
  		if (mon_enabled == MON_OFF) {
  #ifdef DEBUG
***************
*** 238,246 ****
  			    > client_limit_period) {
  #ifdef DEBUG
  				if (debug > 5)
! 					printf("checking: %s: ignore: too old: %d\n",
  					       numtoa(md->rmtadr),
! 					       current_time - md->lasttime);
  #endif
  				continue;
  			}
--- 238,246 ----
  			    > client_limit_period) {
  #ifdef DEBUG
  				if (debug > 5)
! 					printf("checking: %s: ignore: too old: %ld\n",
  					       numtoa(md->rmtadr),
! 					       (long int)(current_time - md->lasttime));
  #endif
  				continue;
  			}
***************
*** 259,267 ****
  			    netof(hostaddr)) {
  #ifdef DEBUG
  				if (debug > 5)
! 					printf("checking: %s: different net 0x%X\n",
  					       numtoa(md->rmtadr),
! 					       netof(md->rmtadr));
  #endif
  				continue;
  			}
--- 259,267 ----
  			    netof(hostaddr)) {
  #ifdef DEBUG
  				if (debug > 5)
! 					printf("checking: %s: different net 0x%lX\n",
  					       numtoa(md->rmtadr),
! 					       (unsigned long)netof(md->rmtadr));
  #endif
  				continue;
  			}
***************
*** 286,293 ****
  		}
  #ifdef DEBUG
  		if (debug > 4)
! 			printf("this one is rank %d in list, limit is %d: %s\n",
! 			       lcnt, client_limit,
  			       (lcnt <= client_limit) ? "ALLOW" : "REJECT");
  #endif
  		if (lcnt <= client_limit) {
--- 286,293 ----
  		}
  #ifdef DEBUG
  		if (debug > 4)
! 			printf("this one is rank %d in list, limit is %ld: %s\n",
! 			       lcnt, (long int)client_limit,
  			       (lcnt <= client_limit) ? "ALLOW" : "REJECT");
  #endif
  		if (lcnt <= client_limit) {
diff -c xntpd/ntp_unixclock.c:1.1.1.29 xntpd/ntp_unixclock.c:3.31
*** xntpd/ntp_unixclock.c:1.1.1.29	Fri May 13 01:03:19 1994
--- xntpd/ntp_unixclock.c	Fri May 13 01:03:19 1994
***************
*** 107,113 ****
  	clock_parms(&tickadj, &tick);
  #ifdef	DEBUG
  	if (debug)
! 		printf("kernel vars: tickadj = %d, tick = %d\n", tickadj, tick);
  #endif

  	/*
--- 107,113 ----
  	clock_parms(&tickadj, &tick);
  #ifdef	DEBUG
  	if (debug)
! 		printf("kernel vars: tickadj = %ld, tick = %ld\n", (long int)tickadj, (long int)tick);
  #endif

  	/*
***************
*** 162,169 ****
  #ifdef DEBUG
  	if (debug)
  		printf(
! 	"adj_precision = %d, tvu_maxslew = %d, tsf_maxslew = 0.%08x\n",
! 		    adj_precision, tvu_maxslew, tsf_maxslew);
  #endif

  	/*
--- 162,170 ----
  #ifdef DEBUG
  	if (debug)
  		printf(
! 	"adj_precision = %ld, tvu_maxslew = %ld, tsf_maxslew = 0.%08lx\n",
! 		       (long int)adj_precision, (long int)tvu_maxslew,
! 		       (unsigned long)tsf_maxslew);
  #endif

  	/*
diff -c xntpd/refclock_gpstm.c:1.1.1.3 xntpd/refclock_gpstm.c:1.2
*** xntpd/refclock_gpstm.c:1.1.1.3	Fri May 13 01:03:25 1994
--- xntpd/refclock_gpstm.c	Fri May 13 01:03:26 1994
***************
*** 92,98 ****
   */
  enum gpstm_event {e_Init, e_F18, e_F50, e_F51, e_TS};
  static enum {Base, Start, F18, F50, F51, F08} State[MAXUNITS];
- static time_t Last[MAXUNITS];
  static void gpstm_doevent P((int, enum gpstm_event));
  static void gpstm_initstate P((int));

--- 92,97 ----
***************
*** 777,783 ****
  }

  static void
! gpstm_initstate(unit) {
  	State[unit] = Base;		/* just in case */
  	gpstm_doevent(unit, e_Init);
  }
--- 776,784 ----
  }

  static void
! gpstm_initstate(unit)
!      int unit;
! {
  	State[unit] = Base;		/* just in case */
  	gpstm_doevent(unit, e_Init);
  }
diff -c xntpd/refclock_leitch.c:1.1.1.15 xntpd/refclock_leitch.c:1.7
*** xntpd/refclock_leitch.c:1.1.1.15	Fri May 13 01:03:28 1994
--- xntpd/refclock_leitch.c	Fri May 13 01:03:29 1994
***************
*** 477,483 ****
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%u\n", leitch->reftime1.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime1.l_uf);
  		leitch->codetime1 = rbufp->recv_time;
--- 477,483 ----
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%lu\n", (unsigned long)leitch->reftime1.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime1.l_uf);
  		leitch->codetime1 = rbufp->recv_time;
***************
*** 494,500 ****
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%u\n", leitch->reftime2.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime2.l_uf);
  		leitch->codetime2 = rbufp->recv_time;
--- 494,500 ----
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%lu\n", (unsigned long)leitch->reftime2.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime2.l_uf);
  		leitch->codetime2 = rbufp->recv_time;
***************
*** 511,517 ****
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%u\n", leitch->reftime3.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime3.l_uf);
  		leitch->codetime3 = rbufp->recv_time;
--- 511,517 ----
  		}
  #ifdef DEBUG
  		if (debug)
! 			fprintf(stderr, "%lu\n", (unsigned long)leitch->reftime3.l_ui);
  #endif
  		MSUTOTSF(leitch->fudge1, leitch->reftime3.l_uf);
  		leitch->codetime3 = rbufp->recv_time;
***************
*** 555,564 ****

  #ifdef DEBUG
  	if (debug)
! 	    fprintf(stderr,"%u %u %u %u %d %d\n",
! 		leitch->codetime1.l_ui, leitch->codetime1.l_uf,
! 		leitch->reftime1.l_ui, leitch->reftime1.l_uf,
! 		off.l_ui, off.l_uf);
  #endif
  	tmp_fp = leitch->reftime2;
  	L_SUB(&tmp_fp,&leitch->codetime2);
--- 555,567 ----

  #ifdef DEBUG
  	if (debug)
! 	    fprintf(stderr,"%lu %lu %lu %lu %ld %ld\n",
! 		    (unsigned long)leitch->codetime1.l_ui,
! 		    (unsigned long)leitch->codetime1.l_uf,
! 		    (unsigned long)leitch->reftime1.l_ui,
! 		    (unsigned long)leitch->reftime1.l_uf,
! 		    (long int)off.l_i,
! 		    (long int)off.l_f);
  #endif
  	tmp_fp = leitch->reftime2;
  	L_SUB(&tmp_fp,&leitch->codetime2);
***************
*** 566,575 ****
  		off = tmp_fp;
  #ifdef DEBUG
  	if (debug)
! 		fprintf(stderr,"%u %u %u %u %d %d\n",
! 		leitch->codetime2.l_ui, leitch->codetime2.l_uf,
! 		leitch->reftime2.l_ui, leitch->reftime2.l_uf,
! 		off.l_ui, off.l_uf);
  #endif
  	tmp_fp = leitch->reftime3;
  	L_SUB(&tmp_fp,&leitch->codetime3);
--- 569,581 ----
  		off = tmp_fp;
  #ifdef DEBUG
  	if (debug)
! 		fprintf(stderr,"%lu %lu %lu %lu %ld %ld\n",
! 			(unsigned long)leitch->codetime2.l_ui,
! 			(unsigned long)leitch->codetime2.l_uf,
! 			(unsigned long)leitch->reftime2.l_ui,
! 			(unsigned long)leitch->reftime2.l_uf,
! 			(long int)off.l_i,
! 			(long int)off.l_f);
  #endif
  	tmp_fp = leitch->reftime3;
  	L_SUB(&tmp_fp,&leitch->codetime3);
***************
*** 579,588 ****

  #ifdef DEBUG
  	if (debug)
! 	    fprintf(stderr,"%u %u %u %u %d %d\n",
! 		leitch->codetime3.l_ui, leitch->codetime3.l_uf,
! 		leitch->reftime3.l_ui, leitch->reftime3.l_uf,
! 		off.l_ui, off.l_uf);
  #endif
  	refclock_receive(leitch->peer, &off, 0, dispersion, &codetime,
              &codetime, isinsync);
--- 585,597 ----

  #ifdef DEBUG
  	if (debug)
! 	    fprintf(stderr,"%lu %lu %lu %lu %ld %ld\n",
! 		    (unsigned long)leitch->codetime3.l_ui,
! 		    (unsigned long)leitch->codetime3.l_uf,
! 		    (unsigned long)leitch->reftime3.l_ui,
! 		    (unsigned long)leitch->reftime3.l_uf,
! 		    (long int)off.l_i,
! 		    (long int)off.l_f);
  #endif
  	refclock_receive(leitch->peer, &off, 0, dispersion, &codetime,
              &codetime, isinsync);
diff -c xntpd/refclock_parse.c:1.1.1.14 xntpd/refclock_parse.c:3.58
*** xntpd/refclock_parse.c:1.1.1.14	Fri May 13 01:03:38 1994
--- xntpd/refclock_parse.c	Fri May 13 01:03:39 1994
***************
*** 1,8 ****
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS))
  /*
!  * /src/NTP/REPOSITORY/v3/xntpd/refclock_parse.c,v 3.53 1994/03/25 13:07:39 kardel Exp
   *
!  * refclock_parse.c,v 3.53 1994/03/25 13:07:39 kardel Exp
   *
   * generic reference clock driver for receivers
   *
--- 1,8 ----
  #if defined(REFCLOCK) && (defined(PARSE) || defined(PARSEPPS))
  /*
!  * /src/NTP/REPOSITORY/v3/xntpd/refclock_parse.c,v 3.58 1994/05/12 21:03:39 kardel Exp
   *
!  * refclock_parse.c,v 3.58 1994/05/12 21:03:39 kardel Exp
   *
   * generic reference clock driver for receivers
   *
***************
*** 30,37 ****
   *  PPS		      - supply loopfilter with PPS samples (if configured)
   *  PPSPPS            - notify loopfilter of PPS file descriptor
   *
-  *  FREEBSD_CONRAD    - Make very cheap "Conrad DCF77 RS-232" gadget work
-  *			with FreeBSD.
   * TTY defines:
   *  HAVE_BSD_TTYS     - currently unsupported
   *  HAVE_SYSV_TTYS    - will use termio.h
--- 30,35 ----
***************
*** 84,92 ****
  #include <time.h>

  #include <sys/errno.h>
- #ifdef FREEBSD_CONRAD
- #include <sys/ioctl.h>
- #endif
  extern int errno;

  #if !defined(STREAM) && !defined(HAVE_SYSV_TTYS) && !defined(HAVE_BSD_TTYS) && !defined(HAVE_TERMIOS)
--- 82,87 ----
***************
*** 134,140 ****
  #include "parse.h"

  #if !defined(NO_SCCSID) && !defined(lint) && !defined(__GNUC__)
! static char rcsid[]="refclock_parse.c,v 3.53 1994/03/25 13:07:39 kardel Exp";
  #endif

  /**===========================================================================
--- 129,135 ----
  #include "parse.h"

  #if !defined(NO_SCCSID) && !defined(lint) && !defined(__GNUC__)
! static char rcsid[]="refclock_parse.c,v 3.58 1994/05/12 21:03:39 kardel Exp";
  #endif

  /**===========================================================================
***************
*** 445,457 ****
  #define RAWDCF_ROOTDELAY	0x00000364 /* 13 ms */
  #define RAWDCF_FORMAT		"RAW DCF77 Timecode"
  #define RAWDCF_MAXUNSYNC	(0) /* sorry - its a true receiver - no signal - no time */
! 
! #ifdef FREEBSD_CONRAD
! #define RAWDCF_CFLAG            (CS8|CREAD|CLOCAL)
! #else
! #define RAWDCF_CFLAG            (B50|CS8|CREAD|CLOCAL)
! #endif
! #define RAWDCF_IFLAG		0
  #define RAWDCF_OFLAG		0
  #define RAWDCF_LFLAG		0

--- 440,447 ----
  #define RAWDCF_ROOTDELAY	0x00000364 /* 13 ms */
  #define RAWDCF_FORMAT		"RAW DCF77 Timecode"
  #define RAWDCF_MAXUNSYNC	(0) /* sorry - its a true receiver - no signal - no time */
! #define RAWDCF_CFLAG            (B50|CS8|CREAD|CLOCAL|PARENB)
! #define RAWDCF_IFLAG		(IGNPAR)
  #define RAWDCF_OFLAG		0
  #define RAWDCF_LFLAG		0

***************
*** 932,937 ****
--- 922,928 ----
        syslog(LOG_ERR, "PARSE receiver #%d: stream_enable: ioctl(fd, I_STR, PARSEIOC_ENABLE): %m", CL_UNIT(parse->unit));
        return 0;
      }
+   parse->io.clock_recv = stream_receive; /* ok - parse input in kernel */
    return 1;
  }

***************
*** 954,959 ****
--- 945,951 ----
        syslog(LOG_ERR, "PARSE receiver #%d: stream_disable: ioctl(fd, I_STR, PARSEIOC_DISABLE): %m", CL_UNIT(parse->unit));
        return 0;
      }
+   parse->io.clock_recv = local_receive; /* ok - parse input in daemon */
    return 1;
  }

***************
*** 1492,1513 ****
    struct parseunit *parse = (struct parseunit *)rbufp->recv_srcclock;
    register int count;
    register char *s;
- #ifdef FREEBSD_CONRAD
-   struct timeval foo;
- #endif
- 
    /*
     * eat all characters, parsing then and feeding complete samples
     */
    count = rbufp->recv_length;
    s = rbufp->recv_buffer;
- #ifdef FREEBSD_CONRAD
-   ioctl(parse->fd,TIOCTIMESTAMP,&foo);
-   TVTOTS(&foo, &rbufp->recv_time);
-   rbufp->recv_time.l_uf += TS_ROUNDBIT;
-   rbufp->recv_time.l_ui += JAN_1970;
-   rbufp->recv_time.l_uf &= TS_MASK;
- #endif

    while (count--)
      {
--- 1484,1494 ----
***************
*** 1663,1669 ****

  	  while (i-- > 0)
  	    {
! 	      if (parse_ioread(&parse->parseio, *s++, ts))
  		{
  		  /*
  		   * got something good to eat
--- 1644,1650 ----

  	  while (i-- > 0)
  	    {
! 	      if (parse_ioread(&parse->parseio, *s++, &ts))
  		{
  		  /*
  		   * got something good to eat
***************
*** 1874,1880 ****
        i++;
      }

!   sprintf(buffer, "unknown #%d", state);

    return buffer;
  }
--- 1855,1861 ----
        i++;
      }

!   sprintf(buffer, "unknown #%ld", (long int)state);

    return buffer;
  }
***************
*** 1961,1967 ****

    if ((tmp = delta / (60*60*24)) != 0)
      {
!       sprintf(buffer, "%dd+", tmp);
        delta -= tmp * 60*60*24;
      }

--- 1942,1948 ----

    if ((tmp = delta / (60*60*24)) != 0)
      {
!       sprintf(buffer, "%ldd+", (long int)tmp);
        delta -= tmp * 60*60*24;
      }

***************
*** 1971,1977 ****
    delta /= 60;

    sprintf(buffer+strlen(buffer), "%02d:%02d:%02d",
! 	  delta, m, s);

    return buffer;
  }
--- 1952,1958 ----
    delta /= 60;

    sprintf(buffer+strlen(buffer), "%02d:%02d:%02d",
! 	  (int)delta, (int)m, (int)s);

    return buffer;
  }
***************
*** 2292,2301 ****
        tm.c_iflag     = clockinfo[type].cl_iflag;
        tm.c_oflag     = clockinfo[type].cl_oflag;
        tm.c_lflag     = clockinfo[type].cl_lflag;
! #ifdef FREEBSD_CONRAD
!       tm.c_ispeed    = 50;
!       tm.c_ospeed    = 50;
! #endif
        if (TTY_SETATTR(fd232, &tm) == -1)
  	{
  	  syslog(LOG_ERR, "PARSE receiver #%d: parse_start: tcsetattr(%d, &tm): %m", unit, fd232);
--- 2273,2279 ----
        tm.c_iflag     = clockinfo[type].cl_iflag;
        tm.c_oflag     = clockinfo[type].cl_oflag;
        tm.c_lflag     = clockinfo[type].cl_lflag;
! 	
        if (TTY_SETATTR(fd232, &tm) == -1)
  	{
  	  syslog(LOG_ERR, "PARSE receiver #%d: parse_start: tcsetattr(%d, &tm): %m", unit, fd232);
***************
*** 2338,2358 ****
        return 0;		/* well, ok - special initialisation broke */
      }

- #ifdef FREEBSD_CONRAD
-       {
- 	int i,j;
- 	struct timeval tv;
- 	ioctl(parse->fd,TIOCTIMESTAMP,&tv);
- 	j = TIOCM_RTS;
- 	i = ioctl(fd232, TIOCMBIC, &j);
- 	if (i < 0) {
- 	  syslog(LOG_ERR, 
- 	    "PARSE receiver #%d: lowrts_poll: failed to lower RTS: %m", 
- 	    CL_UNIT(parse->unit));
- 	}
-       }
- #endif
- 	
    strcpy(tmp_ctl.parseformat.parse_buffer, parse->parse_type->cl_format);
    tmp_ctl.parseformat.parse_count = strlen(tmp_ctl.parseformat.parse_buffer);

--- 2316,2321 ----
***************
*** 2433,2439 ****
      }

  #ifdef PPSPPS
!   if (parse->pollonly || (parse->parse_type->cl_flags & PARSE_F_PPSPPS))
      {
        if (fdpps == -1)
  	{
--- 2396,2402 ----
      }

  #ifdef PPSPPS
!   if (parse->pollonly && (parse->parse_type->cl_flags & PARSE_F_PPSPPS))
      {
        if (fdpps == -1)
  	{
***************
*** 2653,2665 ****
  		parse->peer->refid = htonl(PARSEHSREFID);
  	}

-       /*
-        * NOT USED - yet
-        *
        if (in->haveflags & CLK_HAVEVAL2)
  	{
  	}
!        */
        if (in->haveflags & (CLK_HAVEFLAG1|CLK_HAVEFLAG2|CLK_HAVEFLAG3|CLK_HAVEFLAG4))
  	{
  	  parse->flags = (in->flags & (CLK_FLAG1|CLK_FLAG2|CLK_FLAG3|CLK_FLAG4)) |
--- 2616,2626 ----
  		parse->peer->refid = htonl(PARSEHSREFID);
  	}

        if (in->haveflags & CLK_HAVEVAL2)
  	{
+ 	  parse->peer->refid = in->fudgeval2;
  	}
!        
        if (in->haveflags & (CLK_HAVEFLAG1|CLK_HAVEFLAG2|CLK_HAVEFLAG3|CLK_HAVEFLAG4))
  	{
  	  parse->flags = (in->flags & (CLK_FLAG1|CLK_FLAG2|CLK_FLAG3|CLK_FLAG4)) |
***************
*** 2699,2705 ****

        out->fudgeval1 = (LONG)parse->peer->stratum;

!       out->fudgeval2 = 0;

        out->flags     = parse->flags & PARSE_STAT_FLAGS;

--- 2660,2666 ----

        out->fudgeval1 = (LONG)parse->peer->stratum;

!       out->fudgeval2 = parse->peer->refid;

        out->flags     = parse->flags & PARSE_STAT_FLAGS;

***************
*** 2848,2854 ****
                        (parse->status == i) ? "*" : "",
  		      clockstatus(i),
  		      l_mktime(stime),
! 		      percent / 100, percent % 100);
  	      sum += stime;
  	      tt  += strlen(tt);
  	    }
--- 2809,2815 ----
                        (parse->status == i) ? "*" : "",
  		      clockstatus(i),
  		      l_mktime(stime),
! 		      (int)(percent / 100), (int)(percent % 100));
  	      sum += stime;
  	      tt  += strlen(tt);
  	    }
***************
*** 2863,2869 ****
        sprintf(tt, "refclock_iomode=\"%s\"", parse->binding->bd_description);

        tt = add_var(&out->kv_list, 128, RO);
!       sprintf(tt, "refclock_driver_version=\"refclock_parse.c,v 3.53 1994/03/25 13:07:39 kardel Exp\"");

        out->lencode       = strlen(outstatus);
        out->lastcode      = outstatus;
--- 2824,2830 ----
        sprintf(tt, "refclock_iomode=\"%s\"", parse->binding->bd_description);

        tt = add_var(&out->kv_list, 128, RO);
!       sprintf(tt, "refclock_driver_version=\"refclock_parse.c,v 3.58 1994/05/12 21:03:39 kardel Exp\"");

        out->lencode       = strlen(outstatus);
        out->lastcode      = outstatus;
***************
*** 3447,3453 ****
  /*
   * History:
   *
!  * refclock_parse.c,v
   * Revision 3.53  1994/03/25  13:07:39  kardel
   * fixed offset calculation for large (>4 Min) offsets
   *
--- 3408,3429 ----
  /*
   * History:
   *
!  * refclock_parse.c,v
!  * Revision 3.58  1994/05/12  21:03:39  kardel
!  * adhere to new standard that fudgeval2 is refid
!  *
!  * Revision 3.57  1994/05/12  12:50:47  kardel
!  * printf fmt/arg cleanup
!  *
!  * Revision 3.56  1994/05/10  21:15:51  kardel
!  * var reference level bug, kernel disable fix
!  *
!  * Revision 3.55  1994/05/02  00:37:01  kardel
!  * 3.3t reconcilation + bug fixes (PPS simulation - old kpll)
!  *
!  * Revision 3.54  1994/04/11  19:34:42  kardel
!  * longer input characters for DCF77 raw input (8Bit+parity ignored)
!  *
   * Revision 3.53  1994/03/25  13:07:39  kardel
   * fixed offset calculation for large (>4 Min) offsets
   *
diff -c xntpdc/ntpdc.c:1.1.1.21 xntpdc/ntpdc.c:3.21
*** xntpdc/ntpdc.c:1.1.1.21	Fri May 13 01:03:55 1994
--- xntpdc/ntpdc.c	Fri May 13 01:03:55 1994
***************
*** 1085,1093 ****
  	if (decodenetnum(host, num)) {
  		if (fullhost != 0) {
  			(void) sprintf(fullhost,
! 			    "%d.%d.%d.%d", ((htonl(*num)>>24)&0xff),
! 			    ((htonl(*num)>>16)&0xff), ((htonl(*num)>>8)&0xff),
! 			    (htonl(*num)&0xff));
  		}
  		return 1;
  	} else if ((hp = gethostbyname(host)) != 0) {
--- 1085,1095 ----
  	if (decodenetnum(host, num)) {
  		if (fullhost != 0) {
  			(void) sprintf(fullhost,
! 				       "%u.%u.%u.%u",
! 				       (unsigned int)((htonl(*num)>>24)&0xff),
! 				       (unsigned int)((htonl(*num)>>16)&0xff),
! 				       (unsigned int)((htonl(*num)>>8)&0xff),
! 				       (unsigned int)(htonl(*num)&0xff));
  		}
  		return 1;
  	} else if ((hp = gethostbyname(host)) != 0) {
***************
*** 1267,1273 ****

  	if (pcmd->nargs == 0) {
  		val = delay_time.l_ui * 1000 + delay_time.l_uf / 4294967;
! 		(void) fprintf(fp, "delay %d ms\n", val);
  	} else {
  		if (pcmd->argval[0].ival < 0) {
  			isneg = 1;
--- 1269,1275 ----

  	if (pcmd->nargs == 0) {
  		val = delay_time.l_ui * 1000 + delay_time.l_uf / 4294967;
! 		(void) fprintf(fp, "delay %ld ms\n", (long int)val);
  	} else {
  		if (pcmd->argval[0].ival < 0) {
  			isneg = 1;
***************
*** 1324,1330 ****
  		if (info_auth_keyid == 0)
  			(void) fprintf(fp, "no keyid defined\n");
  		else
! 			(void) fprintf(fp, "keyid is %u\n", info_auth_keyid);
  	} else {
  		info_auth_keyid = pcmd->argval[0].uval;
  	}
--- 1326,1332 ----
  		if (info_auth_keyid == 0)
  			(void) fprintf(fp, "no keyid defined\n");
  		else
! 			(void) fprintf(fp, "keyid is %lu\n", (unsigned long)info_auth_keyid);
  	} else {
  		info_auth_keyid = pcmd->argval[0].uval;
  	}
diff -c xntpdc/ntpdc_ops.c:1.1.1.16 xntpdc/ntpdc_ops.c:3.20
*** xntpdc/ntpdc_ops.c:1.1.1.16	Fri May 13 01:03:59 1994
--- xntpdc/ntpdc_ops.c	Fri May 13 01:04:00 1994
***************
*** 453,460 ****
  	    ufptoa(NTOHS_FP(pp->rootdispersion), 5));
  	
  	(void) fprintf(fp,
! 	    "ppoll %d, hpoll %d, keyid %u, version %d, association %u\n",
! 	    pp->ppoll, pp->hpoll, pp->keyid, pp->version, ntohs(pp->associd));

  	(void) fprintf(fp,
  	    "valid %d, reach %03o, unreach %d, flash %03o, ",
--- 453,460 ----
  	    ufptoa(NTOHS_FP(pp->rootdispersion), 5));
  	
  	(void) fprintf(fp,
! 	    "ppoll %d, hpoll %d, keyid %lu, version %d, association %u\n",
! 	    pp->ppoll, pp->hpoll, (unsigned long)pp->keyid, pp->version, (unsigned int)ntohs(pp->associd));

  	(void) fprintf(fp,
  	    "valid %d, reach %03o, unreach %d, flash %03o, ",
***************
*** 463,469 ****
  	(void) fprintf(fp, "boffset %s, ttl %d\n",
  	    fptoa(NTOHS_FP(pp->estbdelay), 5), pp->ttl);
  	
! 	(void) fprintf(fp, "timer %ds, flags", ntohl(pp->timer));
  	if (pp->flags == 0) {
  		(void) fprintf(fp, " none\n");
  	} else {
--- 463,469 ----
  	(void) fprintf(fp, "boffset %s, ttl %d\n",
  	    fptoa(NTOHS_FP(pp->estbdelay), 5), pp->ttl);
  	
! 	(void) fprintf(fp, "timer %ds, flags", (int)ntohl(pp->timer));
  	if (pp->flags == 0) {
  		(void) fprintf(fp, " none\n");
  	} else {
***************
*** 627,662 ****
  		    nntohost(pp->srcadr));
  		(void) fprintf(fp, "local interface:      %s\n",
  		    numtoa(pp->dstadr));
! 		(void) fprintf(fp, "time last received:   %ds\n",
! 		    ntohl(pp->timereceived));
! 		(void) fprintf(fp, "time until next send: %ds\n",
! 		    ntohl(pp->timetosend));
! 		(void) fprintf(fp, "reachability change:  %ds\n",
! 		    ntohl(pp->timereachable));
! 		(void) fprintf(fp, "packets sent:         %d\n",
! 		    ntohl(pp->sent));
! 		(void) fprintf(fp, "packets received:     %d\n",
! 		    ntohl(pp->received));
! 		(void) fprintf(fp, "packets processed:    %d\n",
! 		    ntohl(pp->processed));
! 		(void) fprintf(fp, "bad length packets:   %d\n",
! 		    ntohl(pp->badlength));
! 		(void) fprintf(fp, "bad auth packets:     %d\n",
! 		    ntohl(pp->badauth));
! 		(void) fprintf(fp, "bogus origin packets: %d\n",
! 		    ntohl(pp->bogusorg));
! 		(void) fprintf(fp, "duplicate packets:    %d\n",
! 		    ntohl(pp->oldpkt));
! 		(void) fprintf(fp, "bad delay rejections: %d\n",
! 		    ntohl(pp->baddelay));
! 		(void) fprintf(fp, "select delay rejects: %d\n",
! 		    ntohl(pp->seldelay));
! 		(void) fprintf(fp, "select disp rejects:  %d\n",
! 		    ntohl(pp->seldisp));
! 		(void) fprintf(fp, "select finds broken:  %d\n",
! 		    ntohl(pp->selbroken));
! 		(void) fprintf(fp, "too old for select:   %d\n",
! 		    ntohl(pp->selold));
  		(void) fprintf(fp, "sel candidate order:  %d\n",
  		    (int)pp->candidate);
  		(void) fprintf(fp, "falseticker order:    %d\n",
--- 627,662 ----
  		    nntohost(pp->srcadr));
  		(void) fprintf(fp, "local interface:      %s\n",
  		    numtoa(pp->dstadr));
! 		(void) fprintf(fp, "time last received:   %lds\n",
! 		    (long int)ntohl(pp->timereceived));
! 		(void) fprintf(fp, "time until next send: %lds\n",
! 		    (long int)ntohl(pp->timetosend));
! 		(void) fprintf(fp, "reachability change:  %lds\n",
! 		    (long int)ntohl(pp->timereachable));
! 		(void) fprintf(fp, "packets sent:         %ld\n",
! 		    (long int)ntohl(pp->sent));
! 		(void) fprintf(fp, "packets received:     %ld\n",
! 		    (long int)ntohl(pp->received));
! 		(void) fprintf(fp, "packets processed:    %ld\n",
! 		    (long int)ntohl(pp->processed));
! 		(void) fprintf(fp, "bad length packets:   %ld\n",
! 		    (long int)ntohl(pp->badlength));
! 		(void) fprintf(fp, "bad auth packets:     %ld\n",
! 		    (long int)ntohl(pp->badauth));
! 		(void) fprintf(fp, "bogus origin packets: %ld\n",
! 		    (long int)ntohl(pp->bogusorg));
! 		(void) fprintf(fp, "duplicate packets:    %ld\n",
! 		    (long int)ntohl(pp->oldpkt));
! 		(void) fprintf(fp, "bad delay rejections: %ld\n",
! 		    (long int)ntohl(pp->baddelay));
! 		(void) fprintf(fp, "select delay rejects: %ld\n",
! 		    (long int)ntohl(pp->seldelay));
! 		(void) fprintf(fp, "select disp rejects:  %ld\n",
! 		    (long int)ntohl(pp->seldisp));
! 		(void) fprintf(fp, "select finds broken:  %ld\n",
! 		    (long int)ntohl(pp->selbroken));
! 		(void) fprintf(fp, "too old for select:   %ld\n",
! 		    (long int)ntohl(pp->selold));
  		(void) fprintf(fp, "sel candidate order:  %d\n",
  		    (int)pp->candidate);
  		(void) fprintf(fp, "falseticker order:    %d\n",
***************
*** 717,727 ****
  		NTOHL_FP(&il->drift_comp, &temp2ts);

  		(void) fprintf(fp,
! 		    "offset %s, drift %s, compliance %d, timer %d seconds\n",
  		    lfptoa(&tempts, 7),
  		    lfptoa(&temp2ts, 7),
! 		    ntohl(il->compliance),
! 		    ntohl(il->watchdog_timer));
  	} else {
  		NTOHL_FP(&il->last_offset, &tempts);
  		(void) fprintf(fp, "offset:     %s seconds\n",
--- 717,727 ----
  		NTOHL_FP(&il->drift_comp, &temp2ts);

  		(void) fprintf(fp,
! 		    "offset %s, drift %s, compliance %ld, timer %ld seconds\n",
  		    lfptoa(&tempts, 7),
  		    lfptoa(&temp2ts, 7),
! 		    (long int)ntohl(il->compliance),
! 		    (long int)ntohl(il->watchdog_timer));
  	} else {
  		NTOHL_FP(&il->last_offset, &tempts);
  		(void) fprintf(fp, "offset:     %s seconds\n",
***************
*** 729,738 ****
  		NTOHL_FP(&il->drift_comp, &tempts);
  		(void) fprintf(fp, "frequency:  %s seconds\n",
  		    lfptoa(&tempts, 7));
! 		(void) fprintf(fp, "compliance: %d seconds\n",
! 		    ntohl(il->compliance));
! 		(void) fprintf(fp, "timer:      %d seconds\n",
! 		    ntohl(il->watchdog_timer));
  	}
  }

--- 729,738 ----
  		NTOHL_FP(&il->drift_comp, &tempts);
  		(void) fprintf(fp, "frequency:  %s seconds\n",
  		    lfptoa(&tempts, 7));
! 		(void) fprintf(fp, "compliance: %ld seconds\n",
! 		    (long int)ntohl(il->compliance));
! 		(void) fprintf(fp, "timer:      %ld seconds\n",
! 		    (long int)ntohl(il->watchdog_timer));
  	}
  }

***************
*** 854,882 ****
  		return;
  	}

! 	(void) fprintf(fp, "system uptime:          %d\n",
! 	    ntohl(ss->timeup));
! 	(void) fprintf(fp, "time since reset:       %d\n",
! 	    ntohl(ss->timereset));
! 	(void) fprintf(fp, "bad stratum in packet:  %d\n",
! 	    ntohl(ss->badstratum));
! 	(void) fprintf(fp, "old version packets:    %d\n",
! 	    ntohl(ss->oldversionpkt));
! 	(void) fprintf(fp, "new version packets:    %d\n",
! 	    ntohl(ss->newversionpkt));
! 	(void) fprintf(fp, "unknown version number: %d\n",
! 	    ntohl(ss->unknownversion));
! 	(void) fprintf(fp, "bad packet length:      %d\n",
! 	    ntohl(ss->badlength));
! 	(void) fprintf(fp, "packets processed:      %d\n",
! 	    ntohl(ss->processed));
! 	(void) fprintf(fp, "bad authentication:     %d\n",
! 	    ntohl(ss->badauth));
  	if (itemsize != sizeof(struct info_sys_stats))
  		return;
  	
! 	(void) fprintf(fp, "limitation rejects:     %d\n",
! 	    ntohl(ss->limitrejected));
  }

--- 854,882 ----
  		return;
  	}

! 	(void) fprintf(fp, "system uptime:          %ld\n",
! 	    (long int)ntohl(ss->timeup));
! 	(void) fprintf(fp, "time since reset:       %ld\n",
! 	    (long int)ntohl(ss->timereset));
! 	(void) fprintf(fp, "bad stratum in packet:  %ld\n",
! 	    (long int)ntohl(ss->badstratum));
! 	(void) fprintf(fp, "old version packets:    %ld\n",
! 	    (long int)ntohl(ss->oldversionpkt));
! 	(void) fprintf(fp, "new version packets:    %ld\n",
! 	    (long int)ntohl(ss->newversionpkt));
! 	(void) fprintf(fp, "unknown version number: %ld\n",
! 	    (long int)ntohl(ss->unknownversion));
! 	(void) fprintf(fp, "bad packet length:      %ld\n",
! 	    (long int)ntohl(ss->badlength));
! 	(void) fprintf(fp, "packets processed:      %ld\n",
! 	    (long int)ntohl(ss->processed));
! 	(void) fprintf(fp, "bad authentication:     %ld\n",
! 	    (long int)ntohl(ss->badauth));
  	if (itemsize != sizeof(struct info_sys_stats))
  		return;
  	
! 	(void) fprintf(fp, "limitation rejects:     %ld\n",
! 	    (long int)ntohl(ss->limitrejected));
  }

***************
*** 907,914 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_io_stats)))
  		return;

! 	(void) fprintf(fp, "time since reset:      %d\n",
! 	    ntohl(io->timereset));
  	(void) fprintf(fp, "total receive buffers: %d\n",
  	    (int)ntohs(io->totalrecvbufs));
  	(void) fprintf(fp, "free receive buffers:  %d\n",
--- 907,914 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_io_stats)))
  		return;

! 	(void) fprintf(fp, "time since reset:      %ld\n",
! 	    (long int)ntohl(io->timereset));
  	(void) fprintf(fp, "total receive buffers: %d\n",
  	    (int)ntohs(io->totalrecvbufs));
  	(void) fprintf(fp, "free receive buffers:  %d\n",
***************
*** 917,936 ****
  	    (int)ntohs(io->fullrecvbufs));
  	(void) fprintf(fp, "low water refills:     %d\n",
  	    (int)ntohs(io->lowwater));
! 	(void) fprintf(fp, "dropped packets:       %d\n",
! 	    ntohl(io->dropped));
! 	(void) fprintf(fp, "ignored packets:       %d\n",
! 	    ntohl(io->ignored));
! 	(void) fprintf(fp, "received packets:      %d\n",
! 	    ntohl(io->received));
! 	(void) fprintf(fp, "packets sent:          %d\n",
! 	    ntohl(io->sent));
! 	(void) fprintf(fp, "packets not sent:      %d\n",
! 	    ntohl(io->notsent));
! 	(void) fprintf(fp, "interrupts handled:    %d\n",
! 	    ntohl(io->interrupts));
! 	(void) fprintf(fp, "received by interrupt: %d\n",
! 	    ntohl(io->int_received));
  }

--- 917,936 ----
  	    (int)ntohs(io->fullrecvbufs));
  	(void) fprintf(fp, "low water refills:     %d\n",
  	    (int)ntohs(io->lowwater));
! 	(void) fprintf(fp, "dropped packets:       %ld\n",
! 	    (long int)ntohl(io->dropped));
! 	(void) fprintf(fp, "ignored packets:       %ld\n",
! 	    (long int)ntohl(io->ignored));
! 	(void) fprintf(fp, "received packets:      %ld\n",
! 	    (long int)ntohl(io->received));
! 	(void) fprintf(fp, "packets sent:          %ld\n",
! 	    (long int)ntohl(io->sent));
! 	(void) fprintf(fp, "packets not sent:      %ld\n",
! 	    (long int)ntohl(io->notsent));
! 	(void) fprintf(fp, "interrupts handled:    %ld\n",
! 	    (long int)ntohl(io->interrupts));
! 	(void) fprintf(fp, "received by interrupt: %ld\n",
! 	    (long int)ntohl(io->int_received));
  }

***************
*** 962,979 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_mem_stats)))
  		return;

! 	(void) fprintf(fp, "time since reset:     %d\n",
! 	    ntohl(mem->timereset));
  	(void) fprintf(fp, "total peer memory:    %d\n",
  	    (int)ntohs(mem->totalpeermem));
  	(void) fprintf(fp, "free peer memory:     %d\n",
  	    (int)ntohs(mem->freepeermem));
! 	(void) fprintf(fp, "calls to findpeer:    %d\n",
! 	    ntohl(mem->findpeer_calls));
! 	(void) fprintf(fp, "new peer allocations: %d\n",
! 	    ntohl(mem->allocations));
! 	(void) fprintf(fp, "peer demobilizations: %d\n",
! 	    ntohl(mem->demobilizations));

  	(void) fprintf(fp, "hash table counts:   ");
  	for (i = 0; i < HASH_SIZE; i++) {
--- 962,979 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_mem_stats)))
  		return;

! 	(void) fprintf(fp, "time since reset:     %ld\n",
! 	    (long int)ntohl(mem->timereset));
  	(void) fprintf(fp, "total peer memory:    %d\n",
  	    (int)ntohs(mem->totalpeermem));
  	(void) fprintf(fp, "free peer memory:     %d\n",
  	    (int)ntohs(mem->freepeermem));
! 	(void) fprintf(fp, "calls to findpeer:    %ld\n",
! 	    (long int)ntohl(mem->findpeer_calls));
! 	(void) fprintf(fp, "new peer allocations: %ld\n",
! 	    (long int)ntohl(mem->allocations));
! 	(void) fprintf(fp, "peer demobilizations: %ld\n",
! 	    (long int)ntohl(mem->demobilizations));

  	(void) fprintf(fp, "hash table counts:   ");
  	for (i = 0; i < HASH_SIZE; i++) {
***************
*** 1013,1026 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_timer_stats)))
  		return;

! 	(void) fprintf(fp, "time since reset:  %d\n",
! 	    ntohl(tim->timereset));
! 	(void) fprintf(fp, "alarms handled:    %d\n",
! 	    ntohl(tim->alarms));
! 	(void) fprintf(fp, "alarm overruns:    %d\n",
! 	    ntohl(tim->overflows));
! 	(void) fprintf(fp, "calls to transmit: %d\n",
! 	    ntohl(tim->xmtcalls));
  }

--- 1013,1026 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_timer_stats)))
  		return;

! 	(void) fprintf(fp, "time since reset:  %ld\n",
! 	    (long int)ntohl(tim->timereset));
! 	(void) fprintf(fp, "alarms handled:    %ld\n",
! 	    (long int)ntohl(tim->alarms));
! 	(void) fprintf(fp, "alarm overruns:    %ld\n",
! 	    (long int)ntohl(tim->overflows));
! 	(void) fprintf(fp, "calls to transmit: %ld\n",
! 	    (long int)ntohl(tim->xmtcalls));
  }

***************
*** 1496,1510 ****
  		(void) fprintf(fp,
  			       "===============================================================================\n");
  		while (items > 0) {
! 			(void) fprintf(fp, "%-20.20s %5d %9d %4d   %3d %9u %9u %9u\n",
  				       nntohost(ml->addr),
  				       ntohs(ml->port),
! 				       ntohl(ml->count),
  				       ml->mode,
  				       ml->version,
! 				       ntohl(ml->lastdrop),
! 				       ntohl(ml->lasttime),
! 				       ntohl(ml->firsttime));
  			ml++;
  			items--;
  		}
--- 1496,1510 ----
  		(void) fprintf(fp,
  			       "===============================================================================\n");
  		while (items > 0) {
! 			(void) fprintf(fp, "%-20.20s %5d %9ld %4d   %3d %9lu %9lu %9lu\n",
  				       nntohost(ml->addr),
  				       ntohs(ml->port),
! 				       (unsigned long)ntohl(ml->count),
  				       ml->mode,
  				       ml->version,
! 				       (unsigned long)ntohl(ml->lastdrop),
! 				       (unsigned long)ntohl(ml->lasttime),
! 				       (unsigned long)ntohl(ml->firsttime));
  			ml++;
  			items--;
  		}
***************
*** 1521,1534 ****
  		(void) fprintf(fp,
  			       "======================================================================\n");
  		while (items > 0) {
! 			(void) fprintf(fp, "%-20.20s %5d %9d %4d   %3d %9u %9u\n",
  				       nntohost(oml->addr),
! 				       ntohs(oml->port),
! 				       ntohl(oml->count),
  				       oml->mode,
  				       oml->version,
! 				       ntohl(oml->lasttime),
! 				       ntohl(oml->firsttime));
  			oml++;
  			items--;
  		}
--- 1521,1534 ----
  		(void) fprintf(fp,
  			       "======================================================================\n");
  		while (items > 0) {
! 			(void) fprintf(fp, "%-20.20s %5d %9ld %4d   %3d %9lu %9lu\n",
  				       nntohost(oml->addr),
! 				       (int)ntohs(oml->port),
! 				       (long int)ntohl(oml->count),
  				       oml->mode,
  				       oml->version,
! 				       (unsigned long)ntohl(oml->lasttime),
! 				       (unsigned long)ntohl(oml->firsttime));
  			oml++;
  			items--;
  		}
***************
*** 1813,1832 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_auth)))
  		return;

! 	(void) fprintf(fp, "time since reset:       %d\n",
! 	    ntohl(ia->timereset));
! 	(void) fprintf(fp, "key lookups:            %d\n",
! 	    ntohl(ia->keylookups));
! 	(void) fprintf(fp, "keys not found:         %d\n",
! 	    ntohl(ia->keynotfound));
! 	(void) fprintf(fp, "encryptions:            %d\n",
! 	    ntohl(ia->encryptions));
! 	(void) fprintf(fp, "decryptions:            %d\n",
! 	    ntohl(ia->decryptions));
! 	(void) fprintf(fp, "successful decryptions: %d\n",
! 	    ntohl(ia->decryptions));
! 	(void) fprintf(fp, "uncached keys:          %d\n",
! 	    ntohl(ia->keyuncached));
  }

--- 1813,1832 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_auth)))
  		return;

! 	(void) fprintf(fp, "time since reset:       %ld\n",
! 	    (long int)ntohl(ia->timereset));
! 	(void) fprintf(fp, "key lookups:            %ld\n",
! 	    (long int)ntohl(ia->keylookups));
! 	(void) fprintf(fp, "keys not found:         %ld\n",
! 	    (long int)ntohl(ia->keynotfound));
! 	(void) fprintf(fp, "encryptions:            %ld\n",
! 	    (long int)ntohl(ia->encryptions));
! 	(void) fprintf(fp, "decryptions:            %ld\n",
! 	    (long int)ntohl(ia->decryptions));
! 	(void) fprintf(fp, "successful decryptions: %ld\n",
! 	    (long int)ntohl(ia->decryptions));
! 	(void) fprintf(fp, "uncached keys:          %ld\n",
! 	    (long int)ntohl(ia->keyuncached));
  }

***************
*** 1873,1882 ****
  		else
  			(void) fprintf(fp, "normal priority\n");
  		
! 		(void) fprintf(fp, "set for %d secs, last set %d secs ago\n",
! 		    it->origtime, it->settime);
! 		(void) fprintf(fp, "sequence %d, number of resets %d\n",
! 		    it->sequence, it->resets);
  	}
  }

--- 1873,1882 ----
  		else
  			(void) fprintf(fp, "normal priority\n");
  		
! 		(void) fprintf(fp, "set for %ld secs, last set %ld secs ago\n",
! 		    (long int)it->origtime, (long int)it->settime);
! 		(void) fprintf(fp, "sequence %ld, number of resets %ld\n",
! 		    (long int)it->sequence, (long int)it->resets);
  	}
  }

***************
*** 2021,2056 ****
  	if (!checkitemsize(itemsize, sizeof(struct info_control)))
  		return;

! 	(void) fprintf(fp, "time since reset:       %d\n",
! 	    ntohl(ic->ctltimereset));
! 	(void) fprintf(fp, "requests received:      %d\n",
! 	    ntohl(ic->numctlreq));
! 	(void) fprintf(fp, "responses sent:         %d\n",
! 	    ntohl(ic->numctlresponses));
! 	(void) fprintf(fp, "fragments sent:         %d\n",
! 	    ntohl(ic->numctlfrags));
! 	(void) fprintf(fp, "async messages sent:    %d\n",
! 	    ntohl(ic->numasyncmsgs));
! 	(void) fprintf(fp, "error msgs sent:        %d\n",
! 	    ntohl(ic->numctlerrors));
! 	(void) fprintf(fp, "total bad pkts:         %d\n",
! 	    ntohl(ic->numctlbadpkts));
! 	(void) fprintf(fp, "packet too short:       %d\n",
! 	    ntohl(ic->numctltooshort));
! 	(void) fprintf(fp, "response on input:      %d\n",
! 	    ntohl(ic->numctlinputresp));
! 	(void) fprintf(fp, "fragment on input:      %d\n",
! 	    ntohl(ic->numctlinputfrag));
! 	(void) fprintf(fp, "error set on input:     %d\n",
! 	    ntohl(ic->numctlinputerr));
! 	(void) fprintf(fp, "bad offset on input:    %d\n",
! 	    ntohl(ic->numctlbadoffset));
! 	(void) fprintf(fp, "bad version packets:    %d\n",
! 	    ntohl(ic->numctlbadversion));
! 	(void) fprintf(fp, "data in pkt too short:  %d\n",
! 	    ntohl(ic->numctldatatooshort));
! 	(void) fprintf(fp, "unknown op codes:       %d\n",
! 	    ntohl(ic->numctlbadop));
  }

--- 2021,2056 ----
  	if (!checkitemsize(itemsize, sizeof(struct info_control)))
  		return;

! 	(void) fprintf(fp, "time since reset:       %ld\n",
! 	    (long int)ntohl(ic->ctltimereset));
! 	(void) fprintf(fp, "requests received:      %ld\n",
! 	    (long int)ntohl(ic->numctlreq));
! 	(void) fprintf(fp, "responses sent:         %ld\n",
! 	    (long int)ntohl(ic->numctlresponses));
! 	(void) fprintf(fp, "fragments sent:         %ld\n",
! 	    (long int)ntohl(ic->numctlfrags));
! 	(void) fprintf(fp, "async messages sent:    %ld\n",
! 	    (long int)ntohl(ic->numasyncmsgs));
! 	(void) fprintf(fp, "error msgs sent:        %ld\n",
! 	    (long int)ntohl(ic->numctlerrors));
! 	(void) fprintf(fp, "total bad pkts:         %ld\n",
! 	    (long int)ntohl(ic->numctlbadpkts));
! 	(void) fprintf(fp, "packet too short:       %ld\n",
! 	    (long int)ntohl(ic->numctltooshort));
! 	(void) fprintf(fp, "response on input:      %ld\n",
! 	    (long int)ntohl(ic->numctlinputresp));
! 	(void) fprintf(fp, "fragment on input:      %ld\n",
! 	    (long int)ntohl(ic->numctlinputfrag));
! 	(void) fprintf(fp, "error set on input:     %ld\n",
! 	    (long int)ntohl(ic->numctlinputerr));
! 	(void) fprintf(fp, "bad offset on input:    %ld\n",
! 	    (long int)ntohl(ic->numctlbadoffset));
! 	(void) fprintf(fp, "bad version packets:    %ld\n",
! 	    (long int)ntohl(ic->numctlbadversion));
! 	(void) fprintf(fp, "data in pkt too short:  %ld\n",
! 	    (long int)ntohl(ic->numctldatatooshort));
! 	(void) fprintf(fp, "unknown op codes:       %ld\n",
! 	    (long int)ntohl(ic->numctlbadop));
  }

***************
*** 2111,2133 ****
  		(void) fprintf(fp, "Leap overide option in effect\n");
   	if (il->leap_bits & INFO_LEAP_SEENSTRATUM1)
   		(void) fprintf(fp, "Stratum 1 restrictions in effect\n");
! 	(void) fprintf(fp, "time to next leap interrupt: %d seconds\n",
! 	    ntohl(il->leap_timer));
  	gettstamp(&ts);
  	(void) fprintf(fp, "date of next leap interrupt: %s\n",
  	    humandate(ts.l_ui + ntohl(il->leap_timer)));
! 	(void) fprintf(fp, "calls to leap process: %u\n",
! 	    ntohl(il->leap_processcalls));
! 	(void) fprintf(fp, "leap more than month away: %u\n",
! 	    ntohl(il->leap_notclose));
! 	(void) fprintf(fp, "leap less than month away: %u\n",
! 	    ntohl(il->leap_monthofleap));
! 	(void) fprintf(fp, "leap less than day away:   %u\n",
! 	    ntohl(il->leap_dayofleap));
! 	(void) fprintf(fp, "leap in less than 2 hours: %u\n",
! 	    ntohl(il->leap_hoursfromleap));
! 	(void) fprintf(fp, "leap happened:             %u\n",
! 	    ntohl(il->leap_happened));
  }

--- 2111,2133 ----
  		(void) fprintf(fp, "Leap overide option in effect\n");
   	if (il->leap_bits & INFO_LEAP_SEENSTRATUM1)
   		(void) fprintf(fp, "Stratum 1 restrictions in effect\n");
! 	(void) fprintf(fp, "time to next leap interrupt: %ld seconds\n",
! 	    (long int)ntohl(il->leap_timer));
  	gettstamp(&ts);
  	(void) fprintf(fp, "date of next leap interrupt: %s\n",
  	    humandate(ts.l_ui + ntohl(il->leap_timer)));
! 	(void) fprintf(fp, "calls to leap process: %lu\n",
! 	    (unsigned long)ntohl(il->leap_processcalls));
! 	(void) fprintf(fp, "leap more than month away: %lu\n",
! 	    (unsigned long)ntohl(il->leap_notclose));
! 	(void) fprintf(fp, "leap less than month away: %lu\n",
! 	    (unsigned long)ntohl(il->leap_monthofleap));
! 	(void) fprintf(fp, "leap less than day away:   %lu\n",
! 	    (unsigned long)ntohl(il->leap_dayofleap));
! 	(void) fprintf(fp, "leap in less than 2 hours: %lu\n",
! 	    (unsigned long)ntohl(il->leap_hoursfromleap));
! 	(void) fprintf(fp, "leap happened:             %lu\n",
! 	    (unsigned long)ntohl(il->leap_happened));
  }

***************
*** 2182,2197 ****
  		    cl->lastevent);
  		(void) fprintf(fp, "current status:       %d\n",
  		    cl->currentstatus);
! 		(void) fprintf(fp, "number of polls:      %u\n",
! 		    ntohl(cl->polls));
! 		(void) fprintf(fp, "no response to poll:  %u\n",
! 		    ntohl(cl->noresponse));
! 		(void) fprintf(fp, "bad format responses: %u\n",
! 		    ntohl(cl->badformat));
! 		(void) fprintf(fp, "bad data responses:   %u\n",
! 		    ntohl(cl->baddata));
! 		(void) fprintf(fp, "running time:         %u\n",
! 		    ntohl(cl->timestarted));
  		NTOHL_FP(&cl->fudgetime1, &ts);
  		(void) fprintf(fp, "fudge time 1:         %s\n",
  		    lfptoa(&ts, 7));
--- 2182,2197 ----
  		    cl->lastevent);
  		(void) fprintf(fp, "current status:       %d\n",
  		    cl->currentstatus);
! 		(void) fprintf(fp, "number of polls:      %lu\n",
! 		   (unsigned long) ntohl(cl->polls));
! 		(void) fprintf(fp, "no response to poll:  %lu\n",
! 		   (unsigned long) ntohl(cl->noresponse));
! 		(void) fprintf(fp, "bad format responses: %lu\n",
! 		   (unsigned long) ntohl(cl->badformat));
! 		(void) fprintf(fp, "bad data responses:   %lu\n",
! 		   (unsigned long) ntohl(cl->baddata));
! 		(void) fprintf(fp, "running time:         %lu\n",
! 		   (unsigned long) ntohl(cl->timestarted));
  		NTOHL_FP(&cl->fudgetime1, &ts);
  		(void) fprintf(fp, "fudge time 1:         %s\n",
  		    lfptoa(&ts, 7));
***************
*** 2426,2445 ****
  	/*
  	 * pll variables
  	 */
! 	(void)fprintf(fp, "pll offset:           %d us\n",
! 	    ntohl(ik->offset));
  	(void)fprintf(fp, "pll frequency:        %s ppm\n",
  	    fptoa((s_fp)ntohl(ik->freq), 3));
! 	(void)fprintf(fp, "maximum error:        %d us\n",
! 	    ntohl(ik->maxerror));
! 	(void)fprintf(fp, "estimated error:      %d us\n",
! 	    ntohl(ik->esterror));
  	(void)fprintf(fp, "status:               %04x\n",
  	    ntohs(ik->status & 0xffff));
! 	(void)fprintf(fp, "pll time constant:    %d\n",
! 	    ntohl(ik->constant));
! 	(void)fprintf(fp, "precision:            %d us\n",
!             ntohl(ik->precision));
  	(void)fprintf(fp, "frequency tolerance:  %s ppm\n",
              fptoa((s_fp)ntohl(ik->tolerance), 0));

--- 2426,2445 ----
  	/*
  	 * pll variables
  	 */
! 	(void)fprintf(fp, "pll offset:           %ld us\n",
! 	    (long int)ntohl(ik->offset));
  	(void)fprintf(fp, "pll frequency:        %s ppm\n",
  	    fptoa((s_fp)ntohl(ik->freq), 3));
! 	(void)fprintf(fp, "maximum error:        %ld us\n",
! 	    (long int)ntohl(ik->maxerror));
! 	(void)fprintf(fp, "estimated error:      %ld us\n",
! 	    (long int)ntohl(ik->esterror));
  	(void)fprintf(fp, "status:               %04x\n",
  	    ntohs(ik->status & 0xffff));
! 	(void)fprintf(fp, "pll time constant:    %ld\n",
! 	    (long int)ntohl(ik->constant));
! 	(void)fprintf(fp, "precision:            %ld us\n",
!           (long int)ntohl(ik->precision));
  	(void)fprintf(fp, "frequency tolerance:  %s ppm\n",
              fptoa((s_fp)ntohl(ik->tolerance), 0));

***************
*** 2457,2472 ****
              fptoa((s_fp)ntohl(ik->ppsfreq), 3));
  	(void)fprintf(fp, "pps stability:        %s ppm\n",
  	    fptoa((s_fp)ntohl(ik->stabil), 3));
! 	(void)fprintf(fp, "pps jitter:           %d us\n",
!             ntohl(ik->jitter));
  	(void)fprintf(fp, "calibration interval: %d s\n",
  	    1 << ntohs(ik->shift));
! 	(void)fprintf(fp, "calibration cycles:   %d\n",
! 	    ntohl(ik->calcnt));
! 	(void)fprintf(fp, "jitter exceeded:      %d\n",
! 	    ntohl(ik->jitcnt));
! 	(void)fprintf(fp, "stability exceeded:   %d\n",
! 	    ntohl(ik->stbcnt));
! 	(void)fprintf(fp, "calibration errors:   %d\n",
! 	    ntohl(ik->errcnt));
  }
--- 2457,2472 ----
              fptoa((s_fp)ntohl(ik->ppsfreq), 3));
  	(void)fprintf(fp, "pps stability:        %s ppm\n",
  	    fptoa((s_fp)ntohl(ik->stabil), 3));
! 	(void)fprintf(fp, "pps jitter:           %ld us\n",
!             (long int)ntohl(ik->jitter));
  	(void)fprintf(fp, "calibration interval: %d s\n",
  	    1 << ntohs(ik->shift));
! 	(void)fprintf(fp, "calibration cycles:   %ld\n",
! 	    (long int)ntohl(ik->calcnt));
! 	(void)fprintf(fp, "jitter exceeded:      %ld\n",
! 	    (long int)ntohl(ik->jitcnt));
! 	(void)fprintf(fp, "stability exceeded:   %ld\n",
! 	    (long int)ntohl(ik->stbcnt));
! 	(void)fprintf(fp, "calibration errors:   %ld\n",
! 	    (long int)ntohl(ik->errcnt));
  }
RCS file: /src/NTP/REPOSITORY/v3/ntpdate/ntpdate.h,v
retrieving revision 3.5
diff -c -r3.5 ntpdate.h
*** ntpdate/ntpdate.h:3.5	1994/05/11 09:25:04
--- ntpdate/ntpdate.h	1994/05/12 23:48:49
***************
*** 87,90 ****
--- 87,92 ----
   */
  #define	DEFTIMEOUT	5		/* 5 timer increments */
  #define	DEFSAMPLES	4		/* get 4 samples per server */
+ #ifndef DEFPRECISION
  #define	DEFPRECISION	(-5)		/* the precision we claim */
+ #endif
diff -c -r3.13 -r3.14 parse/util/parsetest.c
*** parse/util/parsetest.c:3.13	Mon Feb 21 04:25:30 1994
--- parse/util/parsetest.c	Fri May 13 01:54:16 1994
***************
*** 1,7 ****
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/parsetest.c,v 3.13 1994/02/20 13:04:46 kardel Exp
   *
!  * parsetest.c,v 3.13 1994/02/20 13:04:46 kardel Exp
   *
   * Copyright (c) 1989,1990,1991,1992,1993,1994
   * Frank Kardel Friedrich-Alexander Universitaet Erlangen-Nuernberg
--- 1,7 ----
  /*
!  * /src/NTP/REPOSITORY/v3/parse/util/parsetest.c,v 3.14 1994/05/11 09:25:43 kardel Exp
   *
!  * parsetest.c,v 3.14 1994/05/11 09:25:43 kardel Exp
   *
   * Copyright (c) 1989,1990,1991,1992,1993,1994
   * Frank Kardel Friedrich-Alexander Universitaet Erlangen-Nuernberg
***************
*** 10,16 ****
   * but WITHOUT ANY WARRANTY; without even the implied warranty of
   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   *
!  * parsetest.c,v
   * Revision 3.13  1994/02/20  13:04:46  kardel
   * parse add/delete second support
   *
--- 10,19 ----
   * but WITHOUT ANY WARRANTY; without even the implied warranty of
   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   *
!  * parsetest.c,v
!  * Revision 3.14  1994/05/11  09:25:43  kardel
!  * 3.3r + printf fmt/arg fixes
!  *
   * Revision 3.13  1994/02/20  13:04:46  kardel
   * parse add/delete second support
   *
***************
*** 59,65 ****
        { PARSEB_NOSYNC,   "TIME CODE NOT CONFIRMED" },
        { PARSEB_DST,      "DST" },
        { PARSEB_UTC,      "UTC DISPLAY" },
!       { PARSEB_LEAP,     "LEAP WARNING" },
        { PARSEB_LEAPSECOND, "LEAP SECOND" },
        { PARSEB_ALTERNATE,"ALTERNATE ANTENNA" },
        { PARSEB_TIMECODE, "TIME CODE" },
--- 62,69 ----
        { PARSEB_NOSYNC,   "TIME CODE NOT CONFIRMED" },
        { PARSEB_DST,      "DST" },
        { PARSEB_UTC,      "UTC DISPLAY" },
!       { PARSEB_LEAPADD,  "LEAP ADDITION WARNING" },
!       { PARSEB_LEAPDEL,  "LEAP DELETION WARNING" },
        { PARSEB_LEAPSECOND, "LEAP SECOND" },
        { PARSEB_ALTERNATE,"ALTERNATE ANTENNA" },
        { PARSEB_TIMECODE, "TIME CODE" },
***************
*** 194,200 ****
  	  parsetime_t parsetime;
  	  struct strioctl strioc;
  	  
! 	  printf("parsetest.c,v 3.13 1994/02/20 13:04:46 kardel Exp\n");
  	  
  	  while (ioctl(fd, I_POP, 0) == 0)
  	    ;
--- 198,204 ----
  	  parsetime_t parsetime;
  	  struct strioctl strioc;
  	  
! 	  printf("parsetest.c,v 3.11 1994/01/23 19:00:01 kardel Exp\n");
  	  
  	  while (ioctl(fd, I_POP, 0) == 0)
  	    ;
***************
*** 215,221 ****
  	      perror("ioctl(fd, I_STR(PARSEIOC_GETSTAT))");
  	      exit(1);
  	    }
! 	  printf("parse status: %04x\n", dct.parsestatus.flags);

  	  dct.parsestatus.flags |= PARSE_STAT_FILTER;
  	  strioc.ic_cmd = PARSEIOC_SETSTAT;
--- 219,225 ----
  	      perror("ioctl(fd, I_STR(PARSEIOC_GETSTAT))");
  	      exit(1);
  	    }
! 	  printf("parse status: %04lx\n", (unsigned long)dct.parsestatus.flags);

  	  dct.parsestatus.flags |= PARSE_STAT_FILTER;
  	  strioc.ic_cmd = PARSEIOC_SETSTAT;
***************
*** 232,238 ****
  	      perror("ioctl(fd, I_STR(PARSEIOC_GETSTAT))");
  	      exit(1);
  	    }
! 	  printf("parse status: %04x\n", dct.parsestatus.flags);

  	  while (read(fd, &parsetime, sizeof(parsetime)) == sizeof(parsetime))
  	    {
--- 236,242 ----
  	      perror("ioctl(fd, I_STR(PARSEIOC_GETSTAT))");
  	      exit(1);
  	    }
! 	  printf("parse status: %04lx\n", (unsigned long)dct.parsestatus.flags);

  	  while (read(fd, &parsetime, sizeof(parsetime)) == sizeof(parsetime))
  	    {
***************
*** 245,259 ****
  	      tmp1[24] = '\0';
  	      tmp2[24] = '\0';

! 	      printf("%s (+%06dus) %s PPS: %s (+%06dus), ", tmp1, parsetime.parse_stime.tv.tv_usec, tmp, tmp2, parsetime.parse_ptime.tv.tv_usec);

  	      strstatus(tmp, parsetime.parse_state);
! 	      printf("state: 0x%x (%s) error: %dus, dispersion: %dus, Status: 0x%x (%s)\n",
! 		     parsetime.parse_state,
  		     tmp,
! 		     parsetime.parse_usecerror,
! 		     parsetime.parse_usecdisp,
! 		     parsetime.parse_status,
  		     parsestatus(parsetime.parse_status, tmp1));
  	    }
  	  
--- 249,264 ----
  	      tmp1[24] = '\0';
  	      tmp2[24] = '\0';

! 	      printf("%s (+%06ldus) %s PPS: %s (+%06ldus), ", tmp1, (long int)parsetime.parse_stime.tv.tv_usec, tmp, tmp2,
! 		     (long int)parsetime.parse_ptime.tv.tv_usec);

  	      strstatus(tmp, parsetime.parse_state);
! 	      printf("state: 0x%lx (%s) error: %ldus, dispersion: %ldus, Status: 0x%lx (%s)\n",
! 		     (unsigned long)parsetime.parse_state,
  		     tmp,
! 		     (long)parsetime.parse_usecerror,
! 		     (long)parsetime.parse_usecdisp,
! 		     (unsigned long)parsetime.parse_status,
  		     parsestatus(parsetime.parse_status, tmp1));
  	    }
*** xntpdc/ntpdc_ops.c  Fri May 13 02:06:34 1994
--- xntpdc/ntpdc_ops.c Fri May 13 02:28:04 1994
***************
*** 1337,1344 ****
                if (flagstr[0] == '\0')
                        (void) strcpy(flagstr, "none");
  
!               (void) fprintf(fp, "%-15.15s %-15.15s %9d  %s\n",
!                   addr, mask, count, flagstr);
                rl++;
                items--;
        }
--- 1337,1344 ----
                if (flagstr[0] == '\0')
                        (void) strcpy(flagstr, "none");
  
!               (void) fprintf(fp, "%-15.15s %-15.15s %9ld  %s\n",
!                   addr, mask, (long int)count, flagstr);
                rl++;
                items--;
        }

  	  
-- 
	   Frank Kardel (kardel@informatik.uni-erlangen.de)
    All SCSI disks will from now on be required to send an email
         notice 24 hours prior to complete hardware failure!

